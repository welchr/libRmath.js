{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap dd1ad7f26760456f7eca?e7aa","webpack:///./src/lib/common/_general.ts?ba5a","webpack:///./~/debug/src/browser.js?13f9","webpack:///./src/lib/r-func.ts?c8a4","webpack:///./src/lib/exp/expm1.ts?55c8","webpack:///./src/lib/gamma/lgamma_fn.ts?3137","webpack:///./src/lib/rng/mersenne-twister/index.ts?d283","webpack:///./src/lib/normal/qnorm.ts?bfd1","webpack:///./src/lib/rng/normal/index.ts?1171","webpack:///./src/lib/common/toms708/index.ts?2b4a","webpack:///./src/lib/rng/irng.ts?77a8","webpack:///./src/lib/rng/timeseed.ts?9495","webpack:///./src/lib/beta/lbeta.ts?2706","webpack:///./src/lib/beta/pbeta.ts?dfcf","webpack:///./src/lib/chi-2/rchisq.ts?36a7","webpack:///./src/lib/rng/irng-type.ts?e800","webpack:///./src/lib/rng/normal/inormal-rng.ts?d477","webpack:///./src/lib/rng/index.ts?a0e8","webpack:///./src/lib/binomial/dbinom.ts?d17a","webpack:///./src/lib/gamma/pgamma.ts?8b08","webpack:///./src/lib/normal/pnorm.ts?9f82","webpack:///./src/lib/rng/fixup.ts?94b3","webpack:///./src/lib/gamma/dgamma.ts?041e","webpack:///./src/lib/poisson/dpois.ts?da8a","webpack:///./src/lib/trigonometry/cospi.ts?e20a","webpack:///./src/lib/trigonometry/sinpi.ts?2910","webpack:///./src/lib/gamma/index.ts?e0f0","webpack:///./src/lib/bessel/bessel-constants.ts?f480","webpack:///./src/lib/common/choose.ts?3c68","webpack:///./src/lib/exp/sexp.ts?fb88","webpack:///./src/lib/gamma/gamma_fn.ts?48ae","webpack:///./src/lib/gamma/rgamma.ts?c027","webpack:///./src/lib/normal/dnorm.ts?ed4d","webpack:///./src/lib/poisson/rpois.ts?3407","webpack:///./src/lib/trigonometry/index.ts?ea40","webpack:///./src/lib/beta/index.ts?f7a2","webpack:///./src/lib/beta/pnbeta.ts?08f3","webpack:///./src/lib/binomial/rbinom.ts?0618","webpack:///./src/lib/chebyshev/chebyshev.ts?e1a8","webpack:///./src/lib/chi-2/pchisq.ts?843f","webpack:///./src/lib/chi-2/pnchisq.ts?e5a1","webpack:///./src/lib/chi-2/qchisq.ts?8e6c","webpack:///./src/lib/chi-2/rnchisq.ts?7107","webpack:///./src/lib/gamma/lgammacor.ts?9c80","webpack:///./src/lib/normal/rnorm.ts?eb07","webpack:///./src/lib/stirling/index.ts?71de","webpack:///./src/lib/student-t/dt.ts?50ac","webpack:///./src/lib/student-t/pnt.ts?bd8c","webpack:///./src/lib/student-t/pt.ts?c599","webpack:///./src/lib/wilcoxon/WilcoxonCache.ts?9144","webpack:///./src/lib/wilcoxon/cwilcox.ts?9b06","webpack:///./src/lib/bessel/besselJ/index.ts?0df9","webpack:///./src/lib/bessel/besselK/index.ts?9f44","webpack:///./src/lib/bessel/besselY/index.ts?653c","webpack:///./src/lib/beta/dbeta.ts?0a91","webpack:///./src/lib/beta/dnbeta.ts?d199","webpack:///./src/lib/beta/qbeta.ts?03cf","webpack:///./src/lib/beta/qnbeta.ts?92ac","webpack:///./src/lib/binomial-negative/pnbinom.ts?4223","webpack:///./src/lib/binomial/pbinom.ts?138e","webpack:///./src/lib/binomial/qbinom.ts?2180","webpack:///./src/lib/chi-2/dchisq.ts?5ba5","webpack:///./src/lib/chi-2/dnchisq.ts?5415","webpack:///./src/lib/chi-2/qnchisq.ts?a383","webpack:///./src/lib/common/toms708/NumberW.ts?fcbb","webpack:///./src/lib/deviance/bd0.ts?4687","webpack:///./src/lib/deviance/index.ts?1e7c","webpack:///./src/lib/gamma/gamma_cody.ts?0a11","webpack:///./src/lib/gamma/lgammafn_sign.ts?0c2f","webpack:///./src/lib/gamma/qgamma.ts?2820","webpack:///./src/lib/hypergeometric/dhyper.ts?18c2","webpack:///./src/lib/hypergeometric/qhyper.ts?c2a7","webpack:///./src/lib/poisson/ppois.ts?ea91","webpack:///./src/lib/rng/normal/inversion.ts?834c","webpack:///./src/lib/signrank/signrank.ts?0191","webpack:///./src/lib/stirling/stirlerror.ts?28a3","webpack:///./src/lib/student-t/qt.ts?1a54","webpack:///./src/lib/trigonometry/tanpi.ts?4083","webpack:///./src/lib/tukey/ptukey.ts?0625","webpack:///./src/lib/bessel/index.ts?e091","webpack:///./src/lib/binomial-negative/index.ts?3b6e","webpack:///./src/lib/binomial/index.ts?2a88","webpack:///./src/lib/cauchy/index.ts?4058","webpack:///./src/lib/chebyshev/index.ts?dfe6","webpack:///./src/lib/chi-2/index.ts?4263","webpack:///./src/lib/common/index.ts?e89f","webpack:///./src/lib/exp/index.ts?c45b","webpack:///./src/lib/f-distro/index.ts?0d36","webpack:///./src/lib/geometric/index.ts?26b4","webpack:///./src/lib/hypergeometric/index.ts?7070","webpack:///./src/lib/logis/index.ts?8f8d","webpack:///./src/lib/lognormal/index.ts?bba3","webpack:///./src/lib/multinom/index.ts?0192","webpack:///./src/lib/normal/index.ts?fd1e","webpack:///./src/lib/poisson/index.ts?457c","webpack:///./src/lib/signrank/index.ts?23f8","webpack:///./src/lib/student-t/index.ts?10b1","webpack:///./src/lib/tukey/index.ts?b2d6","webpack:///./src/lib/uniform/index.ts?eeef","webpack:///./src/lib/weibull/index.ts?2109","webpack:///./src/lib/wilcoxon/index.ts?5882","webpack:///./src/lib/bessel/besselI/IBessel.ts?dfac","webpack:///./src/lib/bessel/besselI/index.ts?33a4","webpack:///./src/lib/bessel/besselJ/Jbessel.ts?9afb","webpack:///./src/lib/bessel/besselK/Kbessel.ts?0c20","webpack:///./src/lib/bessel/besselY/Ybessel.ts?8e3d","webpack:///./src/lib/beta/beta.ts?4224","webpack:///./src/lib/beta/rbeta.ts?41dc","webpack:///./src/lib/binomial-negative/dnbinom.ts?d730","webpack:///./src/lib/binomial-negative/qnbinom.ts?0135","webpack:///./src/lib/binomial-negative/rnbinom.ts?b754","webpack:///./src/lib/cauchy/dcauchy.ts?4dcc","webpack:///./src/lib/cauchy/pcauchy.ts?91b5","webpack:///./src/lib/cauchy/qcauchy.ts?63b7","webpack:///./src/lib/cauchy/rcauchy.ts?c198","webpack:///./src/lib/common/toms708/toms708.ts?d5e0","webpack:///./src/lib/exp/dexp.ts?ee27","webpack:///./src/lib/exp/pexp.ts?12af","webpack:///./src/lib/exp/qexp.ts?aa35","webpack:///./src/lib/exp/rexp.ts?263e","webpack:///./src/lib/f-distro/df.ts?2e81","webpack:///./src/lib/f-distro/dnf.ts?4f6a","webpack:///./src/lib/f-distro/pf.ts?ee4d","webpack:///./src/lib/f-distro/pnf.ts?a00a","webpack:///./src/lib/f-distro/qf.ts?4ae0","webpack:///./src/lib/f-distro/qnf.ts?58af","webpack:///./src/lib/f-distro/rf.ts?e3aa","webpack:///./src/lib/gamma/logspace-add.ts?947a","webpack:///./src/lib/gamma/polygamma.ts?1e4d","webpack:///./src/lib/geometric/dgeom.ts?37ba","webpack:///./src/lib/geometric/pgeom.ts?abeb","webpack:///./src/lib/geometric/qgeom.ts?7bee","webpack:///./src/lib/geometric/rgeom.ts?ba09","webpack:///./src/lib/hypergeometric/lfastchoose.ts?9d71","webpack:///./src/lib/hypergeometric/phyper.ts?f4d7","webpack:///./src/lib/hypergeometric/rhyper.ts?2b54","webpack:///./src/lib/index.ts?6823","webpack:///./src/lib/logis/dlogis.ts?ee51","webpack:///./src/lib/logis/plogis.ts?c834","webpack:///./src/lib/logis/qlogis.ts?300c","webpack:///./src/lib/logis/rlogis.ts?c794","webpack:///./src/lib/lognormal/dlnorm.ts?30a6","webpack:///./src/lib/lognormal/plnorm.ts?e649","webpack:///./src/lib/lognormal/qlnorm.ts?6f00","webpack:///./src/lib/lognormal/rlnorm.ts?0fd5","webpack:///./src/lib/multinom/dmultinom.ts?d16a","webpack:///./src/lib/multinom/rmultinom.ts?597c","webpack:///./src/lib/poisson/qpois.ts?12d6","webpack:///./src/lib/rng/knuth-taocp-2002/index.ts?9de5","webpack:///./src/lib/rng/knuth-taocp/index.ts?da7b","webpack:///./src/lib/rng/knuth-taocp/taocp-1997-init.ts?1030","webpack:///./src/lib/rng/lecuyer-cmrg/index.ts?45b3","webpack:///./src/lib/rng/marsaglia-multicarry/index.ts?ef2e","webpack:///./src/lib/rng/normal/ahrens_dieter.ts?ec15","webpack:///./src/lib/rng/normal/box-muller.ts?998b","webpack:///./src/lib/rng/normal/buggy-kinderman-ramage.ts?3293","webpack:///./src/lib/rng/normal/kinderman-ramage.ts?565c","webpack:///./src/lib/rng/super-duper/index.ts?78d2","webpack:///./src/lib/rng/wichmann-hill/index.ts?e7fc","webpack:///./src/lib/signrank/csignrank.ts?41b6","webpack:///./src/lib/signrank/dsign.ts?ef00","webpack:///./src/lib/signrank/fsign.ts?1ce5","webpack:///./src/lib/signrank/psign.ts?ecf8","webpack:///./src/lib/signrank/qsign.ts?4dee","webpack:///./src/lib/signrank/rsign.ts?f1cd","webpack:///./src/lib/student-t/dnt.ts?be39","webpack:///./src/lib/student-t/qnt.ts?8699","webpack:///./src/lib/student-t/rt.ts?42e0","webpack:///./src/lib/tukey/qtukey.ts?8f5b","webpack:///./src/lib/tukey/wprob.ts?9134","webpack:///./src/lib/uniform/dunif.ts?f9e1","webpack:///./src/lib/uniform/punif.ts?c2ba","webpack:///./src/lib/uniform/qunif.ts?860f","webpack:///./src/lib/uniform/runif.ts?fafb","webpack:///./src/lib/weibull/dweibull.ts?40af","webpack:///./src/lib/weibull/pweibull.ts?aad7","webpack:///./src/lib/weibull/qweibull.ts?dce9","webpack:///./src/lib/weibull/rweibull.ts?8566","webpack:///./src/lib/wilcoxon/dwilcox.ts?5e40","webpack:///./src/lib/wilcoxon/pwilcox.ts?e696","webpack:///./src/lib/wilcoxon/qwilcox.ts?c140","webpack:///./src/lib/wilcoxon/rwilcox.ts?64d8","webpack:///./~/debug/src/debug.js?2d8e","webpack:///./~/ms/index.js?6d36","webpack:///./~/process/browser.js?82e4"],"names":[],"mappings":"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CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;IAChD,CAAC;IACD,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AALD,sCAKC;AAGD,iBAAwB,IAAa,EAAE,CAAS;IAC9C,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAFD,0BAEC;;;;;;;ACxgBD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;A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;;AAEA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB,4BAA4B;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AChOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvJA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU","file":"libR.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"libR\"] = factory();\n\telse\n\t\troot[\"libR\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 135);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dd1ad7f26760456f7eca","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nconst debug_R_Q_P01_boundaries = debug('R_Q_P01_boundaries');\nconst debug_R_Q_P01_check = debug('R_Q_P01_check');\n\nexport const M_SQRT2 = 1.41421356237309504880168872421; /* sqrt(2) */\nexport const frac = (x: number) => x - Math.trunc(x);\n//export const DBL_MAX_10_EXP = Math.log10(Number.MAX_VALUE);\n//export const MAX_DIGITS = DBL_MAX_10_EXP;\n//export const INT_MAX = Number.MAX_SAFE_INTEGER;\n//export const INT_MIN = Number.MIN_SAFE_INTEGER;\nexport const M_SQRT_32 = 5.656854249492380195206754896838; /* sqrt(32) */\nexport const DBL_MANT_DIG = 18;\n//export const FLT_MANT_DIG = DBL_MANT_DIG;\nexport const M_LN2 = 0.693147180559945309417232121458; /* ln(2) */\nexport const M_1_SQRT_2PI = 0.398942280401432677939946059934;\n//export const nearbyint = rround;\n//export const R_forceint = nearbyint;\n//export const R_rint = nearbyint;\nexport const M_2PI = 6.283185307179586476925286766559;\nexport const M_LN_2PI = 1.837877066409345483560659472811; /* \n   6.0E-17, we used the comments in the nmath lib to find epsilon that fullfills x == x-epsilon\n   this does not cover the internal accurace of build in functions in Math.cos, Math.sin etc\n*/\n/*export const sqrt = Math.sqrt;\nexport const asin = Math.asin;\nexport const acos = Math.acos;\nexport const atan = Math.atan;\nexport const atan2 = Math.atan2;\n*/ /*export const DBL_EPSILON = Number.EPSILON;\nexport const sinh = Math.sinh;\nexport const DBL_MAX = Number.MAX_VALUE;\nexport const exp = Math.exp;\nexport const isInteger = Number.isInteger;\nexport const sin = Math.sin;\nexport const cos = Math.cos;\nexport const tan = Math.tan;\n*/ export const M_1_PI =\n  1.0 / Math.PI;\n/*export const R_FINITE = (x: number) => Number.isFinite(x);\nexport const NaN = Number.NaN;\nexport const FLT_MIN = 2.22507e-308; //10^24  larger then Number.MIN_VALUE\nexport const DBL_MIN = FLT_MIN;\nexport const log = Math.log;\nexport const ISNAN = Number.isNaN;\nexport const ML_NAN = NaN;\nexport const round = Math.round;\nexport const ML_POSINF = Number.POSITIVE_INFINITY;\nexport const ML_NEGINF = Number.NEGATIVE_INFINITY;\nexport const M_PI = 3.14159265358979323846264338327950288;\n*/ export const M_PI_2 =\n  Math.PI / 2;\nexport const M_LN_SQRT_PI = 0.57236494292470008; // log(sqrt(pi))\nexport const M_LN_SQRT_2PI = 0.918938533204672741780329736406; // log(sqrt(2*pi))\nexport const M_LN_SQRT_PId2 = 0.225791352644727432363097614947; // log(sqrt(pi/2))\n//export const M_LN10 = 2.30258509299404568402; /* log_e 10 */\n//export const ML_VALID = (x: number) => !ISNAN(x);\n//export const floor = Math.floor;\nexport const M_SQRT_2dPI = 0.797884560802865355879892119869; // sqrt(2/pi)\nexport const M_LOG10_2 = 0.301029995663981195213738894724; //Math.log10(2);\n//export const FLT_RADIX = 2;\n//export const CHAR_BIT = 8;\nexport const DBL_MAX_EXP = Math.log2(Number.MAX_VALUE);\nexport const DBL_MIN_EXP = Math.log2(Number.MIN_VALUE);\n//export const FLT_MAX_EXP = DBL_MAX_EXP;\n//export const FLT_MIN_EXP = DBL_MIN_EXP;\n//export const sizeofInt =\n//  4 * Math.ceil(Math.log(Number.MAX_SAFE_INTEGER) / Math.log(2) / 4 / CHAR_BIT);\n\nexport const R_D__1 = (logP: boolean) => {\n  return logP ? 0 : 1.0;\n};\n\nexport const R_D__0 = (logP: boolean): number => {\n  return logP ? Number.NEGATIVE_INFINITY : 0.0;\n};\n\nexport const R_DT_0 = (lower_tail: boolean, log_p: boolean): number => {\n  return lower_tail ? R_D__0(log_p) : R_D__1(log_p);\n};\nexport const R_DT_1 = (lower_tail: boolean, log_p: boolean): number => {\n  return lower_tail ? R_D__1(log_p) : R_D__0(log_p);\n};\nexport const R_D_val = (log_p: boolean, x: number) => {\n  return log_p ? Math.log(x) : x;\n};\n\nexport function R_D_Clog(log_p: boolean, p: number): number {\n  return log_p ? Math.log1p(-p) : 0.5 - p + 0.5; /* [log](1-p) */\n}\n\nexport function R_DT_val(lower_tail: boolean, log_p: boolean, x: number) {\n  return lower_tail ? R_D_val(log_p, x) : R_D_Clog(log_p, x);\n}\n\n/*\nexport function rround(x: number) {\n  if (x < 0) {\n    return trunc(x - 0.5);\n  }\n  return trunc(x + 0.5);\n}\n*/\nexport function imin2(x: number, y: number): number {\n  return Math.trunc(Math.min(x, y));\n}\n\n/* Use 0.5 - p + 0.5 to perhaps gain 1 bit of accuracy */\nexport function R_D_Lval(lowerTail: boolean, p: number): number {\n  return lowerTail ? p : 1 - p; /*  p  */\n}\n\nexport function R_D_Cval(lowerTail: boolean, p: number): number {\n  return lowerTail ? 1 - p : p; /*  1 - p */\n}\n\nexport function R_P_bounds_Inf_01(\n  lowerTail: boolean,\n  log_p: boolean,\n  x: number\n): number | undefined {\n  if (!Number.isFinite(x)) {\n    if (x > 0) {\n      return R_DT_1(lowerTail, log_p);\n    }\n    return R_DT_0(lowerTail, log_p);\n  }\n  return undefined;\n}\n\nexport function R_D_half(log_p: boolean) {\n  return log_p ? -M_LN2 : 0.5; // 1/2 (lower- or upper tail)\n}\n\nexport function R_P_bounds_01(\n  lower_tail: boolean,\n  log_p: boolean,\n  x: number,\n  x_min: number,\n  x_max: number\n): number | undefined {\n  if (x <= x_min) return R_DT_0(lower_tail, log_p);\n  if (x >= x_max) return R_DT_1(lower_tail, log_p);\n  return undefined;\n}\n\nexport const R_D_exp = (log_p: boolean, x: number): number => {\n  return log_p ? x : Math.exp(x);\n  /* exp(x) */\n};\n\nexport enum ME {\n  ME_NONE = 0, // no error\n  ME_DOMAIN = 1, // argument out of domain\n  ME_RANGE = 2, //  value out of range\n  ME_NOCONV = 4, //process did not converge\n  ME_PRECISION = 8, //does not have \"full\" precision\n  ME_UNDERFLOW = 16 // and underflow occured (important for IEEE)\n}\n/*\nexport const min0 = (x: number, y: number): number => {\n  return x <= y ? x : y;\n};\nexport const max0 = (x: number, y: number): number => {\n  return x <= y ? y : x;\n};\n*/\nexport const mapErr = new Map([\n  [ME.ME_NONE, 'No error'],\n  [ME.ME_DOMAIN, \"argument out of domain in '%s'\"],\n  [ME.ME_RANGE, \"argument out of domain in '%s'\"],\n  [ME.ME_NOCONV, \"convergence failed in '%s'\"],\n  [ME.ME_PRECISION, \"full precision may not have been achieved in '%s'\"],\n  [ME.ME_UNDERFLOW, \"underflow occurred in '%s'\"]\n]);\n\nexport const ML_ERROR = (x: ME, s: any, printer: debug.IDebugger) => {\n  const str = mapErr.get(x);\n  if (str) {\n    printer(str, s);\n  }\n};\n\nexport function ML_ERR_return_NAN(printer: debug.IDebugger) {\n  ML_ERROR(ME.ME_DOMAIN, '', printer);\n  return Number.NaN;\n}\n\nexport function R_D_nonint_check(\n  log: boolean,\n  x: number,\n  printer: debug.IDebugger\n) {\n  if (R_nonint(x)) {\n    printer('non-integer x = %d', x);\n    return R_D__0(log);\n  }\n  return undefined;\n}\n\nexport function fmod(x: number, y: number): number {\n  // 4.2 % 0.1 gives 0.099999999\n  // this is wong so...\n  return x - Math.trunc(x / y) * y;\n}\n\nexport function imax2(x: number, y: number): number {\n  return Math.trunc(Math.max(x, y));\n}\n\nexport function isOdd(k: number) {\n  return Math.floor(k) % 2 === 1;\n}\n\nexport function epsilonNear(x: number, target: number): number {\n  if (Number.isNaN(x)) return x;\n  if (!isFinite(x)) return x;\n  if (Number.isNaN(target)) return x;\n  if (!isFinite(target)) return x;\n\n  let diff = x - target;\n  if (diff > Number.EPSILON || diff < -Number.EPSILON) {\n    return x;\n  }\n  return target;\n}\n\nexport function isEpsilonNear(x: number, target: number): boolean {\n  if (isFinite(x) && isFinite(target)) return epsilonNear(x, target) === target;\n  return false;\n}\n\n/*\nexport function Rf_d1mach(i: number): number {\n  switch (i) {\n    case 1:\n      return Number.MIN_VALUE;\n    case 2:\n      return Number.MAX_VALUE;\n\n    case 3:\n      // = FLT_RADIX  ^ - DBL_MANT_DIG\n      //  for IEEE:  = 2^-53 = 1.110223e-16 = .5*DBL_EPSILON \n      return 0.5 * Number.EPSILON;\n\n    case 4:\n      // = FLT_RADIX  ^ (1- DBL_MANT_DIG) =\n      //     for IEEE:  = 2^-52 = DBL_EPSILON \n      return Number.EPSILON;\n\n    case 5:\n      return M_LOG10_2;\n\n    default:\n      return 0.0;\n  }\n}\n*/\nexport function R_D_negInonint(x: number) {\n  return x < 0.0 || R_nonint(x);\n}\n\nexport function R_nonint(x: number) {\n  return !Number.isInteger(x); //Math.abs(x - Math.round(x)) > 1e-7 * Math.max(1, Math.abs(x));\n}\n\nexport function R_D_fexp(give_log: boolean, f: number, x: number): number {\n  return give_log ? -0.5 * Math.log(f) + x : Math.exp(x) / Math.sqrt(f);\n}\n\n/** bessel section */\n/** bessel section */\n/** bessel section */\n\nexport const nsig_BESS = 16;\nexport const ensig_BESS = 1e16;\nexport const rtnsig_BESS = 1e-4;\nexport const enmten_BESS = 8.9e-308;\nexport const enten_BESS = 1e308;\n\nexport const exparg_BESS = 709;\nexport const xlrg_BESS_IJ = 1e5;\nexport const xlrg_BESS_Y = 1e8;\nexport const thresh_BESS_Y = 16;\n\nexport const xmax_BESS_K = 705.342; /* maximal x for UNscaled answer */\n\n/* sqrt(DBL_MIN) =\t1.491668e-154 */\nexport const sqxmin_BESS_K = 1.49e-154;\n\n/* x < eps_sinc\t <==>  sin(x)/x == 1 (particularly \"==>\");\n  Linux (around 2001-02) gives 2.14946906753213e-08\n  Solaris 2.5.1\t\t gives 2.14911933289084e-08\n*/\nexport const M_eps_sinc = 2.149e-8;\n\nexport function R_pow_di(x: number, n: number) {\n  let pow: number = 1.0;\n\n  if (Number.isNaN(x)) return x;\n  if (n !== 0) {\n    if (!Number.isFinite(x)) return R_pow(x, n);\n    if (n < 0) {\n      n = -n;\n      x = 1 / x;\n    }\n    while (true) {\n      if (n & 1) pow *= x;\n      if ((n >>= 1)) x *= x;\n      else break;\n    }\n  }\n  return pow;\n}\n\n//export const NA_REAL = ML_NAN;\n//export const R_PosInf = ML_POSINF;\n//export const R_NegInf = ML_NEGINF;\n\nexport function R_pow(x: number, y: number): number {\n  /* = x ^ y */\n\n  /* squaring is the most common of the specially handled cases so\n       check for it first. */\n  if (y === 2.0) return x * x;\n  if (x === 1 || y === 0) return 1;\n  if (x === 0) {\n    if (y > 0) return 0;\n    else if (y < 0) return Number.POSITIVE_INFINITY;\n    else return y; /* NA or NaN, we assert */\n  }\n  if (Number.isFinite(x) && Number.isFinite(y)) {\n    /* There was a special case for y == 0.5 here, but\n           gcc 4.3.0 -g -O2 mis-compiled it.  Showed up with\n           100^0.5 as 3.162278, example(pbirthday) failed. */\n    return Math.pow(x, y);\n  }\n  if (Number.isNaN(x) || Number.isNaN(y)) return x + y;\n  if (!Number.isFinite(x)) {\n    if (x > 0)\n      /* Inf ^ y */\n      return y < 0 ? 0 : Number.POSITIVE_INFINITY;\n    else {\n      /* (-Inf) ^ y */\n      if (Number.isFinite(y) && y === Math.floor(y))\n        /* (-Inf) ^ n */\n        return y < 0 ? 0 : myfmod(y, 2) ? x : -x;\n    }\n  }\n  if (!Number.isFinite(y)) {\n    if (x >= 0) {\n      if (y > 0)\n        /* y == +Inf */\n        return x >= 1 ? Number.POSITIVE_INFINITY : 0; /* y == -Inf */\n      else return x < 1 ? Number.POSITIVE_INFINITY : 0;\n    }\n  }\n  return NaN; // all other cases: (-Inf)^{+-Inf, non-int}; (neg)^{+-Inf}\n}\n\nexport const R_finite = (x: number) => !Number.isFinite(x);\n\n/* C++ math header undefines any isnan macro. This file\n   doesn't get C++ headers and so is safe. */\nexport const R_isnancpp = (x: number) => Number.isNaN(x);\n\nexport function myfmod(x1: number, x2: number) {\n  let q = x1 / x2;\n  return x1 - Math.floor(q) * x2;\n}\n\nexport function R_powV(x: number, y: number): number /* = x ^ y */ {\n  if (x === 1 || y === 0) return 1;\n  if (x === 0) {\n    if (y > 0) return 0;\n    /* y < 0 */ return Number.POSITIVE_INFINITY;\n  }\n  if (Number.isFinite(x) && Number.isFinite(y)) return Math.pow(x, y);\n  if (Number.isNaN(x) || Number.isNaN(y)) {\n    return x + y;\n  }\n  if (!Number.isFinite(x)) {\n    if (x > 0)\n      /* Inf ^ y */\n      return y < 0 ? 0 : Number.POSITIVE_INFINITY;\n    else {\n      /* (-Inf) ^ y */\n      if (Number.isFinite(y) && y === Math.floor(y))\n        /* (-Inf) ^ n */\n        return y < 0 ? 0 : myfmod(y, 2) ? x : -x;\n    }\n  }\n  if (!Number.isFinite(y)) {\n    if (x >= 0) {\n      if (y > 0)\n        /* y == +Inf */\n        return x >= 1 ? Number.POSITIVE_INFINITY : 0; /* y == -Inf */\n      else return x < 1 ? Number.POSITIVE_INFINITY : 0;\n    }\n  }\n  return NaN; /* all other cases: (-Inf)^{+-Inf,\n                   non-int}; (neg)^{+-Inf} */\n}\n\n//  return x * Math.pow(2,y)\nexport function ldexp(x: number, y: number): number {\n  if (Number.isNaN(x) || Number.isNaN(y)) {\n    return x + y;\n  }\n  if (!Number.isFinite(x) || !Number.isFinite(y)) {\n    return Number.POSITIVE_INFINITY;\n  }\n  return x * Math.pow(2, y);\n}\n\n/*\nexport function Rf_i1mach(i: number): number {\n  switch (i) {\n    case 1:\n      return 5;\n    case 2:\n      return 6;\n    case 3:\n      return 0;\n    case 4:\n      return 0;\n\n    case 5:\n      return CHAR_BIT * sizeofInt;\n    case 6:\n      return sizeofInt;\n\n    case 7:\n      return 2;\n    case 8:\n      return CHAR_BIT * sizeofInt - 1;\n    case 9:\n      return INT_MAX;\n\n    case 10:\n      return FLT_RADIX;\n\n    case 11:\n      return FLT_MANT_DIG;\n    case 12:\n      return FLT_MIN_EXP;\n    case 13:\n      return FLT_MAX_EXP;\n\n    case 14:\n      return DBL_MANT_DIG;\n    case 15:\n      return DBL_MIN_EXP;\n    case 16:\n      return DBL_MAX_EXP;\n\n    default:\n      return 0;\n  }\n}\n*/\n\n/*\nexport function iF77_NAME(i: number) {\n  return Rf_i1mach(i);\n}\n*/\n\nexport function R_D_log(log_p: boolean, p: number) {\n  return log_p ? p : Math.log(p); /* log(p) */\n}\n\nexport function R_Q_P01_boundaries(\n  lower_tail: boolean,\n  log_p: boolean,\n  p: number,\n  _LEFT_: number,\n  _RIGHT_: number\n): number | undefined {\n  if (log_p) {\n    if (p > 0) {\n      return ML_ERR_return_NAN(debug_R_Q_P01_boundaries);\n    }\n    if (p === 0)\n      /* upper bound*/\n      return lower_tail ? _RIGHT_ : _LEFT_;\n    if (p === Number.NEGATIVE_INFINITY) return lower_tail ? _LEFT_ : _RIGHT_;\n  } else {\n    /* !log_p */\n    if (p < 0 || p > 1) {\n      return ML_ERR_return_NAN(debug_R_Q_P01_boundaries);\n    }\n    if (p === 0) return lower_tail ? _LEFT_ : _RIGHT_;\n    if (p === 1) return lower_tail ? _RIGHT_ : _LEFT_;\n  }\n  return undefined;\n}\n\nexport function R_Q_P01_check(logP: boolean, p: number): number | undefined {\n  if ((logP && p > 0) || (!logP && (p < 0 || p > 1))) {\n    return ML_ERR_return_NAN(debug_R_Q_P01_check);\n  }\n  return undefined;\n}\n\n//#define R_D_qIv(p)\t(log_p\t? exp(p) : (p))\t\t/*  p  in qF(p,..) */\nexport function R_D_qIv(logP: boolean, p: number) {\n  return logP ? Math.exp(p) : p;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/common/_general.ts","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/browser.js\n// module id = 1\n// module chunks = 0 1","\nconst { abs, sign, floor, trunc, max } = Math;\nconst { isNaN } = Number;\nconst { isArray } = Array;\n\nimport * as debug from 'debug';\n\nconst printer_seq = debug('seq');\nconst precision9 = numberPrecision(9);\n\nexport function isOdd(n: number): boolean {\n  if (isFinite(n)) {\n    return floor(n / 2) * 2 < n;\n  }\n  throw new Error(`Not a finite Number: ${n}`);\n}\n\nexport const seq = (adjust = 0) => (adjustMin = adjust) => (\n  start: number,\n  end?: number,\n  step: number = 1\n): number[] => {\n  if (end === undefined) {\n    if (start <= 0 || start === undefined) {\n      return []\n    }\n    end = 1;\n  }\n  let s = start + adjust;\n  let e = end + adjust;\n  let cursor = s;\n\n  if (end < start) {\n    e = start + adjustMin;\n    s = end + adjustMin;\n    cursor = e;\n  }\n  // wow: Chrome and FireFox give\n  // 0.4+0.2 = 0.6000000000000001\n  // so we use precision to have it make sense\n  // sometimes rounding effects try something diff\n  step = abs(step) * sign(end - start);\n  printer_seq('step:%d', step);\n\n  const rc: number[] = [];\n\n  do {\n    rc.push(cursor);\n    cursor += step;\n  } while (precision9(cursor) >= s && precision9(cursor) <= e && step !== 0);\n\n  return precision9(rc) as any;\n};\n\nexport function selector(...rest: (number | number[])[]): { (val: any, index: number): boolean; } {\n  const flat = flatten(rest);\n  return (val: any, idx: number) => {\n    return flat.indexOf(idx) >= 0;\n  };\n}\n\nexport function flatten<T>(...rest: (T | T[])[]): T[] {\n  let rc: number[] = [];\n  for (const itm of rest) {\n    if (isArray(itm)) {\n      let rc2: number[] = flatten(...itm) as any;\n      rc.push(...rc2);\n      continue;\n    }\n    rc.push(itm as any);\n  }\n  return rc as any;\n}\n\nexport function arrayrify<T, R>(fn: (x: T, ...rest: any[]) => R) {\n  return function(x: T | T[], ...rest: any[]): R | R[] {\n    const fp = Array.isArray(x) ? x : [x];\n    const result = fp.map(p => fn(p, ...rest));\n    return result.length === 1 ? result[0] : result;\n  };\n}\n\nexport function multiplex(fn: (...rest: (any | any[])[]) => any) {\n\n  return function(...rest: (any | any[])[]) {\n    return multiplexer(...rest)(fn);\n  };\n}\n\n\nexport function asArray(fn: (...rest: (any | any[])[]) => any) {\n\n  return function(...rest: (any | any[])[]) {\n    const ans = fn(...rest);\n    return Array.isArray(ans) ? ans : [ans];\n  };\n}\n\n\nfunction possibleScalar<T>(x: T[]): T | T[] {\n  return x.length === 1 ? x[0] : x;\n}\n\nexport { possibleScalar };\n\nfunction coerceToArray(o: any): { key: string | number, val: any }[] {\n  if (o === null || o === undefined) {\n    throw new TypeError('Illegal argument excepton: input needs to NOT be \"null\" or \"undefined\".');\n  }\n  if (typeof o === 'number') {\n    return [{ key: 0, val: o }] as any;\n  }\n  if (isArray(o)) {\n    return o.map((x, idx) => ({ key: idx, val: x }) as any);\n  }\n  if (typeof o === 'string') {\n    return o.split('').map((x, idx) => ({ key: idx, val: x } as any));\n  }\n  if (typeof o === 'object') {\n    const names = Object.getOwnPropertyNames(o);\n    if (names.length === 0) {\n      throw new Error('Input argument is an Object with no properties');\n    }\n    return names.map(name => ({ key: name, val: o[name] })) as any;\n  }\n  throw new Error('unreachable code');\n}\n\n\nexport function multiplexer(...rest: (any | any[])[]) {\n  //analyze  \n  const analyzed: any[] = [];\n\n  for (let k = 0; k < rest.length; k++) {\n    const arg = rest[k];\n    // null is special\n    if (arg === null) {\n      analyzed.push([arg]);\n      continue;\n    }\n    if (['undefined', 'boolean', 'number'].indexOf(typeof arg) >= 0) {\n      analyzed.push([arg]);\n      continue;\n    }\n    if (typeof arg === 'string') {\n      analyzed.push(arg.split(''));\n      continue;\n    }\n    if (Array.isArray(arg)) {\n      analyzed.push(arg);\n      continue;\n    }\n    if (arg instanceof Object) {\n      throw new Error('Sorry, looping over properties not yet supported');\n    }\n    if (arg instanceof Function) {\n      throw new Error('Sorry function arguments are not yet supported');\n    }\n  }//for\n  // find the longest array\n  const _max = max(...analyzed.map(a => a.length));\n\n  return function(fn: (...rest: any[]) => any): any | any[] {\n    const rc: any[] = [];\n\n    for (let k = 0; k < _max; k++) {\n      const result: any[] = [];\n      for (let j = 0; j < analyzed.length; j++) {\n        const arr: any[] = analyzed[j];\n        const idx = k % arr.length;\n        result.push(arr[idx]);\n      }\n      rc.push(fn(...result));\n    }\n    return possibleScalar(rc);\n  };\n}\n\n/**\n * \n *  xx can be an array or a \"pojo\"-object with properties\n * \n */\n\ntype ArrayElt = { key: string | number, val: any };\n\nfunction iter<T>(wantMap = true) {\n  return function(xx: T): { (fn: (x: any, idx?: number | string) => any): any | any[] } {\n    const fx: ArrayElt[] = coerceToArray(xx) as any;\n    return function(fn: (x: any, idx?: number | string) => any): any | any[] {\n      return wantMap ? possibleScalar(fx.map(o => fn(o.val, o.key))) : fx.forEach(o => fn(o.val, o.key));\n    };\n  }\n}\n\nexport const map = iter();\nexport const each = iter(false);\n\nexport function numberPrecision(prec: number = 6) {\n  function convert(x: number): number {\n    if (isNaN(x)) {\n      return NaN;\n    }\n    return Number.parseFloat(x.toPrecision(prec));\n  }\n\n  return arrayrify(convert);\n}\n\nexport function any<T>(x: T[]) {\n  return function(fn: any | ((v: T, i?: number) => boolean)): boolean {\n    if (fn instanceof Function) {\n      return x.find(fn) !== undefined;\n    }\n    return x.find(d => d === fn) !== undefined;\n  };\n}\n\nexport function sum(x: number[]) {\n  return flatten(x).reduce((sum, v) => (sum += v), 0);\n}\n\nexport const div = multiplex((a: number, b) => a / b);\nexport const mult = multiplex((a: number, b) => a * b);\n\nexport interface ISummary {\n  N: number; // number of samples in \"data\"\n  mu: number; // mean of \"data\"\n  population: {\n    variance: number, // population variance (data is seen as finite population)\n    sd: number // square root of the population variance\n  };\n  sample: {\n    variance: number, // sample variance (data is seen as a small sample from an very large population)\n    sd: number // square root of \"sample variance\"\n  };\n  relX; // = x-E(x)\n  relX2; // = ( x-E(x) )^2\n  stats: {\n    min: number, // minimal value from \"data\"\n    '1st Qu.': number, // 1st quantile from \"data\"\n    median: number, // median value from \"data\n    '3rd Qu.': number, // 3rd quantile from \"data\"\n    max: number // maximum value in data\n  };\n}\n\nexport function summary(x: number[]): ISummary {\n  if (!Array.isArray(x)) {\n    throw new Error(`Illigal argument, not an array`);\n  }\n  if (x.length === 0) {\n    throw new Error(`argument Array is empty`);\n  }\n  if (any(x)(v => isNaN(v))) {\n    throw new Error(`argument Array has NaNs`);\n  }\n\n  const N = x.length;\n  const mu = sum(x) / N;\n  const relX = x.map(v => v - mu);\n  const relX2 = relX.map(v => v * v);\n  const sampleVariance = sum(relX2) / (N - 1);\n  const populationVariance = sampleVariance * (N - 1) / N;\n  const sampleSD = Math.sqrt(sampleVariance);\n  const populationSD = Math.sqrt(populationVariance);\n  // quantiles\n  const o = x.sort((a, b) => a - b);\n  const min = o[0];\n  const max = o[N - 1];\n  //isOdd?\n  const { q1, median, q3 } = (function() {\n    const i = [4, 2, 4 / 3].map(v => (N - 1) / v);\n    const q = i.map(index => {\n      const f1 = 1 - (index - floor(index));\n      const f2 = 1 - f1;\n      return o[trunc(index)] * f1 + o[trunc(index) + 1] * f2;\n    });\n    return {\n      q1: q[0],\n      median: q[1],\n      q3: q[2]\n    };\n  })();\n  return {\n    N,\n    mu,\n    population: {\n      variance: populationVariance,\n      sd: populationSD\n    },\n    sample: {\n      variance: sampleVariance,\n      sd: sampleSD\n    },\n    relX,\n    relX2,\n    stats: {\n      min,\n      '1st Qu.': q1,\n      median,\n      '3rd Qu.': q3,\n      max\n    }\n  };\n}\n\n// https://en.wikipedia.org/wiki/Welch%E2%80%93Satterthwaite_equation\n\nexport function Welch_Satterthwaite(s: number[], n: number[]): number {\n\n  const elts = flatten(map(s)((_s, i) => {\n    return _s * _s / n[i as number];\n  }));\n  const dom = elts.map((e, i) => e * e / (n[i as number] - 1));\n\n  return Math.pow(sum(elts), 2) / sum(dom);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/r-func.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport {\n  M_LN2,\n  R_D_Cval,\n  R_D_log,\n  R_D_Lval\n} from '../common/_general';\n\n//import { log1p } from '../exp/expm1'log';\n\nconst { exp, expm1, log, log1p } = Math;\n\nfunction R_DT_qIv(lower_tail: boolean, log_p: boolean, p: number) {\n  return log_p ? (lower_tail ? exp(p) : -expm1(p)) : R_D_Lval(lower_tail, p);\n}\n\nfunction R_DT_CIv(lower_tail: boolean, log_p: boolean, p: number) {\n  return log_p ? (lower_tail ? -expm1(p) : exp(p)) : R_D_Cval(lower_tail, p);\n}\n\n/*\nexport function expm1(x: number) {\n\n    let y: number;\n    let a = fabs(x);\n\n    if (a < DBL_EPSILON) return x;\n    if (a > 0.697) return exp(x) - 1;  // negligible cancellation \n\n    if (a > 1e-8)\n        y = exp(x) - 1;\n    else // Taylor expansion, more accurate in this range \n        y = (x / 2 + 1) * x;\n\n    // Newton step for solving   log(1 + y) = x   for y : \n    // WARNING: does not work for y ~ -1: bug in 1.5.0 \n    y -= (1 + y) * (log1p(y) - x);\n    return y;\n}\n*/\n\nfunction R_D_LExp(log_p: boolean, x: number): number {\n  return log_p ? R_Log1_Exp(x) : log1p(-x);\n}\n\n// log(1 - exp(x))  in more stable form than log1p(- R_D_qIv(x)) :\nfunction R_Log1_Exp(x: number) {\n  if (x > -M_LN2) {\n    return log(-expm1(x));\n  }\n  return log1p(-exp(x));\n}\n\nfunction R_DT_Clog(lower_tail: boolean, log_p: boolean, p: number): number {\n  return lower_tail\n    ? R_D_LExp(log_p, p)\n    : R_D_log(log_p, p); /* log(1-p) in qF*/\n}\n\nfunction R_DT_log(lower_tail: boolean, log_p: boolean, p: number): number {\n  /* log(p) in qF */\n  return lower_tail ? R_D_log(log_p, p) : R_D_LExp(log_p, p);\n}\n\nexport { R_DT_qIv, R_DT_CIv, R_DT_log, R_DT_Clog, R_Log1_Exp, R_D_LExp };\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/expm1.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { map } from '../r-func';\nimport { lgammafn_sign } from './lgammafn_sign';\n\nexport function lgammafn<T>(x: T): T {\n  return map(x)(fx => {\n    return lgammafn_sign(fx);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/lgamma_fn.ts","'use strict';\n\n/* Port to Javascript from R by Jacob Bogers  2017*/\n/* ===================  Mersenne Twister ========================== */\n/* From http://www.math.keio.ac.jp/~matumoto/emt.html */\n\n/* A C-program for MT19937: Real number version([0,1)-interval)\n   (1999/10/28) genrand() generates one pseudorandom real number (double)\n   which is uniformly distributed on [0,1)-interval, for each\n   call. sgenrand(seed) sets initial values to the working area\n   of 624 words. Before genrand(), sgenrand(seed) must be\n   called once. (seed is any 32-bit integer.)\n   Integer generator is obtained by modifying two lines.\n     Coded by Takuji Nishimura, considering the suggestions by\n   Topher Cooper and Marc Rieffel in July-Aug. 1997.\n\n   Copyright (C) 1997, 1999 Makoto Matsumoto and Takuji Nishimura.\n   When you use this, send an email to: matumoto@math.keio.ac.jp\n   with an appropriate reference to your work.\n\n   REFERENCE\n   M. Matsumoto and T. Nishimura,\n   \"Mersenne Twister: A 623-Dimensionally Equidistributed Uniform\n   Pseudo-Random Number Generator\",\n   ACM Transactions on Modeling and Computer Simulation,\n   Vol. 8, No. 1, January 1998, pp 3--30.\n*/\n\n/* helpers */\n/* helpers */\n/* helpers */\nconst N = 624;\nconst M = 397;\n\nconst MATRIX_A = 0x9908b0df; /* constant vector a */\nconst UPPER_MASK = 0x80000000; /* most significant w-r bits */\nconst LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n/* Tempering parameters */\nconst TEMPERING_MASK_B = 0x9d2c5680;\nconst TEMPERING_MASK_C = 0xefc60000;\n//const TEMPERING_SHIFT_U = (y: number) => y >>> 11;\n//const TEMPERING_SHIFT_S = (y: number) => y << 7;\n//const TEMPERING_SHIFT_T = (y: number) => y << 15;\n//const TEMPERING_SHIFT_L = (y: number) => y >>> 18;\n\n\n\nimport { fixup } from '../fixup';\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\n\nconst SEED_LEN = 625;\n\nexport class MersenneTwister extends IRNG {\n\n  private m_seed: Int32Array;\n  private mt: Int32Array;\n  private mti: number;\n\n  \n  private MT_sgenrand(seed: number) {\n\n    for (let i = 0; i < N; i++) {\n      this.mt[i] = seed & 0xffff0000;\n      seed = 69069 * seed + 1;\n      this.mt[i] |= (seed & 0xffff0000) >>> 16;\n      seed = 69069 * seed + 1;\n    }\n    this.mti = N;\n  }\n\n  private MT_genrand() {\n    let y = new Int32Array(1);\n    let mag01 = new Int32Array([0x0, MATRIX_A]);\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\n    // ran_x points to the common buffer\n    const dummy = this.m_seed;\n\n    this.mti = dummy[0];\n\n    if (this.mti >= N) {\n      /* generate N words at one time */\n      let kk;\n\n      if (this.mti === N + 1)\n        /* if sgenrand() has not been called, */\n        this.MT_sgenrand(4357); /* a default initial seed is used   */\n\n      for (kk = 0; kk < N - M; kk++) {\n        y[0] = (this.mt[kk] & UPPER_MASK) | (this.mt[kk + 1] & LOWER_MASK);\n        this.mt[kk] = this.mt[kk + M] ^ (y[0] >>> 1) ^ mag01[y[0] & 0x1];\n      }\n      for (; kk < N - 1; kk++) {\n        y[0] = (this.mt[kk] & UPPER_MASK) | (this.mt[kk + 1] & LOWER_MASK);\n        this.mt[kk] = this.mt[kk + (M - N)] ^ (y[0] >>> 1) ^ mag01[y[0] & 0x1];\n      }\n      y[0] = (this.mt[N - 1] & UPPER_MASK) | (this.mt[0] & LOWER_MASK);\n      this.mt[N - 1] = this.mt[M - 1] ^ (y[0] >>> 1) ^ mag01[y[0] & 0x1];\n\n      this.mti = 0;\n    }\n\n    y[0] = this.mt[this.mti++];\n    y[0] ^= y[0] >>> 11;\n    y[0] ^= (y[0] << 7) & TEMPERING_MASK_B;\n    y[0] ^= (y[0] << 15) & TEMPERING_MASK_C;\n    y[0] ^= y[0] >>> 18;\n    dummy[0] = this.mti;\n\n    return (\n      new Uint32Array(y.buffer)[0] * 2.3283064365386963e-10\n    ); /* reals: [0,1)-interval */\n  }\n\n  private fixupSeeds(): void {\n    const s = this.m_seed;\n    s[0] = 624;\n    /* No action unless user has corrupted .Random.seed */\n    if (s[0] <= 0) s[0] = 624;\n    /* check for all zeroes */\n    // note mt is equal to s.slice(1)\n    if (this.mt.find(v => !!v) === undefined) {\n      this.init(timeseed());\n    }\n    return;\n  }\n\n  constructor(_seed: number = timeseed()) {\n    super(_seed);\n  }\n\n  public _setup() {\n    const buf = new ArrayBuffer(SEED_LEN * 4);\n    this._kind = IRNGType.MERSENNE_TWISTER;\n    this._name = 'Mersenne-Twister';\n    this.m_seed = new Int32Array(buf).fill(0);\n    this.mt = new Int32Array(buf, 4);\n    this.mti = N + 1;\n  }\n\n  public init(_seed: number =  timeseed()) {\n    /* Initial scrambling */\n    const s = new Uint32Array([0]);\n    s[0] = _seed;\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n    for (let j = 0; j < this.m_seed.length; j++) {\n      s[0] = 69069 * s[0] + 1;\n      this.m_seed[j] = s[0];\n    }\n    this.fixupSeeds();\n    super.init(_seed);\n  }\n\n  public internal_unif_rand(): number {\n     \n    let rc = this.MT_genrand();\n    return fixup(rc);\n    \n  }\n\n  public set seed(_seed: number[]) {\n\n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/mersenne-twister/index.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 19, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998       Ross Ihaka\n *  Copyright (C) 2000--2005 The R Core Team\n *  based on AS 111 (C) 1977 Royal Statistical Society\n *  and   on AS 241 (C) 1988 Royal Statistical Society\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *\tdouble qnorm5(double p, double mu, double sigma,\n *\t\t      int lower_tail, int log_p)\n *            {qnorm (..) is synonymous and preferred inside R}\n *\n *  DESCRIPTION\n *\n *\tCompute the quantile function for the normal distribution.\n *\n *\tFor small to moderate probabilities, algorithm referenced\n *\tbelow is used to obtain an initial approximation which is\n *\tpolished with a final Newton step.\n *\n *\tFor very large arguments, an algorithm of Wichura is used.\n *\n *  REFERENCE\n *\n *\tBeasley, J. D. and S. G. Springer (1977).\n *\tAlgorithm AS 111: The percentage points of the normal distribution,\n *\tApplied Statistics, 26, 118-121.\n *\n *      Wichura, M.J. (1988).\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\n *      Applied Statistics, 37, 477-484.\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\nimport { R_DT_CIv, R_DT_qIv } from '../exp/expm1';\nimport { map } from '../r-func';\n\nconst printer = debug('qnorm');\n\nconst { isNaN: ISNAN } = Number;\nconst { log, sqrt, abs: fabs } = Math;\nconst ML_NEGINF = -Infinity;\nconst ML_POSINF = Infinity;\n\nexport function qnorm<T>(\n  p: T,\n  mu: number = 0,\n  sigma: number = 1,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n  let q;\n  let p_;\n\n  let r;\n  let val;\n\n  return map(p)(fx => {\n    if (ISNAN(fx) || ISNAN(mu) || ISNAN(sigma)) return fx + mu + sigma;\n\n    let rc = R_Q_P01_boundaries(lower_tail, log_p, fx, ML_NEGINF, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n    if (sigma < 0) return ML_ERR_return_NAN(printer);\n    if (sigma === 0) return mu;\n\n    p_ = R_DT_qIv(lower_tail, log_p, fx); /* real lower_tail prob. p */\n    q = p_ - 0.5;\n\n    printer(\n      'qnorm(p=%d, m=%d, s=%d, l.t.= %s, log= %s): q = %d',\n      p,\n      mu,\n      sigma,\n      lower_tail,\n      log_p,\n      q\n    );\n\n    /*-- use AS 241 --- */\n    /* double ppnd16_(double *p, long *ifault)*/\n    /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\n    \n            Produces the normal deviate Z corresponding to a given lower\n            tail area of P; Z is accurate to about 1 part in 10**16.\n    \n            (original fortran code used PARAMETER(..) for the coefficients\n             and provided hash codes for checking them...)\n    */\n    if (fabs(q) <= 0.425) {\n      /* 0.075 <= p <= 0.925 */\n      r = 0.180625 - q * q;\n      val =\n        q *\n        (((((((r * 2509.0809287301226727 + 33430.575583588128105) * r +\n          67265.770927008700853) *\n          r +\n          45921.953931549871457) *\n          r +\n          13731.693765509461125) *\n          r +\n          1971.5909503065514427) *\n          r +\n          133.14166789178437745) *\n          r +\n          3.387132872796366608) /\n        (((((((r * 5226.495278852854561 + 28729.085735721942674) * r +\n          39307.89580009271061) *\n          r +\n          21213.794301586595867) *\n          r +\n          5394.1960214247511077) *\n          r +\n          687.1870074920579083) *\n          r +\n          42.313330701600911252) *\n          r +\n          1);\n    } else {\n      /* closer than 0.075 from {0,1} boundary */\n\n      /* r = min(p, 1-p) < 0.075 */\n      if (q > 0) r = R_DT_CIv(lower_tail, log_p, fx); /* 1-p */\n      else r = p_; /* = R_DT_Iv(p) ^=  p */\n\n      r = sqrt(\n        -(log_p && ((lower_tail && q <= 0) || (!lower_tail && q > 0))\n          ? p\n          : /* else */ log(r))\n      );\n      /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n      printer('close to 0 or 1: r = %7d', r);\n\n      if (r <= 5) {\n        /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n        r += -1.6;\n        val =\n          (((((((r * 7.7454501427834140764e-4 + 0.0227238449892691845833) * r +\n            0.24178072517745061177) *\n            r +\n            1.27045825245236838258) *\n            r +\n            3.64784832476320460504) *\n            r +\n            5.7694972214606914055) *\n            r +\n            4.6303378461565452959) *\n            r +\n            1.42343711074968357734) /\n          (((((((r * 1.05075007164441684324e-9 + 5.475938084995344946e-4) * r +\n            0.0151986665636164571966) *\n            r +\n            0.14810397642748007459) *\n            r +\n            0.68976733498510000455) *\n            r +\n            1.6763848301838038494) *\n            r +\n            2.05319162663775882187) *\n            r +\n            1);\n      } else {\n        /* very close to  0 or 1 */\n        r += -5;\n        val =\n          (((((((r * 2.01033439929228813265e-7 + 2.71155556874348757815e-5) *\n            r +\n            0.0012426609473880784386) *\n            r +\n            0.026532189526576123093) *\n            r +\n            0.29656057182850489123) *\n            r +\n            1.7848265399172913358) *\n            r +\n            5.4637849111641143699) *\n            r +\n            6.6579046435011037772) /\n          (((((((r * 2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\n            r +\n            1.8463183175100546818e-5) *\n            r +\n            7.868691311456132591e-4) *\n            r +\n            0.0148753612908506148525) *\n            r +\n            0.13692988092273580531) *\n            r +\n            0.59983220655588793769) *\n            r +\n            1);\n      }\n\n      if (q < 0.0) val = -val;\n      /* return (q >= 0.)? r : -r ;*/\n    }\n    return mu + sigma * val;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/normal/qnorm.ts","export { BuggyKindermanRamage } from './buggy-kinderman-ramage';\nexport { BoxMuller } from './box-muller';\nexport { AhrensDieter} from './ahrens_dieter';\nexport { Inversion } from './inversion';\nexport { KindermanRamage }  from './kinderman-ramage';\nexport { IRNGNormal } from './inormal-rng';\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/index.ts","export { Toms708 } from './toms708';\nexport { NumberW } from './NumberW';\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/common/toms708/index.ts","\nimport { map, seq } from '../r-func';\nimport { IRNGType } from './irng-type';\n\nexport type MessageType = 'INIT';\n\nexport abstract class IRNG {\n  protected _name: string;\n  protected _kind: IRNGType;\n\n  private notify: Set<{ event: MessageType, handler: () => void }>;\n\n  constructor(_seed: number) {\n    this.notify = new Set();\n    this.emit = this.emit.bind(this);\n    this.register = this.register.bind(this);\n    this.unif_rand = this.unif_rand.bind(this);\n    this.internal_unif_rand = this.internal_unif_rand.bind(this);\n    this.init = this.init.bind(this);\n    this._setup();\n    this.init(_seed);\n  }\n\n  public get name() {\n    return this._name;\n  }\n\n  public get kind() {\n    return this._kind;\n  }\n\n  public abstract _setup(): void;\n\n  public init(_seed: number): void {\n    this.emit('INIT');\n  }\n\n  public abstract set seed(_seed: number[]);\n  public unif_rand(n: number = 1): number | number[] {\n    n = (!n || n < 0) ? 1 : n;\n    return map(seq()()(n))(() => this.internal_unif_rand());\n  }\n\n  protected abstract internal_unif_rand(): number;\n\n  public abstract get seed(): number[];\n  // event stuff\n  public register(event: MessageType, handler: () => void) {\n    this.notify.add({ event, handler });\n  }\n\n  public emit(event: MessageType) {\n    this.notify.forEach(r => {\n      if (r.event === event) {\n        r.handler();\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/irng.ts","const { trunc, ceil, min, log2, pow } = Math;\nconst { now } = Date;\n\nexport function timeseed() {\n  const n = now();\n  //delay 0.5 sec\n  do {\n    now(); // consume cpu, do something silly\n  } while (now() - n < 500);\n\n  // how many bits?\n  const nBits = min(32, ceil(log2(n)));\n  const lowBits = trunc(nBits / 2);\n  const hi = trunc(n / pow(2, lowBits));\n  const lo = n - hi * pow(2, lowBits);\n  //\n  // create 32 bit array\n  const buf = new ArrayBuffer(4);\n  const reverser = new Uint8Array(buf);\n  const uint32 = new Uint32Array(buf);\n  uint32[0] = lo ^ hi; // little endian, highest order bytes has lowest indexes so\n  // reverse order of bytes, milliseconds changes the fastest in a time\n  reverser.reverse();\n  return uint32[0];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/timeseed.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { M_LN_SQRT_2PI, ML_ERR_return_NAN } from '../common/_general';\n\nimport { gammafn } from '../gamma/gamma_fn';\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { lgammacor } from '../gamma/lgammacor';\nimport { multiplexer }  from '../r-func';\n\nconst { log, log1p } = Math;\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF\n} = Number;\n\nconst printer = debug('lbeta');\n\nexport function lbeta(_a: number | number[], _b: number|number[]): number|number[] {\n  return multiplexer(_a, _b)((a, b) => internal_lbeta(a, b));\n} \n\nexport function internal_lbeta(a: number, b: number): number {\n  let corr: number;\n  let p: number;\n  let q: number;\n\n  if (ISNAN(a) || ISNAN(b)) return a + b;\n  p = q = a;\n  if (b < p) p = b; // := min(a,b)\n  if (b > q) q = b; // := max(a,b)\n\n  // both arguments must be >= 0\n  if (p < 0) return ML_ERR_return_NAN(printer);\n  else if (p === 0) {\n    return ML_POSINF;\n  } else if (!R_FINITE(q)) {\n    // q == +Inf\n    return ML_NEGINF;\n  }\n\n  if (p >= 10) {\n    // p and q are big.\n    corr = lgammacor(p) + lgammacor(q) - lgammacor(p + q);\n    return (\n      log(q) * -0.5 +\n      M_LN_SQRT_2PI +\n      corr +\n      (p - 0.5) * log(p / (p + q)) +\n      q * log1p(-p / (p + q))\n    );\n  } else if (q >= 10) {\n    // p is small, but q is big.\n    corr = lgammacor(q) - lgammacor(p + q);\n    return (\n      lgammafn(p) +\n      corr +\n      p -\n      p * log(p + q) +\n      (q - 0.5) * log1p(-p / (p + q))\n    );\n  } else {\n    // p and q are small: p <= q < 10.\n    // R change for very small args\n\n    //NOTE FROM JACOB, funny how only p is tested and not q?? doesnt make sense\n    //  since the beta function is \"symetric\" for p and q aka beta(p,q) = beta (q,p)\n\n    // removed  if (p < 1e-306) return lgamma(p) + (lgamma(q) - lgamma(p+q));\n    //else\n    return log(gammafn(p) * (gammafn(q) / gammafn(p + q)));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/lbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_DT_0, R_DT_1 } from '../common/_general';\nimport { NumberW, Toms708 } from '../common/toms708';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { LN2: M_LN2, log } = Math;\n\nconst printer_pbeta_raw = debug('pbeta_raw');\n\nexport function pbeta_raw(\n  x: number,\n  a: number,\n  b: number,\n  lower_tail: boolean,\n  log_p: boolean\n): number {\n  // treat limit cases correctly here:\n  if (a === 0 || b === 0 || !R_FINITE(a) || !R_FINITE(b)) {\n    // NB:  0 < x < 1 :\n    if (a === 0 && b === 0)\n      // point mass 1/2 at each of {0,1} :\n      return log_p ? -M_LN2 : 0.5;\n    if (a === 0 || a / b === 0)\n      // point mass 1 at 0 ==> P(X <= x) = 1, all x > 0\n      return R_DT_1(lower_tail, log_p);\n    if (b === 0 || b / a === 0)\n      // point mass 1 at 1 ==> P(X <= x) = 0, all x < 1\n      return R_DT_0(lower_tail, log_p);\n    // else, remaining case:  a = b = Inf : point mass 1 at 1/2\n    if (x < 0.5) return R_DT_0(lower_tail, log_p);\n    else return R_DT_1(lower_tail, log_p);\n  }\n  // Now:  0 < a < Inf;  0 < b < Inf\n  let x1 = 0.5 - x + 0.5;\n  let w: NumberW = new NumberW(0);\n  let wc: NumberW = new NumberW(0);\n  let ierr: NumberW = new NumberW(0);\n  //====\n  //Toms708.bratio(a, b, x, x1, &w, &wc, &ierr, log_p); /* -> ./toms708.c */\n  printer_pbeta_raw(\n    'before Toms708.bratio, a=%d, b=%d, x=%d, w=%d,wc=%d, ierr=%d',\n    a,\n    b,\n    x,\n    w.val,\n    wc.val,\n    ierr.val\n  );\n  Toms708.bratio(a, b, x, x1, w, wc, ierr); /* -> ./toms708.c */\n  printer_pbeta_raw(\n    'after Toms708.bratio, a=%d, b=%d, x=%d, w=%d,wc=%d, ierr=%d',\n    a,\n    b,\n    x,\n    w.val,\n    wc.val,\n    ierr.val\n  );\n  //====\n  // ierr in {10,14} <==> bgrat() error code ierr-10 in 1:4; for 1 and 4, warned *there*\n  if (ierr.val && ierr.val !== 11 && ierr.val !== 14)\n    printer_pbeta_raw(\n      'pbeta_raw(%d, a=%d, b=%d, ..) -> bratio() gave error code %d',\n      x,\n      a,\n      b,\n      ierr\n    );\n  if (log_p) {\n    w.val = log(w.val);\n    wc.val = log(wc.val);\n  }\n  return lower_tail ? w.val : wc.val;\n} /* pbeta_raw() */\n\nconst printer_pbeta = debug('pbeta');\n\nexport function pbeta<T>(\n  q: T,\n  a: number,\n  b: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return map(q)(x => {\n    printer_pbeta(\n      'pbeta(q=%d, a=%d, b=%d, l.t=%s, ln=%s)',\n      x,\n      a,\n      b,\n      lowerTail,\n      logP\n    );\n    if (ISNAN(x) || ISNAN(a) || ISNAN(b)) return NaN;\n\n    if (a < 0 || b < 0) return ML_ERR_return_NAN(printer_pbeta);\n    // allowing a==0 and b==0  <==> treat as one- or two-point mass\n\n    if (x <= 0) return R_DT_0(lowerTail, logP);\n    if (x >= 1) return R_DT_1(lowerTail, logP);\n\n    return pbeta_raw(x, a, b, lowerTail, logP);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/pbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\n\nimport { rgamma } from '../gamma/rgamma';\nimport { map, seq } from '../r-func';\nimport { IRNGNormal } from '../rng/normal/inormal-rng';\n\nconst { isFinite: R_FINITE } = Number;\nconst printer = debug('rchisq');\nconst sequence = seq()();\n\nexport function rchisq(\n  n: number,\n  df: number,\n  rng: IRNGNormal\n): number | number[] {\n  \n  //\n  return map(sequence(n))(() => {\n    if (!R_FINITE(df) || df < 0.0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    return rgamma(1, df / 2.0, 2.0, rng) as number;\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/rchisq.ts","export enum IRNGType {\n    WICHMANN_HILL = 0,\n    MARSAGLIA_MULTICARRY,\n    SUPER_DUPER,\n    MERSENNE_TWISTER,\n    KNUTH_TAOCP,\n    KNUTH_TAOCP2002,\n    LECUYER_CMRG\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/irng-type.ts","import { IRNG } from '../';\nimport { map, seq } from '../../r-func';\n\nexport abstract class IRNGNormal {\n  protected rng: IRNG;\n  constructor(_rng: IRNG) {\n    this.rng = _rng;\n    this.unif_rand = this.unif_rand.bind(this);\n    this.norm_rand = this.norm_rand.bind(this);\n    this.internal_norm_rand = this.internal_norm_rand.bind(this);\n  }\n\n  public norm_rand(n: number = 1): number|number[]{\n    n = !n || n < 0 ? 1 : n;\n    return map(seq()()(n))(() => this.internal_norm_rand());\n  } \n\n  protected abstract internal_norm_rand(): number;\n\n  public unif_rand(n: number = 1): number|number[] {\n     return this.rng.unif_rand(n);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/inormal-rng.ts","import { IRNG } from './irng';\nimport { KnuthTAOCP } from './knuth-taocp';\nimport { KnuthTAOCP2002 } from './knuth-taocp-2002';\nimport { LecuyerCMRG } from './lecuyer-cmrg';\nimport { MarsagliaMultiCarry } from './marsaglia-multicarry';\nimport { MersenneTwister } from './mersenne-twister';\nimport { \n    AhrensDieter, \n    BoxMuller, \n    BuggyKindermanRamage, \n    Inversion,\n    KindermanRamage\n} from './normal';\nimport { IRNGNormal } from './normal/inormal-rng';\nimport { SuperDuper } from './super-duper';\nimport { timeseed } from './timeseed';\nimport { WichmannHill } from './wichmann-hill';\n\nexport const rng = {\n  KnuthTAOCP,\n  KnuthTAOCP2002,\n  LecuyerCMRG,\n  MarsagliaMultiCarry,\n  MersenneTwister,\n  normal: {\n    AhrensDieter,\n    BoxMuller,\n    BuggyKindermanRamage, \n    Inversion,\n    KindermanRamage\n  },\n  SuperDuper,\n  timeseed,\n  WichmannHill,\n};\n\nexport { IRNG, IRNGNormal };\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport {\n  M_LN_2PI,\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D__1,\n  R_D_exp,\n  R_D_negInonint,\n  R_D_nonint_check\n} from '../common/_general';\nimport { bd0 } from '../deviance';\nimport { map } from '../r-func';\nimport { stirlerr } from '../stirling';\n\nconst { log, log1p, round: R_forceint } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst printer = debug('dbinom');\n\nexport function dbinom_raw(\n  x: number,\n  n: number,\n  p: number,\n  q: number,\n  give_log: boolean\n): number {\n  let lf: number;\n  let lc: number;\n\n  if (p === 0) return x === 0 ? R_D__1(give_log) : R_D__0(give_log);\n  if (q === 0) return x === n ? R_D__1(give_log) : R_D__0(give_log);\n\n  if (x === 0) {\n    if (n === 0) return R_D__1(give_log);\n    let lc = p < 0.1 ? -bd0(n, n * q) - n * p : n * log(q);\n    return R_D_exp(give_log, lc);\n  }\n\n  if (x === n) {\n    lc = q < 0.1 ? -bd0(n, n * p) - n * q : n * log(p);\n    return R_D_exp(give_log, lc);\n  }\n\n  if (x < 0 || x > n) return R_D__0(give_log);\n\n  /* n*p or n*q can underflow to zero if n and p or q are small.  This\n       used to occur in dbeta, and gives NaN as from R 2.3.0.  */\n  lc =\n    stirlerr(n) -\n    stirlerr(x) -\n    stirlerr(n - x) -\n    bd0(x, n * p) -\n    bd0(n - x, n * q);\n\n  /* f = (M_2PI*x*(n-x))/n; could overflow or underflow */\n  /* Upto R 2.7.1:\n     * lf = log(M_2PI) + log(x) + log(n-x) - log(n);\n     * -- following is much better for  x << n : */\n  lf = M_LN_2PI + log(x) + log1p(-x / n);\n\n  return R_D_exp(give_log, lc - 0.5 * lf);\n}\n\nexport function dbinom<T>(\n  xx: T,\n  n: number,\n  p: number,\n  logX: boolean = false\n): T {\n  return map(xx)(x => {\n    /* NaNs propagated correctly */\n    if (ISNAN(x) || ISNAN(n) || ISNAN(p)) return x + n + p;\n\n    if (p < 0 || p > 1 || R_D_negInonint(n)) return ML_ERR_return_NAN(printer);\n    R_D_nonint_check(logX, x, printer);\n    if (x < 0 || !R_FINITE(x)) return R_D__0(logX);\n\n    n = R_forceint(n);\n    x = R_forceint(x);\n\n    return dbinom_raw(x, n, p, 1 - p, logX);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial/dbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport {\n  DBL_MAX_EXP,\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D__1,\n  R_D_exp,\n  R_DT_0,\n  R_DT_1,\n  R_P_bounds_01\n} from '../common/_general';\n\nimport { R_Log1_Exp } from '../exp/expm1';\nimport { dnorm4 as dnorm } from '../normal/dnorm';\nimport { pnorm5 as pnorm } from '../normal/pnorm';\nimport { dpois_raw } from '../poisson/dpois';\nimport { lgammafn } from './lgamma_fn';\n//import { logspace_add } from './logspace-add';\n\nconst {\n  LN2: M_LN2,\n  log1p,\n  expm1,\n  sqrt,\n  floor,\n  pow,\n  log,\n  exp,\n  max: fmax2,\n  abs: fabs\n} = Math;\nconst {\n  isNaN: ISNAN,\n  MIN_VALUE: DBL_MIN,\n  EPSILON: DBL_EPSILON,\n  isFinite: R_FINITE,\n  // NEGATIVE_INFINITY: ML_NEGINF,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst { isArray } = Array;\nconst sqr = (x: number) => x * x;\nconst scalefactor = sqr(sqr(sqr(4294967296.0)));\n\n/* If |x| > |k| * M_cutoff,  then  log[ exp(-x) * k^x ]\t =~=  -x */\nconst M_cutoff = M_LN2 * DBL_MAX_EXP / DBL_EPSILON; /*=3.196577e18*/\n\n/* Continued fraction for calculation of\n *    1/i + x/(i+d) + x^2/(i+2*d) + x^3/(i+3*d) + ... = sum_{k=0}^Inf x^k/(i+k*d)\n *\n * auxilary in log1pmx() and lgamma1p()\n */\nfunction logcf(\n  x: number,\n  i: number,\n  d: number,\n  eps: number /* ~ relative tolerance */\n) {\n  let c1 = 2 * d;\n  let c2 = i + d;\n  let c4 = c2 + d;\n  let a1 = c2;\n  let b1 = i * (c2 - i * x);\n  let b2 = d * d * x;\n  let a2 = c4 * c2 - b2;\n  /*\n  #if 0\n      assert (i > 0);\n      assert (d >= 0);\n  #endif\n  */\n  b2 = c4 * b1 - i * b2;\n\n  while (fabs(a2 * b1 - a1 * b2) > fabs(eps * b1 * b2)) {\n    let c3 = c2 * c2 * x;\n    c2 += d;\n    c4 += d;\n    a1 = c4 * a2 - c3 * a1;\n    b1 = c4 * b2 - c3 * b1;\n\n    c3 = c1 * c1 * x;\n    c1 += d;\n    c4 += d;\n    a2 = c4 * a1 - c3 * a2;\n    b2 = c4 * b1 - c3 * b2;\n\n    if (fabs(b2) > scalefactor) {\n      a1 /= scalefactor;\n      b1 /= scalefactor;\n      a2 /= scalefactor;\n      b2 /= scalefactor;\n    } else if (fabs(b2) < 1 / scalefactor) {\n      a1 *= scalefactor;\n      b1 *= scalefactor;\n      a2 *= scalefactor;\n      b2 *= scalefactor;\n    }\n  }\n\n  return a2 / b2;\n}\n\n/* Accurate calculation of log(1+x)-x, particularly for small x.  */\nfunction log1pmx(x: number) {\n  const minLog1Value = -0.79149064;\n\n  if (x > 1 || x < minLog1Value) return log1p(x) - x;\n  else {\n    /* -.791 <=  x <= 1  -- expand in  [x/(2+x)]^2 =: y :\n      * log(1+x) - x =  x/(2+x) * [ 2 * y * S(y) - x],  with\n      * ---------------------------------------------\n      * S(y) = 1/3 + y/5 + y^2/7 + ... = \\sum_{k=0}^\\infty  y^k / (2k + 3)\n     */\n    let r = x / (2 + x);\n    let y = r * r;\n    if (fabs(x) < 1e-2) {\n      let two = 2;\n      return (\n        r * ((((two / 9 * y + two / 7) * y + two / 5) * y + two / 3) * y - x)\n      );\n    } else {\n      let tol_logcf = 1e-14;\n      return r * (2 * y * logcf(y, 3, 2, tol_logcf) - x);\n    }\n  }\n}\n\n/* Compute  log(gamma(a+1))  accurately also for small a (0 < a < 0.5). */\nexport function lgamma1p(a: number) {\n  const eulers_const = 0.5772156649015328606065120900824024;\n\n  /* coeffs[i] holds (zeta(i+2)-1)/(i+2) , i = 0:(N-1), N = 40 : */\n  const N = 40;\n  const coeffs = [\n    0.3224670334241132182362075833230126 /* = (zeta(2)-1)/2 */,\n    0.6735230105319809513324605383715e-1 /* = (zeta(3)-1)/3 */,\n    0.2058080842778454787900092413529198e-1,\n    0.7385551028673985266273097291406834e-2,\n    0.2890510330741523285752988298486755e-2,\n    0.1192753911703260977113935692828109e-2,\n    0.5096695247430424223356548135815582e-3,\n    0.2231547584535793797614188036013401e-3,\n    0.994575127818085337145958900319017e-4,\n    0.4492623673813314170020750240635786e-4,\n    0.2050721277567069155316650397830591e-4,\n    0.9439488275268395903987425104415055e-5,\n    0.4374866789907487804181793223952411e-5,\n    0.2039215753801366236781900709670839e-5,\n    0.9551412130407419832857179772951265e-6,\n    0.4492469198764566043294290331193655e-6,\n    0.2120718480555466586923135901077628e-6,\n    0.1004322482396809960872083050053344e-6,\n    0.476981016936398056576019341724673e-7,\n    0.2271109460894316491031998116062124e-7,\n    0.1083865921489695409107491757968159e-7,\n    0.5183475041970046655121248647057669e-8,\n    0.2483674543802478317185008663991718e-8,\n    0.119214014058609120744254820277464e-8,\n    0.5731367241678862013330194857961011e-9,\n    0.2759522885124233145178149692816341e-9,\n    0.1330476437424448948149715720858008e-9,\n    0.6422964563838100022082448087644648e-10,\n    0.3104424774732227276239215783404066e-10,\n    0.1502138408075414217093301048780668e-10,\n    0.7275974480239079662504549924814047e-11,\n    0.3527742476575915083615072228655483e-11,\n    0.1711991790559617908601084114443031e-11,\n    0.8315385841420284819798357793954418e-12,\n    0.4042200525289440065536008957032895e-12,\n    0.1966475631096616490411045679010286e-12,\n    0.9573630387838555763782200936508615e-13,\n    0.4664076026428374224576492565974577e-13,\n    0.2273736960065972320633279596737272e-13,\n    0.1109139947083452201658320007192334e-13 /* = (zeta(40+1)-1)/(40+1) */\n  ];\n\n  const c = 0.2273736845824652515226821577978691e-12; /* zeta(N+2)-1 */\n  const tol_logcf = 1e-14;\n  let lgam;\n  let i;\n\n  if (fabs(a) >= 0.5) return lgammafn(a + 1);\n\n  /* Abramowitz & Stegun 6.1.33 : for |x| < 2,\n   * <==> log(gamma(1+x)) = -(log(1+x) - x) - gamma*x + x^2 * \\sum_{n=0}^\\infty c_n (-x)^n\n   * where c_n := (Zeta(n+2) - 1)/(n+2)  = coeffs[n]\n   *\n   * Here, another convergence acceleration trick is used to compute\n   * lgam(x) :=  sum_{n=0..Inf} c_n (-x)^n\n   */\n  lgam = c * logcf(-a / 2, N + 2, 1, tol_logcf);\n  for (i = N - 1; i >= 0; i--) lgam = coeffs[i] - a * lgam;\n\n  return (a * lgam - eulers_const) * a - log1pmx(a);\n} /* lgamma1p */\n\n/*\n * Compute the; log of a sum from logs of terms, i.e.,\n *\n *     log (sum_i  exp (logx[i]) ) =\n *     log (e ^M * sum_i  e ^ (logx[i] - M) ) =\n *     M + log( sum_i  e ^ (logx[i] - M)\n *\n * without causing overflows or throwing much accuracy.\n * /\n\nfunction logspace_sum(logx: number[], n: number): number {\n  if (n === 0) return ML_NEGINF; // = log( sum(<empty>) )\n  if (n === 1) return logx[0];\n  if (n === 2) return logspace_add(logx[0], logx[1]);\n  // else (n >= 3) :\n  let i;\n  // Mx := max_i log(x_i)\n  let Mx = logx[0];\n  for (i = 1; i < n; i++) if (Mx < logx[i]) Mx = logx[i];\n  let s = 0;\n  for (i = 0; i < n; i++) s += exp(logx[i] - Mx);\n  return Mx + log(s);\n};\n\n// log(1 - exp(x))  in more stable form than log1p(- R_D_qIv(x)) :\n/*export function R_Log1_Exp(x: number): number {\n  return (\n    x > -M_LN2 ? log(-expm1(x)) : log1p(-exp(x)));\n}*/\n/* dpois_wrap (x__1, lambda) := dpois(x__1 - 1, lambda);  where\n * dpois(k, L) := exp(-L) L^k / gamma(k+1)  {the usual Poisson probabilities}\n *\n * and  dpois*(.., give_log = TRUE) :=  log( dpois*(..) )\n*/\nconst pr_dpois_wrap = debug('dpois_wrap');\n\nfunction dpois_wrap(\n  x_plus_1: number,\n  lambda: number,\n  give_log: boolean\n): number {\n  pr_dpois_wrap(\n    'dpois_wrap(x+1=%d, lambda=%d, log=%s)',\n    x_plus_1,\n    lambda,\n    give_log\n  );\n\n  if (!R_FINITE(lambda)) {\n    return R_D__0(give_log);\n  }\n  if (x_plus_1 > 1) return dpois_raw(x_plus_1 - 1, lambda, give_log);\n  if (lambda > fabs(x_plus_1 - 1) * M_cutoff)\n    return R_D_exp(give_log, -lambda - lgammafn(x_plus_1));\n  else {\n    let d = dpois_raw(x_plus_1, lambda, give_log);\n    pr_dpois_wrap('  -> d=dpois_raw(..)=%d', d);\n    return give_log ? d + log(x_plus_1 / lambda) : d * (x_plus_1 / lambda);\n  }\n}\n\n/*\n * Abramowitz and Stegun 6.5.29 [right]\n */\nconst pr_pgamma_smallx = debug('pgamma_smallx');\n\nfunction pgamma_smallx(\n  x: number,\n  alph: number,\n  lowerTail: boolean,\n  logP: boolean\n): number {\n  let sum = 0;\n  let c = alph;\n  let n = 0;\n  let term;\n\n  pr_pgamma_smallx(' pg_smallx(x=%d, alph=%d): ', x, alph);\n\n  /*\n   * Relative to 6.5.29 all terms have been multiplied by alph\n   * and the first, thus being 1, is omitted.\n   */\n\n  do {\n    n++;\n    c *= -x / n;\n    term = c / (alph + n);\n    sum += term;\n  } while (fabs(term) > DBL_EPSILON * fabs(sum));\n\n  pr_pgamma_smallx('%d terms --> conv.sum=%d;', n, sum);\n  if (lowerTail) {\n    let f1 = logP ? log1p(sum) : 1 + sum;\n    let f2;\n    if (alph > 1) {\n      f2 = dpois_raw(alph, x, logP);\n      f2 = logP ? f2 + x : f2 * exp(x);\n    } else if (logP) f2 = alph * log(x) - lgamma1p(alph);\n    else f2 = pow(x, alph) / exp(lgamma1p(alph));\n\n    pr_pgamma_smallx(' (f1,f2)= (%d,%d)', f1, f2);\n    return logP ? f1 + f2 : f1 * f2;\n  } else {\n    let lf2 = alph * log(x) - lgamma1p(alph);\n    pr_pgamma_smallx(' 1:%d  2:%d', alph * log(x), lgamma1p(alph));\n    pr_pgamma_smallx(' sum=%d  log(1+sum)=%d\t lf2=%d', sum, log1p(sum), lf2);\n\n    if (logP) return R_Log1_Exp(log1p(sum) + lf2);\n    else {\n      let f1m1 = sum;\n      let f2m1 = expm1(lf2);\n      return -(f1m1 + f2m1 + f1m1 * f2m1);\n    }\n  }\n} /* pgamma_smallx() */\n\nfunction pd_upper_series(x: number, y: number, logP: boolean): number {\n  let term = x / y;\n  let sum = term;\n\n  do {\n    y++;\n    term *= x / y;\n    sum += term;\n  } while (term > sum * DBL_EPSILON);\n\n  /* sum =  \\sum_{n=1}^ oo  x^n     / (y*(y+1)*...*(y+n-1))\n   *\t   =  \\sum_{n=0}^ oo  x^(n+1) / (y*(y+1)*...*(y+n))\n   *\t   =  x/y * (1 + \\sum_{n=1}^oo\tx^n / ((y+1)*...*(y+n)))\n   *\t   ~  x/y +  o(x/y)   {which happens when alph -> Inf}\n   */\n  return logP ? log(sum) : sum;\n}\n\n/* Continued fraction for calculation of\n *    scaled upper-tail F_{gamma}\n *  ~=  (y / d) * [1 +  (1-y)/d +  O( ((1-y)/d)^2 ) ]\n */\nconst pr_pd_lower_cf = debug('pd_lower_cf');\n\nfunction pd_lower_cf(y: number, d: number): number {\n  let f = 0.0; /* -Wall */\n  let of;\n  let f0;\n  let i;\n  let c2;\n  let c3;\n  let c4;\n  let a1;\n  let b1;\n  let a2;\n  let b2;\n\n  const max_it = 200000;\n\n  pr_pd_lower_cf('pd_lower_cf(y=%d, d=%d)', y, d);\n\n  if (y === 0) return 0;\n\n  f0 = y / d;\n  /* Needed, e.g. for  pgamma(10^c(100,295), shape= 1.1, log=TRUE): */\n  if (fabs(y - 1) < fabs(d) * DBL_EPSILON) {\n    /* includes y < d = Inf */\n    pr_pd_lower_cf(' very small \"y\" -> returning (y/d)');\n    return f0;\n  }\n\n  if (f0 > 1) f0 = 1;\n  c2 = y;\n  c4 = d; /* original (y,d), *not* potentially scaled ones!*/\n\n  a1 = 0;\n  b1 = 1;\n  a2 = y;\n  b2 = d;\n\n  while (b2 > scalefactor) {\n    a1 /= scalefactor;\n    b1 /= scalefactor;\n    a2 /= scalefactor;\n    b2 /= scalefactor;\n  }\n\n  i = 0;\n  of = -1; /* far away */\n  while (i < max_it) {\n    i++;\n    c2--;\n    c3 = i * c2;\n    c4 += 2;\n    /* c2 = y - i,  c3 = i(y - i),  c4 = d + 2i,  for i odd */\n    a1 = c4 * a2 + c3 * a1;\n    b1 = c4 * b2 + c3 * b1;\n\n    i++;\n    c2--;\n    c3 = i * c2;\n    c4 += 2;\n    /* c2 = y - i,  c3 = i(y - i),  c4 = d + 2i,  for i even */\n    a2 = c4 * a1 + c3 * a2;\n    b2 = c4 * b1 + c3 * b2;\n\n    if (b2 !== 0) {\n      f = a2 / b2;\n      /* convergence check: relative; \"absolute\" for very small f : */\n      if (fabs(f - of) <= DBL_EPSILON * fmax2(f0, fabs(f))) {\n        pr_pd_lower_cf(' %d iter.\\n', i);\n        return f;\n      }\n      of = f;\n    }\n  }\n\n  pr_pd_lower_cf(\" ** NON-convergence in pgamma()'s pd_lower_cf() f= %d.\", f);\n  return f; /* should not happen ... */\n} /* pd_lower_cf() */\n\nconst pr_pd_lower_series = debug('pd_lower_series');\n\nfunction pd_lower_series(lambda: number, y: number): number {\n  let term = 1;\n  let sum = 0;\n\n  pr_pd_lower_series('pd_lower_series(lam=%d, y=%d) ...', lambda, y);\n\n  while (y >= 1 && term > sum * DBL_EPSILON) {\n    term *= y / lambda;\n    sum += term;\n    y--;\n  }\n  /* sum =  \\sum_{n=0}^ oo  y*(y-1)*...*(y - n) / lambda^(n+1)\n   *\t   =  y/lambda * (1 + \\sum_{n=1}^Inf  (y-1)*...*(y-n) / lambda^n)\n   *\t   ~  y/lambda + o(y/lambda)\n   */\n\n  pr_pd_lower_series(' done: term=%d, sum=%d, y= %d', term, sum, y);\n\n  if (y !== floor(y)) {\n    /*\n     * The series does not converge as the terms start getting\n     * bigger (besides flipping sign) for y < -lambda.\n     */\n    let f;\n\n    pr_pd_lower_series(' y not int: add another term ');\n\n    /* FIXME: in quite few cases, adding  term*f  has no effect (f too small)\n     *\t  and is unnecessary e.g. for pgamma(4e12, 121.1) */\n    f = pd_lower_cf(y, lambda + 1 - y);\n    pr_pd_lower_series('  (= %d) * term = %d to sum %d', f, term * f, sum);\n\n    sum += term * f;\n  }\n\n  return sum;\n} /* pd_lower_series() */\n\n/*\n * Compute the following ratio with higher accuracy that would be had\n * from doing it directly.\n *\n *\t\t dnorm (x, 0, 1, FALSE)\n *\t   ----------------------------------\n *\t   pnorm (x, 0, 1, lowerTail, FALSE)\n *\n * Abramowitz & Stegun 26.2.12\n */\nfunction dpnorm(\n  x: number,\n  lowerTail: boolean,\n  lp: number\n): number {\n  /*\n   * So as not to repeat a pnorm call, we expect\n   *\n   *\t lp == pnorm (x, 0, 1, lowerTail, TRUE)\n   *\n   * but use it only in the non-critical case where either x is small\n   * or p==exp(lp) is close to 1.\n   */\n\n  if (x < 0) {\n    x = -x;\n    lowerTail = !lowerTail;\n  }\n\n  if (x > 10 && !lowerTail) {\n    let term = 1 / x;\n    let sum = term;\n    let x2 = x * x;\n    let i = 1;\n    do {\n      term *= -i / x2;\n      sum += term;\n      i += 2;\n    } while (fabs(term) > DBL_EPSILON * sum);\n\n    return 1 / sum;\n  } else {\n    let d = dnorm(x, 0, 1, false);\n    return d / exp(lp);\n  }\n}\n\n/*\n * Asymptotic expansion to calculate the probability that Poisson variate\n * has value <= x.\n * Various assertions about this are made (without proof) at\n * http://members.aol.com/iandjmsmith/PoissonApprox.htm\n */\n\nconst pr_ppois_asymp = debug('ppois_asymp');\n\nfunction ppois_asymp(\n  x: number,\n  lambda: number,\n  lowerTail: boolean,\n  logP: boolean\n): number {\n  const coefs_a = [\n    -1e99 /* placeholder used for 1-indexing */,\n    2 / 3,\n    -4 / 135,\n    8 / 2835,\n    16 / 8505,\n    -8992 / 12629925,\n    -334144 / 492567075,\n    698752 / 1477701225\n  ];\n\n  const coefs_b = [\n    -1e99 /* placeholder */,\n    1 / 12,\n    1 / 288,\n    -139 / 51840,\n    -571 / 2488320,\n    163879 / 209018880,\n    5246819 / 75246796800,\n    -534703531 / 902961561600\n  ];\n\n  let elfb: number;\n  let elfb_term: number;\n  let res12: number;\n  let res1_term: number;\n  let res1_ig: number;\n  let res2_term: number;\n  let res2_ig: number;\n  let dfm: number;\n  let pt_: number;\n  let s2pt: number;\n  let f: number;\n  let np: number;\n  let i: number;\n\n  dfm = lambda - x;\n  /* If lambda is large, the distribution is highly concentrated\n     about lambda.  So representation error in x or lambda can lead\n     to arbitrarily large values of pt_ and hence divergence of the\n     coefficients of this approximation.\n  */\n  pt_ = -log1pmx(dfm / x);\n  s2pt = sqrt(2 * x * pt_);\n  if (dfm < 0) s2pt = -s2pt;\n\n  res12 = 0;\n  res1_ig = res1_term = sqrt(x);\n  res2_ig = res2_term = s2pt;\n  for (i = 1; i < 8; i++) {\n    res12 += res1_ig * coefs_a[i];\n    res12 += res2_ig * coefs_b[i];\n    res1_term *= pt_ / i;\n    res2_term *= 2 * pt_ / (2 * i + 1);\n    res1_ig = res1_ig / x + res1_term;\n    res2_ig = res2_ig / x + res2_term;\n  }\n\n  elfb = x;\n  elfb_term = 1;\n  for (i = 1; i < 8; i++) {\n    elfb += elfb_term * coefs_b[i];\n    elfb_term /= x;\n  }\n  if (!lowerTail) elfb = -elfb;\n\n  pr_ppois_asymp('res12 = %d   elfb=%d', elfb, res12);\n\n  f = res12 / elfb;\n\n  np = pnorm(s2pt, 0.0, 1.0, !lowerTail, logP);\n\n  if (logP) {\n    let n_d_over_p = dpnorm(s2pt, !lowerTail, np);\n    pr_ppois_asymp(\n      'pp*_asymp(): f=%d\t np=e^%d  nd/np=%d  f*nd/np=%d',\n      f,\n      np,\n      n_d_over_p,\n      f * n_d_over_p\n    );\n    return np + log1p(f * n_d_over_p);\n  } else {\n    let nd = dnorm(s2pt, 0, 1, logP);\n\n    pr_ppois_asymp(\n      'pp*_asymp(): f=%d\t np=%d  nd=%d  f*nd=%d',\n      f,\n      np,\n      nd,\n      f * nd\n    );\n    return np + f * nd;\n  }\n} /* ppois_asymp() */\n\nconst pr_pgamma_raw = debug('pgamma_raw');\n\nexport function pgamma_raw(\n  x: number,\n  alph: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): number {\n  /* Here, assume that  (x,alph) are not NA  &  alph > 0 . */\n\n  let res;\n\n  pr_pgamma_raw(\n    'pgamma_raw(x=%d, alph=%d, low=%s, log=%s)',\n    x,\n    alph,\n    lowerTail,\n    logP\n  );\n\n  let rc = R_P_bounds_01(lowerTail, logP, x, 0, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n\n  if (x < 1) {\n    res = pgamma_smallx(x, alph, lowerTail, logP);\n  } else if (x <= alph - 1 && x < 0.8 * (alph + 50)) {\n    /* incl. large alph compared to x */\n    let sum = pd_upper_series(x, alph, logP); /* = x/alph + o(x/alph) */\n    let d = dpois_wrap(alph, x, logP);\n    pr_pgamma_raw(\n      ' alph \"large\": sum=pd_upper*()= %d, d=dpois_w(*)= %d',\n      sum,\n      d\n    );\n    if (!lowerTail) res = logP ? R_Log1_Exp(d + sum) : 1 - d * sum;\n    else res = logP ? sum + d : sum * d;\n  } else if (alph - 1 < x && alph < 0.8 * (x + 50)) {\n    /* incl. large x compared to alph */\n    let sum;\n    let d = dpois_wrap(alph, x, logP);\n    pr_pgamma_raw('  x \"large\": d=dpois_w(*)= %d ', d);\n\n    if (alph < 1) {\n      if (x * DBL_EPSILON > 1 - alph) sum = R_D__1(logP);\n      else {\n        let f = pd_lower_cf(alph, x - (alph - 1)) * x / alph;\n        /* = [alph/(x - alph+1) + o(alph/(x-alph+1))] * x/alph = 1 + o(1) */\n        sum = logP ? log(f) : f;\n      }\n    } else {\n      sum = pd_lower_series(x, alph - 1); /* = (alph-1)/x + o((alph-1)/x) */\n      sum = logP ? log1p(sum) : 1 + sum;\n    }\n\n    pr_pgamma_raw(', sum= %d', sum);\n    if (!lowerTail) res = logP ? sum + d : sum * d;\n    else res = logP ? R_Log1_Exp(d + sum) : 1 - d * sum;\n  } else {\n    /* x >= 1 and x fairly near alph. */\n\n    pr_pgamma_raw(' using ppois_asymp()');\n    res = ppois_asymp(alph - 1, x, !lowerTail, logP);\n  }\n\n  /*\n   * We lose a fair amount of accuracy to underflow in the cases\n   * where the final result is very close to DBL_MIN.\t In those\n   * cases, simply redo via log space.\n   */\n  if (!logP && res < DBL_MIN / DBL_EPSILON) {\n    /* with(.Machine, double.xmin / double.eps) #|-> 1.002084e-292 */\n\n    pr_pgamma_raw(' very small res=%.14g; -> recompute via log\\n', res);\n    return exp(pgamma_raw(x, alph, lowerTail, true));\n  } else return res;\n}\n\nconst printer_pgamma = debug('pgamma');\nexport function pgamma<T>(\n  q: T,\n  shape: number,\n  scale: number,\n  lowerTail: boolean,\n  logP: boolean\n): T {\n  const fa: number[] = isArray(q) ? q : ([q] as any);\n\n  const result = fa.map(x => {\n    if (ISNAN(x) || ISNAN(shape) || ISNAN(scale)) {\n      return x + shape + scale;\n    }\n    if (shape < 0 || scale <= 0) return ML_ERR_return_NAN(printer_pgamma);\n    x /= scale;\n\n    if (ISNAN(x))\n      /* eg. original x = scale = +Inf */\n      return x;\n    if (shape === 0)\n      /* limit case; useful e.g. in pnchisq() */\n      return x <= 0\n        ? R_DT_0(lowerTail, logP)\n        : R_DT_1(lowerTail, logP); /* <= assert  pgamma(0,0) ==> 0 */\n    return pgamma_raw(x, shape, lowerTail, logP);\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n/* From: terra@gnome.org (Morten Welinder)\n * To: R-bugs@biostat.ku.dk\n * Cc: maechler@stat.math.ethz.ch\n * Subject: Re: [Rd] pgamma discontinuity (PR#7307)\n * Date: Tue, 11 Jan 2005 13:57:26 -0500 (EST)\n\n * this version of pgamma appears to be quite good and certainly a vast\n * improvement over current R code.  (I last looked at 2.0.1)  Apart from\n * type naming, this is what I have been using for Gnumeric 1.4.1.\n\n * This could be included into R as-is, but you might want to benefit from\n * making logcf, log1pmx, lgamma1p, and possibly logspace_add/logspace_sub\n * available to other parts of R.\n\n * MM: I've not (yet?) taken  logcf(), but the other four\n */\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/pgamma.ts","/*  AUTHOR\n*  Jacob Bogers, jkfbogers@gmail.com\n*  March 17, 2017\n* \n*  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998\t    Ross Ihaka\n *  Copyright (C) 2000-2013 The R Core Team\n *  Copyright (C) 2003\t    The R Foundation\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *   #include <Rmath.h>\n *\n *   double pnorm5(double x, double mu, double sigma, int lower_tail,int log_p);\n *\t   {pnorm (..) is synonymous and preferred inside R}\n *\n *   void   pnorm_both(double x, double *cum, double *ccum,\n *\t\t       int i_tail, int log_p);\n *\n *  DESCRIPTION\n *\n *\tThe main computation evaluates near-minimax approximations derived\n *\tfrom those in \"Rational Chebyshev approximations for the error\n *\tfunction\" by W. J. Cody, Math. Comp., 1969, 631-637.  This\n *\ttransportable program uses rational functions that theoretically\n *\tapproximate the normal distribution function to at least 18\n *\tsignificant decimal digits.  The accuracy achieved depends on the\n *\tarithmetic system, the compiler, the intrinsic functions, and\n *\tproper selection of the machine-dependent constants.\n *\n *  REFERENCE\n *\n *\tCody, W. D. (1993).\n *\tALGORITHM 715: SPECFUN - A Portable FORTRAN Package of\n *\tSpecial Function Routines and Test Drivers\".\n *\tACM Transactions on Mathematical Software. 19, 22-32.\n *\n *  EXTENSIONS\n *\n *  The \"_both\" , lower, upper, and log_p  variants were added by\n *  Martin Maechler, Jan.2000;\n *  as well as log1p() and similar improvements later on.\n *\n *  James M. Rath contributed bug report PR#699 and patches correcting SIXTEN\n *  and if() clauses {with a bug: \"|| instead of &&\" -> PR #2883) more in line\n *  with the original Cody code.\n */\n\nimport * as debug from 'debug';\n\nimport {\n  M_1_SQRT_2PI,\n  M_SQRT_32,\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D__1,\n  R_DT_0,\n  R_DT_1\n} from '../common/_general';\n\nimport { map } from '../r-func';\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  EPSILON: DBL_EPSILON,\n  NaN: ML_NAN,\n  MIN_VALUE: DBL_MIN\n} = Number;\n\nconst { trunc, log, exp, abs: fabs, log1p } = Math;\n\n\nimport { NumberW } from '../common/toms708';\n\nconst SIXTEN = 16; /* Cutoff allowing exact \"*\" and \"/\" */\nconst printer = debug('pnorm5');\n\nfunction do_del(\n  ccum: NumberW,\n  cum: NumberW,\n  log_p: boolean,\n  X: number,\n  temp: number,\n  upper: boolean,\n  lower: boolean,\n  x: number\n): void {\n  let xsq = trunc(X * SIXTEN) / SIXTEN;\n  let del = (X - xsq) * (X + xsq);\n  if (log_p) {\n    cum.val = -xsq * xsq * 0.5 + -del * 0.5 + log(temp);\n    if ((lower && x > 0) || (upper && x <= 0))\n      ccum.val = log1p(-exp(-xsq * xsq * 0.5) * exp(-del * 0.5) * temp);\n  } else {\n    cum.val = exp(-xsq * xsq * 0.5) * exp(-del * 0.5) * temp;\n    ccum.val = 1.0 - cum.val;\n  }\n}\n\nexport function pnorm5<T>(\n  q: T,\n  mu: number = 0,\n  sigma: number = 1,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n\n  return map(q)( fx => {\n    let p = new NumberW(0);\n    let cp = new NumberW(0);\n\n    /* Note: The structure of these checks has been carefully thought through.\n     * For example, if x == mu and sigma == 0, we get the correct answer 1.\n     */\n\n    if (ISNAN(fx) || ISNAN(mu) || ISNAN(sigma)) return fx + mu + sigma;\n\n    if (!R_FINITE(fx) && mu === fx) return ML_NAN; /* x-mu is NaN */\n    if (sigma <= 0) {\n      if (sigma < 0) return ML_ERR_return_NAN(printer);\n      /* sigma = 0 : */\n      return fx < mu ? R_DT_0(lowerTail, logP) : R_DT_1(lowerTail, logP);\n    }\n    p.val = (fx - mu) / sigma;\n    if (!R_FINITE(p.val))\n      return fx < mu ? R_DT_0(lowerTail, logP) : R_DT_1(lowerTail, logP);\n    fx = p.val;\n\n    pnorm_both(fx, p, cp, !lowerTail, logP);\n\n    return lowerTail ? p.val : cp.val;\n  }) as any;\n}\n\nexport function pnorm_both(\n  x: number,\n  cum: NumberW,\n  ccum: NumberW,\n  i_tail: boolean,\n  log_p: boolean\n) {\n  /* i_tail in {0,1,2} means: \"lower\", \"upper\", or \"both\" :\n       if(lower) return  *cum := P[X <= x]\n       if(upper) return *ccum := P[X >  x] = 1 - P[X <= x]\n    */\n  const a = [\n    2.2352520354606839287,\n    161.02823106855587881,\n    1067.6894854603709582,\n    18154.981253343561249,\n    0.065682337918207449113\n  ];\n  const b = [\n    47.20258190468824187,\n    976.09855173777669322,\n    10260.932208618978205,\n    45507.789335026729956\n  ];\n  const c = [\n    0.39894151208813466764,\n    8.8831497943883759412,\n    93.506656132177855979,\n    597.27027639480026226,\n    2494.5375852903726711,\n    6848.1904505362823326,\n    11602.651437647350124,\n    9842.7148383839780218,\n    1.0765576773720192317e-8\n  ];\n  const d = [\n    22.266688044328115691,\n    235.38790178262499861,\n    1519.377599407554805,\n    6485.558298266760755,\n    18615.571640885098091,\n    34900.952721145977266,\n    38912.003286093271411,\n    19685.429676859990727\n  ];\n  const p = [\n    0.21589853405795699,\n    0.1274011611602473639,\n    0.022235277870649807,\n    0.001421619193227893466,\n    2.9112874951168792e-5,\n    0.02307344176494017303\n  ];\n  const q = [\n    1.28426009614491121,\n    0.468238212480865118,\n    0.0659881378689285515,\n    0.00378239633202758244,\n    7.29751555083966205e-5\n  ];\n\n  let xden;\n  let xnum;\n  let temp;\n  let eps;\n  let xsq;\n  let y;\n\n  let min = DBL_MIN;\n\n  let i = new Int32Array([0]);\n  let lower: boolean;\n  let upper: boolean;\n\n  if (ISNAN(x)) {\n    cum.val = ccum.val = x;\n    return;\n  }\n\n  /* Consider changing these : */\n  eps = DBL_EPSILON * 0.5;\n\n  /* i_tail in {0,1,2} =^= {lower, upper, both} */\n  lower = i_tail !== true;\n  upper = i_tail !== false;\n\n  y = fabs(x);\n  if (y <= 0.67448975) {\n    /* qnorm(3/4) = .6744.... -- earlier had 0.66291 */\n    if (y > eps) {\n      xsq = x * x;\n      xnum = a[4] * xsq;\n      xden = xsq;\n      for (i[0] = 0; i[0] < 3; ++i[0]) {\n        xnum = (xnum + a[i[0]]) * xsq;\n        xden = (xden + b[i[0]]) * xsq;\n      }\n    } else xnum = xden = 0.0;\n\n    temp = x * (xnum + a[3]) / (xden + b[3]);\n    if (lower) cum.val = 0.5 + temp;\n    if (upper) ccum.val = 0.5 - temp;\n    if (log_p) {\n      if (lower) cum.val = log(cum.val);\n      if (upper) ccum.val = log(ccum.val);\n    }\n  } else if (y <= M_SQRT_32) {\n    /* Evaluate pnorm for 0.674.. = qnorm(3/4) < |x| <= sqrt(32) ~= 5.657 */\n\n    xnum = c[8] * y;\n    xden = y;\n    for (i[0] = 0; i[0] < 7; ++i[0]) {\n      xnum = (xnum + c[i[0]]) * y;\n      xden = (xden + d[i[0]]) * y;\n    }\n    temp = (xnum + c[7]) / (xden + d[7]);\n\n    //function do_del(ccum: NumberW, cum: NumberW, log_p: boolean, X: number, temp: number, upper: number, lower: number, x: number):\n    /*\n        #define swap_tail\n            if (x > 0.) {// swap  ccum <--> cum \n                temp = *cum; if(lower) *cum = *ccum; *ccum = temp; \\\n            }\n        */\n    do_del(ccum, cum, log_p, y, temp, upper, lower, x);\n    //swap_tail;\n    if (x > 0) {\n      // swap  ccum <--> cum\n      temp = cum.val;\n      if (lower) {\n        cum.val = ccum.val;\n      }\n      ccum.val = temp;\n    }\n  } else if (\n    (log_p && y < 1e170) /* avoid underflow below */ ||\n    /*  ^^^^^ MM FIXME: can speedup for log_p and much larger |x| !\n         * Then, make use of  Abramowitz & Stegun, 26.2.13, something like\n    \n         xsq = x*x;\n    \n         if(xsq * DBL_EPSILON < 1.)\n            del = (1. - (1. - 5./(xsq+6.)) / (xsq+4.)) / (xsq+2.);\n         else\n            del = 0.;\n         *cum = -.5*xsq - M_LN_SQRT_2PI - log(x) + log1p(-del);\n         *ccum = log1p(-exp(*cum)); /.* ~ log(1) = 0 *./\n    \n          swap_tail;\n    \n         [Yes, but xsq might be infinite.]\n    \n        */\n    (lower && -37.5193 < x && x < 8.2924) ||\n    (upper && -8.2924 < x && x < 37.5193)\n  ) {\n    /* else\t  |x| > sqrt(32) = 5.657 :\n     * the next two case differentiations were really for lower=T, log=F\n     * Particularly\t *not*\tfor  log_p !\n    \n     * Cody had (-37.5193 < x  &&  x < 8.2924) ; R originally had y < 50\n     *\n     * Note that we do want symmetry(0), lower/upper -> hence use y\n     */\n    /* Evaluate pnorm for x in (-37.5, -5.657) union (5.657, 37.5) */\n    xsq = 1.0 / (x * x); /* (1./x)*(1./x) might be better */\n    xnum = p[5] * xsq;\n    xden = xsq;\n    for (i[0] = 0; i[0] < 4; ++i[0]) {\n      xnum = (xnum + p[i[0]]) * xsq;\n      xden = (xden + q[i[0]]) * xsq;\n    }\n    temp = xsq * (xnum + p[4]) / (xden + q[4]);\n    temp = (M_1_SQRT_2PI - temp) / y;\n    do_del(ccum, cum, log_p, x, temp, upper, lower, x);\n    //do_del(x);\n    //swap_tail;\n    if (x > 0) {\n      // swap  ccum <--> cum\n      temp = cum.val;\n      if (lower) {\n        cum.val = ccum.val;\n      }\n      ccum.val = temp;\n    }\n  } else {\n    /* large x such that probs are 0 or 1 */\n    if (x > 0) {\n      cum.val = R_D__1(log_p);\n      ccum.val = R_D__0(log_p);\n    } else {\n      cum.val = R_D__0(log_p);\n      ccum.val = R_D__1(log_p);\n    }\n  }\n\n  /* do not return \"denormalized\" -- we do in R */\n  if (log_p) {\n    if (cum.val > -min) cum.val = -0;\n    if (ccum.val > -min) {\n      ccum.val = -0;\n    }\n  } else {\n    if (cum.val < min) cum.val = 0;\n    if (ccum.val < min) ccum.val = 0;\n  }\n\n  return;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/normal/pnorm.ts","'use strict';\n\nexport const i2_32m1 = 2.328306437080797e-10;\n\nexport function fixup(x: number) {\n  /* ensure 0 and 1 are never returned */\n  if (x <= 0.0) return 0.5 * i2_32m1;\n  if (1.0 - x <= 0.0) return 1.0 - 0.5 * i2_32m1;\n  return x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/fixup.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_D__0 } from '../common/_general';\nimport { dpois_raw } from '../poisson/dpois';\nimport { map } from '../r-func';\n\nconst { log } = Math;\nconst { isNaN: ISNAN } = Number;\nconst ML_POSINF = Infinity;\n\nconst printer = debug('dgamma');\n\nexport function dgamma<T>(\n  xx: T,\n  shape: number,\n  scale: number,\n  aslog: boolean = false\n): T {\n  return map(xx)(x => {\n    let pr: number;\n\n    if (ISNAN(x) || ISNAN(shape) || ISNAN(scale)) return x + shape + scale;\n    if (shape < 0 || scale <= 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (x < 0) {\n      return R_D__0(aslog);\n    }\n    if (shape === 0) {\n      /* point mass at 0 */\n      return x === 0 ? ML_POSINF : R_D__0(aslog);\n    }\n    if (x === 0) {\n      if (shape < 1) return ML_POSINF;\n      if (shape > 1) {\n        return R_D__0(aslog);\n      }\n      /* else */\n      return aslog ? -log(scale) : 1 / scale;\n    }\n\n    if (shape < 1) {\n      pr = dpois_raw(shape, x / scale, aslog);\n      return aslog ? pr + log(shape / x) : pr * shape / x;\n    }\n    /* else  shape >= 1 */\n    pr = dpois_raw(shape - 1, x / scale, aslog);\n    return aslog ? pr - log(scale) : pr / scale;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/dgamma.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 4, 2017\n *\n *  ORIGINAL AUTHOR\n *  AUTHOR\n *    Catherine Loader, catherine@research.bell-labs.com.\n *    October 23, 2000.\n *\n *  Merge in to R:\n *\tCopyright (C) 2000-2015 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *\n * DESCRIPTION\n *\n *    dpois() checks argument validity and calls dpois_raw().\n *\n *    dpois_raw() computes the Poisson probability  lb^x exp(-lb) / x!.\n *      This does not check that x is an integer, since dgamma() may\n *      call this with a fractional x argument. Any necessary argument\n *      checks should be done in the calling function.\n *\n */\n\nimport * as debug from 'debug';\n\nimport {\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D__1,\n  R_D_exp,\n  R_D_fexp,\n  R_D_nonint_check\n} from '../common/_general';\n\nimport { bd0 } from '../deviance'; \nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { map } from '../r-func';\nimport { stirlerr } from '../stirling';\n\nconst { round: R_forceint, log, PI } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE, MIN_VALUE: DBL_MIN } = Number;\nconst M_2PI = 2 * PI;\nconst printer = debug('dpois');\n\nexport function dpois_raw(\n  x: number,\n  lambda: number,\n  give_log: boolean\n): number {\n  /*       x >= 0 ; integer for dpois(), but not e.g. for pgamma()!\n        lambda >= 0\n    */\n  if (lambda === 0) return x === 0 ? R_D__1(give_log) : R_D__0(give_log);\n  if (!R_FINITE(lambda)) return R_D__0(give_log);\n  if (x < 0) return R_D__0(give_log);\n  if (x <= lambda * DBL_MIN) return R_D_exp(give_log, -lambda);\n  if (lambda < x * DBL_MIN)\n    return R_D_exp(give_log, -lambda + x * log(lambda) - lgammafn(x + 1));\n\n    return R_D_fexp(give_log, M_2PI * x, -stirlerr(x) - bd0(x, lambda));\n}\n\nexport function dpois(\n  _x: number | number[],\n  lambda: number,\n  give_log: boolean = false\n): number | number[] {\n  \n  return map(_x)(x => {\n    if (ISNAN(x) || ISNAN(lambda)) {\n      return x + lambda;\n    }\n\n    if (lambda < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    let rc = R_D_nonint_check(give_log, x, printer);\n    if (rc !== undefined) {\n      return rc;\n    }\n    if (x < 0 || !R_FINITE(x)) {\n      return R_D__0(give_log);\n    }\n    x = R_forceint(x);\n    return dpois_raw(x, lambda, give_log);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/poisson/dpois.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  Januari 22, 2017\n * \n *  Original Author: R Core team\n *\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 2013-2016 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  License for JS language implementation\n *  https://www.jacob-bogers/libRmath.js/Licenses/\n * \n *  License for R statistical package\n *  https://www.r-project.org/Licenses/\n * \n */\n\nimport * as debug from 'debug';\n\nimport {\n  fmod,\n  ME,\n  ML_ERROR\n} from '../common/_general';\n\nconst  { \n    abs: fabs, \n    PI: M_PI\n} = Math;\n\nconst { \n    NaN: ML_NAN,\n    isNaN: ISNAN,  \n    isFinite: R_FINITE  \n} = Number;\n\n/* HAVE_COSPI etc will not be defined in standalone-use: the\n   intention is to make the versions here available in that case.\n\n   The __cospi etc variants are from OS X (and perhaps other BSD-based systems).\n*/\n\n// cos(pi * x)  -- exact when x = k/2  for all integer k\nconst printer_cospi = debug('cospi');\n\nexport function cospi(x: number): number {\n  // NaNs propagated correctly\n  if (ISNAN(x)) return x;\n  if (!R_FINITE(x)) {\n    ML_ERROR(ME.ME_DOMAIN, '', printer_cospi);\n    return ML_NAN;\n  }\n\n  x = fmod(fabs(x), 2); // cos() symmetric; cos(pi(x + 2k)) == cos(pi x) for all integer k\n  if (fmod(x, 1) === 0.5) return 0;\n  if (x === 1) return -1;\n  if (x === 0) return 1;\n  // otherwise\n  return Math.cos(M_PI * x);\n}\n\n// tan(pi * x)  -- exact when x = k/2  for all integer k\nconst printer_tanpi = debug('tanpi');\nexport function tanpi(x: number): number {\n  if (ISNAN(x)) return x;\n  if (!R_FINITE(x)) {\n    ML_ERROR(ME.ME_DOMAIN, '', printer_tanpi);\n    return ML_NAN;\n  }\n  x = fmod(x, 1); // tan(pi(x + k)) == tan(pi x)  for all integer k\n  // map (-1,1) --> (-1/2, 1/2] :\n  if (x <= -0.5) {\n    x++;\n  } else if (x > 0.5) {\n    x--;\n  }\n  return x === 0 ? 0 : x === 0.5 ? ML_NAN : Math.tan(M_PI * x);\n}\n\nexport function atanpi(x: number) {\n  return Math.atan(x) / Math.PI;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/trigonometry/cospi.ts","import * as debug from 'debug';\n\nimport { fmod, ME, ML_ERROR } from '../common/_general';\n\nconst { PI: M_PI } = Math;\n\nconst { NaN: ML_NAN, isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\n// sin(pi * x)  -- exact when x = k/2  for all integer k\nconst printer_sinpi = debug('sinpi');\nexport function sinpi(x: number): number {\n  if (ISNAN(x)) return x;\n  if (!R_FINITE(x)) {\n    ML_ERROR(ME.ME_DOMAIN, 'sinpi not finite', printer_sinpi);\n    return ML_NAN;\n  }\n  x = fmod(x, 2); // sin(pi(x + 2k)) == sin(pi x)  for all integer k\n  // map (-2,2) --> (-1,1] :\n  if (x <= -1) x += 2;\n  else if (x > 1) x -= 2;\n  if (x === 0 || x === 1) return 0;\n  if (x === 0.5) return 1;\n  if (x === -0.5) return -1;\n  // otherwise\n  return Math.sin(M_PI * x);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/trigonometry/sinpi.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { dgamma as _dgamma } from './dgamma';\nimport { pgamma as _pgamma } from './pgamma';\nimport { qgamma as _qgamma } from './qgamma';\nimport { rgamma as _rgamma } from './rgamma';\n\n//aux\nimport { Inversion, IRNGNormal } from '../rng/normal';\n\n//special\nimport { multiplexer } from '../r-func';\nimport { gammafn } from './gamma_fn';\nimport { lgammafn } from './lgamma_fn';\nimport {\n  digamma,\n  pentagamma,\n  psigamma,\n  tetragamma,\n  trigamma\n} from './polygamma';\n\nexport const special = {\n  digamma,\n  gamma: gammafn,\n  lgamma: lgammafn,\n  pentagamma,\n  psigamma,\n  tetragamma,\n  trigamma\n};\n\nconst { abs } = Math;\n\nexport function Gamma(norm: IRNGNormal = new Inversion()) {\n  const printer_n = debug('gamma_normalize_params');\n\n  function gammaNormalizeParams(\n    rate?: number,\n    scale?: number\n  ): number | undefined {\n    //B: if scale and rate are undefined then _scale = 1\n    //C: if scale and rate are both defined and scale != 1/rate, return undefined\n    //D: if scale is defined and rate is not , use scale\n    //E: if rate is defined and scale is not then use 1/rate\n\n    //B\n    if (scale === undefined && rate === undefined) {\n      return 1;\n    }\n\n    //C\n    if (scale !== undefined && rate !== undefined) {\n      if (abs(scale * rate - 1) >= 1e-16) {\n        printer_n('Both scale:%d and rate:%d are defined but scale <> 1/rate');\n        return undefined;\n      }\n      return scale;\n    }\n\n    //D\n    if (scale !== undefined && rate === undefined) {\n      return scale;\n    }\n\n    //E\n    if (scale === undefined && rate !== undefined) {\n      return 1 / rate;\n    }\n\n    throw new Error('unreachable code, you cant be here!');\n  }\n\n  const printer_d = debug('dgamma');\n\n  function dgamma(\n    x: number | number[],\n    shape: number,\n    rate?: number,\n    scale?: number,\n    asLog = false\n  ) {\n    // scenarios\n    let _scale = gammaNormalizeParams(rate, scale);\n    if (_scale !== undefined) {\n      return _dgamma(x, shape, _scale, asLog);\n    }\n    printer_d('Cannot normalize to [scale]');\n    return multiplexer(x)(() => NaN);\n  }\n\n  const printer_p = debug('pgamma');\n  function pgamma(\n    q: number | number[],\n    shape: number,\n    rate?: number,\n    scale?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ) {\n    // scenarios\n    let _scale = gammaNormalizeParams(rate, scale);\n    if (_scale !== undefined) {\n      return _pgamma(q, shape, _scale, lowerTail, logP);\n    }\n    printer_p('Cannot normalize to [scale]');\n    return multiplexer(q)(() => NaN);\n  }\n\n  const printer_q = debug('qgamma');\n\n  function qgamma(\n    q: number | number[],\n    shape: number,\n    rate?: number,\n    scale?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ) {\n    // scenarios\n    let _scale = gammaNormalizeParams(rate, scale);\n    if (_scale !== undefined) {\n      return _qgamma(q, shape, _scale, lowerTail, logP);\n    }\n    printer_q('Cannot normalize to [scale]');\n    return multiplexer(q)(() => NaN);\n  }\n\n  const printer_r = debug('rgamma');\n  function rgamma(n: number, shape: number, rate?: number, scale?: number) {\n    let _scale = gammaNormalizeParams(rate, scale);\n    if (_scale !== undefined) {\n      return _rgamma(n, shape, _scale, norm);\n    }\n    printer_r('Cannot normalize to [scale]');\n  }\n\n  return Object.freeze({\n    dgamma,\n    pgamma,\n    qgamma,\n    rgamma\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/index.ts","\n/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nexport const  nsig_BESS = 16;\nexport const  ensig_BESS = 1e16;\nexport const  rtnsig_BESS = 1e-4;\nexport const  enmten_BESS = 8.9e-308;\nexport const  enten_BESS = 1e308;\n\nexport const  exparg_BESS = 709.;\nexport const  xlrg_BESS_IJ = 1e5;\nexport const  xlrg_BESS_Y = 1e8;\nexport const  thresh_BESS_Y = 16.;\n\nexport const  xmax_BESS_K = 705.342; /* maximal x for UNscaled answer */\n\n\n/* sqrt(DBL_MIN) =\t1.491668e-154 */\nexport const  sqxmin_BESS_K = 1.49e-154;\n\n/* x < eps_sinc\t <==>  sin(x)/x == 1 (particularly \"==>\");\n  Linux (around 2001-02) gives 2.14946906753213e-08\n  Solaris 2.5.1\t\t gives 2.14911933289084e-08\n  Javascript (V8) around 2018 gives 2.1491194e-8 => 0.9999999999999999,  \n*/\nexport const  M_eps_sinc = 2.149e-8;\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/bessel-constants.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n/* These are recursive, so we should do a stack check */\nimport * as debug from 'debug';\nimport { isOdd } from '../common/_general';\n\nconst { abs: fabs, log, exp, round } = Math;\nconst { isInteger, NEGATIVE_INFINITY: ML_NEGINF, isNaN: ISNAN } = Number;\n\nimport { internal_lbeta } from '../beta/lbeta';\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { lgammafn_sign } from '../gamma/lgammafn_sign';\nimport { multiplexer } from '../r-func';\nimport { numVector } from '../types';\n\n// used by \"qhyper\"\nfunction lfastchoose(n: number, k: number) {\n  return -log(n + 1) - internal_lbeta(n - k + 1, k + 1);\n}\n/* mathematically the same:\n   less stable typically, but useful if n-k+1 < 0 : */\n\nfunction lfastchoose2(n: number, k: number, sChoose?: number[]) {\n  let r: number;\n  r = lgammafn_sign(n - k + 1, sChoose);\n  return lgammafn(n + 1) - lgammafn(k + 1) - r;\n}\n\n\nexport function choose(_n: numVector, _k: numVector): numVector {\n  return multiplexer(_n, _k)((n, k) => internal_choose(n, k));\n}\n\nexport function lchoose(_n: numVector, _k: numVector): numVector {\n  return multiplexer(_n, _k)((n, k) => internal_lchoose(n, k));\n}\n\nconst printer_lchoose = debug('lchoose');\n\nexport function internal_lchoose(n: number, k: number): number {\n  let k0 = k;\n  k = Math.round(k);\n  /* NaNs propagated correctly */\n  if (ISNAN(n) || ISNAN(k)) return n + k;\n  if (fabs(k - k0) > 1e-7)\n    printer_lchoose('\"k\" (%d) must be integer, rounded to %d', k0, k);\n  if (k < 2) {\n    if (k < 0) return ML_NEGINF;\n    if (k === 0) return 0;\n    /* else: k == 1 */\n    return log(fabs(n));\n  }\n  /* else: k >= 2 */\n  if (n < 0) {\n    return internal_lchoose(-n + k - 1, k);\n  } else if (isInteger(n)) {\n    n = round(n);\n    if (n < k) return ML_NEGINF;\n    /* k <= n :*/\n    if (n - k < 2) return internal_lchoose(n, n - k); /* <- Symmetry */\n    /* else: n >= k+2 */\n    return lfastchoose(n, k);\n  }\n  /* else non-integer n >= 0 : */\n  if (n < k - 1) {\n    return lfastchoose2(n, k);\n  }\n  return lfastchoose(n, k);\n}\n\nconst k_small_max = 30;\n\n/* 30 is somewhat arbitrary: it is on the *safe* side:\n * both speed and precision are clearly improved for k < 30.\n*/\nconst printer_choose = debug('choose');\n\nexport function internal_choose(n: number, k: number): number {\n  let r: number;\n  let k0 = k;\n  k = round(k);\n  /* NaNs propagated correctly */\n  if (ISNAN(n) || ISNAN(k)) return n + k;\n  if (fabs(k - k0) > 1e-7)\n    printer_choose('k (%d) must be integer, rounded to %d', k0, k);\n  if (k < k_small_max) {\n    let j: number;\n    if (n - k < k && n >= 0 && isInteger(n)) k = n - k; /* <- Symmetry */\n    if (k < 0) return 0;\n    if (k === 0) return 1;\n    /* else: k >= 1 */\n    r = n;\n    for (j = 2; j <= k; j++) r *= (n - j + 1) / j;\n    return isInteger(n) ? round(r) : r;\n    /* might have got rounding errors */\n  }\n  /* else: k >= k_small_max */\n  if (n < 0) {\n    r = internal_choose(-n + k - 1, k);\n    if (isOdd(k)) r = -r;\n    return r;\n  } else if (isInteger(n)) {\n    n = round(n);\n    if (n < k) return 0;\n    if (n - k < k_small_max) return internal_choose(n, n - k); /* <- Symmetry */\n    return round(exp(lfastchoose(n, k)));\n  }\n  /* else non-integer n >= 0 : */\n  if (n < k - 1) {\n    let schoose: number[] = [0];\n    r = lfastchoose2(n, k, /* -> */ schoose);\n    return schoose[0] * exp(r);\n  }\n  return exp(lfastchoose(n, k));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/common/choose.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n\nexport function exp_rand(unif_rand: () => number): number {\n\n  const q: number[] = [\n    0.6931471805599453,\n    0.9333736875190459,\n    0.9888777961838675,\n    0.9984959252914960,\n    0.9998292811061389,\n    0.9999833164100727,\n    0.9999985691438767,\n    0.9999998906925558,\n    0.9999999924734159,\n    0.9999999995283275,\n    0.9999999999728814,\n    0.9999999999985598,\n    0.9999999999999289,\n    0.9999999999999968,\n    0.9999999999999999,\n    1.0000000000000000\n  ];\n\n  let a = 0.;\n  let u = unif_rand();    // precaution if u = 0 is ever returned \n  while (u <= 0. || u >= 1.) u = unif_rand();\n  while (true) {\n    u += u;\n    if (u > 1.)\n      break;\n    a += q[0];\n  }\n  u -= 1.;\n\n  if (u <= q[0])\n    return a + u;\n\n  let i = 0;\n  let ustar = unif_rand();\n  let umin = ustar;\n  do {\n    ustar = unif_rand();\n    if (umin > ustar)\n      umin = ustar;\n    i++;\n  } while (u > q[i]);\n  return a + umin * q[0];\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/sexp.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { chebyshev_eval } from '../chebyshev/chebyshev';\nimport { ME, ML_ERROR } from '../common/_general';\nimport { stirlerr } from '../stirling';\nimport { sinpi } from '../trigonometry';\nimport { lgammacor } from './lgammacor';\n\nimport * as debug from 'debug';\n\nconst printer = debug('gammafn');\n\nconst {\n  isNaN: ISNAN,\n  NaN: ML_NAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF\n} = Number;\n\nconst { PI: M_PI, abs: fabs, round, trunc, exp, log } = Math;\n\nconst M_LN_SQRT_2PI = Math.log(Math.sqrt(2 * Math.PI));\n\nconst gamcs: number[] = [\n  +0.8571195590989331421920062399942e-2,\n  +0.4415381324841006757191315771652e-2,\n  +0.5685043681599363378632664588789e-1,\n  -0.4219835396418560501012500186624e-2,\n  +0.1326808181212460220584006796352e-2,\n  -0.1893024529798880432523947023886e-3,\n  +0.3606925327441245256578082217225e-4,\n  -0.6056761904460864218485548290365e-5,\n  +0.1055829546302283344731823509093e-5,\n  -0.1811967365542384048291855891166e-6,\n  +0.3117724964715322277790254593169e-7,\n  -0.5354219639019687140874081024347e-8,\n  +0.919327551985958894688778682594e-9,\n  -0.1577941280288339761767423273953e-9,\n  +0.2707980622934954543266540433089e-10,\n  -0.4646818653825730144081661058933e-11,\n  +0.7973350192007419656460767175359e-12,\n  -0.1368078209830916025799499172309e-12,\n  +0.2347319486563800657233471771688e-13,\n  -0.4027432614949066932766570534699e-14,\n  +0.6910051747372100912138336975257e-15,\n  -0.1185584500221992907052387126192e-15,\n  +0.2034148542496373955201026051932e-16,\n  -0.3490054341717405849274012949108e-17,\n  +0.5987993856485305567135051066026e-18,\n  -0.1027378057872228074490069778431e-18,\n  +0.1762702816060529824942759660748e-19,\n  -0.3024320653735306260958772112042e-20,\n  +0.5188914660218397839717833550506e-21,\n  -0.8902770842456576692449251601066e-22,\n  +0.1527474068493342602274596891306e-22,\n  -0.2620731256187362900257328332799e-23,\n  +0.4496464047830538670331046570666e-24,\n  -0.7714712731336877911703901525333e-25,\n  +0.1323635453126044036486572714666e-25,\n  -0.2270999412942928816702313813333e-26,\n  +0.3896418998003991449320816639999e-27,\n  -0.6685198115125953327792127999999e-28,\n  +0.1146998663140024384347613866666e-28,\n  -0.1967938586345134677295103999999e-29,\n  +0.3376448816585338090334890666666e-30,\n  -0.5793070335782135784625493333333e-31\n];\n\nconst { isArray } = Array;\n\nexport function gammafn<T>(x: T): T {\n  const fx: number[] = isArray(x) ? x : [x] as any;\n\n  const result = fx.map(fx => {\n    return _gammafn(fx);\n  });\n\n  return result.length === 1 ? result[0] : result as any;\n}\n\nfunction _gammafn(x: number): number {\n  let i: number;\n  let n: number;\n  let y: number;\n  let sinpiy: number;\n  let value: number;\n\n  /* #ifdef NOMORE_FOR_THREADS\n     static int ngam = 0;\n     static double xmin = 0, xmax = 0., xsml = 0., dxrel = 0.;\n \n     // Initialize machine dependent constants, the first time gamma() is called.\n     //FIXME for threads ! \n     if (ngam == 0) {\n         ngam = chebyshev_init(gamcs, 42, DBL_EPSILON / 20);//was .1*d1mach(3)\n         gammalims(&xmin, &xmax);//-> ./gammalims.c \n         xsml = exp(fmax2(log(DBL_MIN), -log(DBL_MAX)) + 0.01);\n         //   = exp(.01)*DBL_MIN = 2.247e-308 for IEEE \n         dxrel = sqrt(DBL_EPSILON);//was sqrt(d1mach(4)) \n     }\n     #else\n     */\n  // For IEEE double precision DBL_EPSILON = 2^-52 = 2.220446049250313e-16 :\n  // (xmin, xmax) are non-trivial, see ./gammalims.c\n  // xsml = exp(.01)*DBL_MIN\n  // dxrel = sqrt(DBL_EPSILON) = 2 ^ -26\n  //\n  const ngam = 22;\n  const xmin = -170.5674972726612;\n  const xmax = 171.61447887182298;\n  const xsml = 2.2474362225598545e-308;\n  const dxrel = 1.490116119384765696e-8;\n\n  if (ISNAN(x)) return x;\n\n  //If the argument is exactly zero or a negative integer\n  //then return NaN.\n  if (x === 0 || (x < 0 && x === round(x))) {\n    ML_ERROR(ME.ME_DOMAIN, 'gammafn', printer);\n    return ML_NAN;\n  }\n\n  y = fabs(x);\n\n  if (y <= 10) {\n    // Compute gamma(x) for -10 <= x <= 10\n    // Reduce the interval and find gamma(1 + y) for 0 <= y < 1\n    // first of all.\n\n    n = x >> 0; // make int32\n    if (x < 0)--n;\n    y = x - n; // n = floor(x)  ==>\ty in [ 0, 1 )\n    --n;\n    value = chebyshev_eval(y * 2 - 1, gamcs, ngam) + 0.9375;\n    if (n === 0) return value; // x = 1.dddd = 1+y\n\n    if (n < 0) {\n      // compute gamma(x) for -10 <= x < 1\n      // exact 0 or \"-n\" checked already above\n      // The answer is less than half precision\n      // because x too near a negative integer.\n      if (x < -0.5 && fabs(x - trunc(x - 0.5) / x) < dxrel) {\n        ML_ERROR(ME.ME_PRECISION, 'gammafn', printer);\n      }\n      // The argument is so close to 0 that the result would overflow.\n      if (y < xsml) {\n        ML_ERROR(ME.ME_RANGE, 'gammafn', printer);\n        if (x > 0) return ML_POSINF;\n        else return ML_NEGINF;\n      }\n\n      n = -n;\n\n      for (i = 0; i < n; i++) {\n        value /= x + i;\n      }\n      return value;\n    } else {\n      // gamma(x) for 2 <= x <= 10\n\n      for (i = 1; i <= n; i++) {\n        value *= y + i;\n      }\n      return value;\n    }\n  } else {\n    // gamma(x) for\t y = |x| > 10.\n\n    if (x > xmax) {\n      // Overflow\n      ML_ERROR(ME.ME_RANGE, 'gammafn', printer);\n      return ML_POSINF;\n    }\n\n    if (x < xmin) {\n      // Underflow\n      ML_ERROR(ME.ME_UNDERFLOW, 'gammafn', printer);\n      return 0;\n    }\n\n    if (y <= 50 && y === trunc(y)) {\n      // compute (n - 1)!\n      value = 1;\n      for (i = 2; i < y; i++) value *= i;\n    } else {\n      // normal case\n      value = exp(\n        (y - 0.5) * log(y) -\n        y +\n        M_LN_SQRT_2PI +\n        (2 * y === trunc(2) * y ? stirlerr(y) : lgammacor(y))\n      );\n    }\n    if (x > 0) return value;\n\n    if (fabs((x - trunc(x - 0.5)) / x) < dxrel) {\n      // The answer is less than half precision because\n      // the argument is too near a negative integer.\n\n      ML_ERROR(ME.ME_PRECISION, 'gammafn', printer);\n    }\n\n    sinpiy = sinpi(y);\n    if (sinpiy === 0) {\n      // Negative integer arg - overflow\n      ML_ERROR(ME.ME_RANGE, 'gammafn', printer);\n      return ML_POSINF;\n    }\n    return -M_PI / (y * sinpiy * value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/gamma_fn.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { exp_rand } from '../exp/sexp';\nimport { IRNGNormal } from '../rng/normal/inormal-rng';\n\nconst { expm1, abs: fabs, sqrt, log, exp } = Math;\nconst { isFinite: R_FINITE } = Number;\n\nexport function rgamma(\n  n: number = 1,\n  a: number = 1,\n  scale: number = 1, //this is not the rate!!\n  rng: IRNGNormal\n): number | number[] {\n  const result = new Array(n).fill(0).map(() => _rgamma(a, scale, rng));\n\n  return result.length === 1 ? result[0] : result;\n}\n\nconst printer_rgamma = debug('_rgamma');\n\nexport function _rgamma(\n  a: number = 1,\n  scale: number = 1,\n  rng: IRNGNormal\n): number {\n  /* Constants : */\n  const sqrt32 = 5.656854;\n  const exp_m1 = 0.36787944117144232159; /* exp(-1) = 1/e */\n\n  /* Coefficients q[k] - for q0 = sum(q[k]*a^(-k))\n     * Coefficients a[k] - for q = q0+(t*t/2)*sum(a[k]*v^k)\n     * Coefficients e[k] - for exp(q)-1 = sum(e[k]*q^k)\n     */\n  const q1 = 0.04166669;\n  const q2 = 0.02083148;\n  const q3 = 0.00801191;\n  const q4 = 0.00144121;\n  const q5 = -7.388e-5;\n  const q6 = 2.4511e-4;\n  const q7 = 2.424e-4;\n\n  const a1 = 0.3333333;\n  const a2 = -0.250003;\n  const a3 = 0.2000062;\n  const a4 = -0.1662921;\n  const a5 = 0.1423657;\n  const a6 = -0.1367177;\n  const a7 = 0.1233795;\n\n  /* State variables [FIXME for threading!] :*/\n\n  let aa = 0;\n  let aaa = 0;\n  let s = 0;\n  let s2 = 0;\n  let d = 0; /* no. 1 (step 1) */\n  let q0 = 0;\n  let b = 0;\n  let si = 0;\n  let c = 0; /* no. 2 (step 4) */\n\n  let e = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n  let ret_val = 0;\n\n  if (!R_FINITE(a) || !R_FINITE(scale) || a < 0.0 || scale <= 0.0) {\n    if (scale === 0) return 0;\n    return ML_ERR_return_NAN(printer_rgamma);\n  }\n\n  if (a < 1) {\n    /* GS algorithm for parameters a < 1 */\n    if (a === 0) return 0;\n    e = 1.0 + exp_m1 * a;\n    while (true) {\n      p = e * (rng.unif_rand() as number);\n      if (p >= 1.0) {\n        x = -log((e - p) / a);\n        if (exp_rand(rng.unif_rand as any) >= (1.0 - a) * log(x)) break;\n      } else {\n        x = exp(log(p) / a);\n        if (exp_rand(rng.unif_rand as any) >= x) break;\n      }\n    }\n    return scale * x;\n  }\n\n  /* --- a >= 1 : GD algorithm --- */\n\n  /* Step 1: Recalculations of s2, s, d if a has changed */\n  if (a !== aa) {\n    aa = a;\n    s2 = a - 0.5;\n    s = sqrt(s2);\n    d = sqrt32 - s * 12.0;\n  }\n  /* Step 2: t = standard normal deviate,\n               x = (s,1/2) -normal deviate. */\n\n  /* immediate acceptance (i) */\n  t = rng.norm_rand() as number;\n  x = s + 0.5 * t;\n  ret_val = x * x;\n  if (t >= 0.0) return scale * ret_val;\n\n  /* Step 3: u = 0,1 - uniform sample. squeeze acceptance (s) */\n  u = rng.unif_rand() as number;\n  if (d * u <= t * t * t) return scale * ret_val;\n\n  /* Step 4: recalculations of q0, b, si, c if necessary */\n\n  if (a !== aaa) {\n    aaa = a;\n    r = 1.0 / a;\n    q0 =\n      ((((((q7 * r + q6) * r + q5) * r + q4) * r + q3) * r + q2) * r + q1) * r;\n\n    /* Approximation depending on size of parameter a */\n    /* The constants in the expressions for b, si and c */\n    /* were established by numerical experiments */\n\n    if (a <= 3.686) {\n      b = 0.463 + s + 0.178 * s2;\n      si = 1.235;\n      c = 0.195 / s - 0.079 + 0.16 * s;\n    } else if (a <= 13.022) {\n      b = 1.654 + 0.0076 * s2;\n      si = 1.68 / s + 0.275;\n      c = 0.062 / s + 0.024;\n    } else {\n      b = 1.77;\n      si = 0.75;\n      c = 0.1515 / s;\n    }\n  }\n  /* Step 5: no quotient test if x not positive */\n\n  if (x > 0.0) {\n    /* Step 6: calculation of v and quotient q */\n    v = t / (s + s);\n    if (fabs(v) <= 0.25)\n      q =\n        q0 +\n        0.5 *\n        t *\n        t *\n        ((((((a7 * v + a6) * v + a5) * v + a4) * v + a3) * v + a2) * v + a1) *\n        v;\n    else q = q0 - s * t + 0.25 * t * t + (s2 + s2) * log(1.0 + v);\n\n    /* Step 7: quotient acceptance (q) */\n    if (log(1.0 - u) <= q) return scale * ret_val;\n  }\n\n  while (true) {\n    /* Step 8: e = standard exponential deviate\n         *\tu =  0,1 -uniform deviate\n         *\tt = (b,si)-double exponential (laplace) sample */\n    e = exp_rand(rng.unif_rand as any);\n    u = rng.unif_rand() as number;\n    u = u + u - 1.0;\n    if (u < 0.0) t = b - si * e;\n    else t = b + si * e;\n    /* Step\t 9:  rejection if t < tau(1) = -0.71874483771719 */\n    if (t >= -0.71874483771719) {\n      /* Step 10:\t calculation of v and quotient q */\n      v = t / (s + s);\n      if (fabs(v) <= 0.25)\n        q =\n          q0 +\n          0.5 *\n          t *\n          t *\n          ((((((a7 * v + a6) * v + a5) * v + a4) * v + a3) * v + a2) * v +\n            a1) *\n          v;\n      else q = q0 - s * t + 0.25 * t * t + (s2 + s2) * log(1.0 + v);\n      /* Step 11:\t hat acceptance (h) */\n      /* (if q not positive go to step 8) */\n      if (q > 0.0) {\n        w = expm1(q);\n        /*  ^^^^^ original code had approximation with rel.err < 2e-7 */\n        /* if t is rejected sample again at step 8 */\n        if (c * fabs(u) <= w * exp(e - 0.5 * t * t)) break;\n      }\n    }\n  } /* repeat .. until  `t' is accepted */\n  x = s + 0.5 * t;\n  return scale * x * x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/rgamma.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  feb 25, 2017\n * \n *  ORIGINAL AUTHOR:\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2014 The R Core Team\n *  Copyright (C) 2003\t    The R Foundation\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n * \n *  License for JS language implementation\n *  https://www.jacob-bogers/libRmath.js/Licenses/\n * \n *  License for R statistical package\n *  https://www.r-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *\tdouble dnorm4(double x, double mu, double sigma, int give_log)\n *\t      {dnorm (..) is synonymous and preferred inside R}\n *\n *  DESCRIPTION\n *\n *\tCompute the density of the normal distribution.\n */\nimport * as debug from 'debug';\nimport {\n  DBL_MANT_DIG,\n  DBL_MIN_EXP,\n  ldexp,\n  M_1_SQRT_2PI,\n  M_LN2,\n  M_LN_SQRT_2PI,\n  ML_ERR_return_NAN,\n  R_D__0\n} from '../common/_general';\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  MAX_VALUE: DBL_MAX,\n  POSITIVE_INFINITY: ML_POSINF,\n  NaN: ML_NAN\n} = Number;\nconst { sqrt, exp, abs: fabs, round: R_forceint, log } = Math;\nconst printer = debug('dnorm4');\nconst { isArray } = Array;\n\nexport function dnorm4<T>(\n  x: T,\n  mu: number = 0,\n  sigma: number = 1,\n  give_log: boolean = false\n): T {\n  let fa: number[] = (() => (isArray(x) && x) || [x])() as any;\n\n  let result = fa.map(fx => {\n    if (ISNAN(fx) || ISNAN(mu) || ISNAN(sigma)) {\n      return fx + mu + sigma;\n    }\n\n    if (!R_FINITE(sigma)) {\n      return R_D__0(give_log);\n    }\n\n    if (!R_FINITE(fx) && mu === fx) {\n      return ML_NAN; /* x-mu is NaN */\n    }\n\n    if (sigma <= 0) {\n      if (sigma < 0) {\n        return ML_ERR_return_NAN(printer);\n      }\n      /* sigma == 0 */\n      return fx === mu ? ML_POSINF : R_D__0(give_log);\n    }\n    fx = (fx - mu) / sigma;\n\n    if (!R_FINITE(fx)) return R_D__0(give_log);\n\n    fx = fabs(fx);\n    if (fx >= 2 * sqrt(DBL_MAX)) return R_D__0(give_log);\n    if (give_log) {\n      return -(M_LN_SQRT_2PI + 0.5 * fx * fx + log(sigma));\n    }\n\n    if (fx < 5) return M_1_SQRT_2PI * exp(-0.5 * fx * fx) / sigma;\n\n    /* ELSE:\n\n     * x*x  may lose upto about two digits accuracy for \"large\" x\n     * Morten Welinder's proposal for PR#15620\n     * https://bugs.r-project.org/bugzilla/show_bug.cgi?id=15620\n\n     * -- 1 --  No hoop jumping when we underflow to zero anyway:\n\n     *  -x^2/2 <         log(2)*.Machine$double.min.exp  <==>\n     *     x   > sqrt(-2*log(2)*.Machine$double.min.exp) =IEEE= 37.64031\n     * but \"thanks\" to denormalized numbers, underflow happens a bit later,\n     *  effective.D.MIN.EXP <- with(.Machine, double.min.exp + double.ulp.digits)\n     * for IEEE, DBL_MIN_EXP is -1022 but \"effective\" is -1074\n     * ==> boundary = sqrt(-2*log(2)*(.Machine$double.min.exp + .Machine$double.ulp.digits))\n     *              =IEEE=  38.58601\n     * [on one x86_64 platform, effective boundary a bit lower: 38.56804]\n     */\n    if (fx > sqrt(-2 * M_LN2 * (DBL_MIN_EXP + 1 - DBL_MANT_DIG))) {\n      return 0;\n    }\n\n    /* Now, to get full accurary, split x into two parts,\n   /* Now, to get full accurary, split x into two parts,\n     *  x = x1+x2, such that |x2| <= 2^-16.\n     * Assuming that we are using IEEE doubles, that means that\n     * x1*x1 is error free for x<1024 (but we have x < 38.6 anyway).\n\n     * If we do not have IEEE this is still an improvement over the naive formula.\n     */\n    let x1 = ldexp(R_forceint(ldexp(fx, 16)), -16); //  R_forceint(x * 65536) / 65536 =\n    let x2 = fx - x1;\n    return (\n      M_1_SQRT_2PI / sigma * (exp(-0.5 * x1 * x1) * exp((-0.5 * x2 - x1) * x2))\n    );\n  });\n\n  return (result.length === 1 ? result[0] : result) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/normal/dnorm.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 26, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2011 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double rpois(double lambda)\n *\n *  DESCRIPTION\n *\n *    Random variates from the Poisson distribution.\n *\n *  REFERENCE\n *\n *    Ahrens, J.H. and Dieter, U. (1982).\n *    Computer generation of Poisson deviates\n *    from modified normal distributions.\n *    ACM Trans. Math. Software 8, 163-179.\n */\n\nimport * as debug from 'debug';\n\nimport {\n  imax2,\n  imin2,\n  M_1_SQRT_2PI,\n  ML_ERR_return_NAN\n} from '../common/_general';\n\nimport { exp_rand } from '../exp/sexp';\nimport { map, seq } from '../r-func';\nimport { IRNGNormal } from '../rng/normal';\nimport { fsign } from '../signrank/fsign';\n\nconst { trunc, log, abs: fabs, pow, exp, floor, sqrt } = Math;\nconst { isFinite: R_FINITE } = Number;\nconst sequence = seq()();\n\nconst a0 = -0.5;\nconst a1 = 0.3333333;\nconst a2 = -0.2500068;\nconst a3 = 0.2000118;\nconst a4 = -0.1661269;\nconst a5 = 0.1421878;\nconst a6 = -0.1384794;\nconst a7 = 0.125006;\n\nconst one_7 = 0.1428571428571428571;\nconst one_12 = 0.0833333333333333333;\nconst one_24 = 0.0416666666666666667;\n\nexport function rpois(\n  N: number,\n  mu: number,\n  rng: IRNGNormal\n): number | number[] {\n  return map(sequence(N))(() => _rpois(mu, rng)) as any;\n}\n\nconst printer_rpois = debug('_rpois');\nfunction _rpois(mu: number, rng: IRNGNormal): number {\n  /* Factorial Table (0:9)! */\n  const fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880];\n\n  /* These are static --- persistent between calls for same mu : */\n  let l = 0;\n  let m = 0;\n  let pp = new Array(36);\n  let b1 = 0;\n  let b2 = 0;\n  let c = 0;\n  let c0 = 0;\n  let c1 = 0;\n  let c2 = 0;\n  let c3 = 0;\n  let p0 = 0;\n  let p = 0;\n  let q = 0;\n  let s = 0;\n  let d = 0;\n  let omega = 0;\n  let big_l = 0; /* integer \"w/o overflow\" */\n  let muprev = 0;\n  let muprev2 = 0; /*, muold\t = 0.*/\n\n  /* Local Vars  [initialize some for -Wall]: */\n  let del;\n  let difmuk = 0;\n  let E = 0;\n  let fk = 0;\n  let fx;\n  let fy;\n  let g;\n  let px;\n  let py;\n  let t = 0;\n  let u = 0;\n  let v;\n  let x;\n  let pois = -1;\n  let k;\n  let kflag = 0;\n  let big_mu;\n  let new_big_mu = false;\n\n  if (!R_FINITE(mu) || mu < 0) {\n    return ML_ERR_return_NAN(printer_rpois);\n  }\n  if (mu <= 0) return 0;\n\n  big_mu = mu >= 10;\n  if (big_mu) {\n    new_big_mu = false;\n  }\n\n  if (!(big_mu && mu === muprev)) {\n    /* maybe compute new persistent par.s */\n\n    if (big_mu) {\n      new_big_mu = true;\n      /* Case A. (recalculation of s,d,l\tbecause mu has changed):\n             * The poisson probabilities pk exceed the discrete normal\n             * probabilities fk whenever k >= m(mu).\n             */\n      muprev = mu;\n      s = sqrt(mu);\n      d = 6 * mu * mu;\n      big_l = floor(mu - 1.1484);\n      /* = an upper bound to m(mu) for all mu >= 10.*/\n    } else {\n      /* Small mu ( < 10) -- not using normal approx. */\n\n      /* Case B. (start new table and calculate p0 if necessary) */\n\n      /*muprev = 0.;-* such that next time, mu != muprev ..*/\n      if (mu !== muprev) {\n        muprev = mu;\n        m = imax2(1, trunc(mu));\n        l = 0; /* pp[] is already ok up to pp[l] */\n        q = p0 = p = exp(-mu);\n      }\n\n      while (true) {\n        /* Step U. uniform sample for inversion method */\n        u = rng.unif_rand() as number;\n        if (u <= p0) return 0;\n\n        /* Step T. table comparison until the end pp[l] of the\n                   pp-table of cumulative poisson probabilities\n                   (0.458 > ~= pp[9](= 0.45792971447) for mu=10 ) */\n        if (l !== 0) {\n          for (k = u <= 0.458 ? 1 : imin2(l, m); k <= l; k++)\n            if (u <= pp[k]) return k;\n          if (l === 35)\n            /* u > pp[35] */\n            continue;\n        }\n        /* Step C. creation of new poisson\n                   probabilities p[l..] and their cumulatives q =: pp[k] */\n        l++;\n        for (k = l; k <= 35; k++) {\n          p *= mu / k;\n          q += p;\n          pp[k] = q;\n          if (u <= q) {\n            l = k;\n            return k;\n          }\n        }\n        l = 35;\n      } /* end(repeat) */\n    } /* mu < 10 */\n  } /* end {initialize persistent vars} */\n\n  /* Only if mu >= 10 : ----------------------- */\n\n  /* Step N. normal sample */\n  g =\n    mu + s * (rng.norm_rand() as number); /* norm_rand() ~ N(0,1), standard normal */\n\n  if (g >= 0) {\n    pois = floor(g);\n    /* Step I. immediate acceptance if pois is large enough */\n    if (pois >= big_l) return pois;\n    /* Step S. squeeze acceptance */\n    fk = pois;\n    difmuk = mu - fk;\n    u = rng.unif_rand() as number; /* ~ U(0,1) - sample */\n    if (d * u >= difmuk * difmuk * difmuk) return pois;\n  }\n\n  /* Step P. preparations for steps Q and H.\n       (recalculations of parameters if necessary) */\n\n  if (new_big_mu || mu !== muprev2) {\n    /* Careful! muprev2 is not always == muprev\n           because one might have exited in step I or S\n           */\n    muprev2 = mu;\n    omega = M_1_SQRT_2PI / s;\n    /* The quantities b1, b2, c3, c2, c1, c0 are for the Hermite\n         * approximations to the discrete normal probabilities fk. */\n\n    b1 = one_24 / mu;\n    b2 = 0.3 * b1 * b1;\n    c3 = one_7 * b1 * b2;\n    c2 = b2 - 15 * c3;\n    c1 = b1 - 6 * b2 + 45 * c3;\n    c0 = 1 - b1 + 3 * b2 - 15 * c3;\n    c = 0.1069 / mu; /* guarantees majorization by the 'hat'-function. */\n  }\n\n  let gotoStepF = false;\n  let once = true;\n  while (true) {\n    if (once) {\n      once = false;\n      if (g >= 0) {\n        /* 'Subroutine' F is called (kflag=0 for correct return) */\n        kflag = 0;\n        //goto Step_F;\n        gotoStepF = true;\n      }\n    }\n    if (!gotoStepF) {\n      /* Step E. Exponential Sample */\n\n      E = exp_rand(rng.unif_rand as any); /* ~ Exp(1) (standard exponential) */\n\n      /*  sample t from the laplace 'hat'\n                (if t <= -0.6744 then pk < fk for all mu >= 10.) */\n      u = 2 * (rng.unif_rand() as number) - 1;\n      t = 1.8 + fsign(E, u >= 0);\n    }\n    if (t > -0.6744 || gotoStepF) {\n      if (!gotoStepF) {\n        pois = floor(mu + s * t);\n        fk = pois;\n        difmuk = mu - fk;\n\n        /* 'subroutine' F is called (kflag=1 for correct return) */\n        kflag = 1;\n      }\n      gotoStepF = false;\n      //Step_F: /* 'subroutine' F : calculation of px,py,fx,fy. */\n\n      if (pois < 10) {\n        /* use factorials from table fact[] */\n        px = -mu;\n        py = pow(mu, pois) / fact[trunc(pois)];\n      } else {\n        /* Case pois >= 10 uses polynomial approximation\n                   a0-a7 for accuracy when advisable */\n        del = one_12 / fk;\n        del = del * (1 - 4.8 * del * del);\n        v = difmuk / fk;\n        if (fabs(v) <= 0.25)\n          px =\n            fk *\n              v *\n              v *\n              (((((((a7 * v + a6) * v + a5) * v + a4) * v + a3) * v + a2) * v +\n                a1) *\n                v +\n                a0) -\n            del; /* |v| > 1/4 */\n        else px = fk * log(1 + v) - difmuk - del;\n        py = M_1_SQRT_2PI / sqrt(fk);\n      }\n      x = (0.5 - difmuk) / s;\n      x *= x; /* x^2 */\n      fx = -0.5 * x;\n      fy = omega * (((c3 * x + c2) * x + c1) * x + c0);\n      if (kflag > 0) {\n        /* Step H. Hat acceptance (E is repeated on rejection) */\n        if (c * fabs(u) <= py * exp(px + E) - fy * exp(fx + E)) {\n          break;\n        }\n      } else if (fy - u * fy <= py * exp(px - fx)) {\n        /* Step Q. Quotient acceptance (rare case) */\n        break;\n      }\n    } /* t > -.67.. */\n  }\n  return pois;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/poisson/rpois.ts","export { cospi } from './cospi';\nexport { sinpi } from './sinpi';\nexport { tanpi, atanpi } from './tanpi';\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/trigonometry/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n//special\nimport { beta } from './beta';\nimport { lbeta } from './lbeta';\n\n//distros\n//dbeta\nimport { dbeta as _dbeta } from './dbeta';\nimport { dnbeta as _dnbeta } from './dnbeta';\n\n//pbeta\nimport { pbeta as _pbeta } from './pbeta';\nimport { pnbeta as _pnbeta } from './pnbeta';\n\n//qbeta\nimport { qbeta as _qbeta } from './qbeta';\nimport { qnbeta as _qnbeta } from './qnbeta';\n\n//rbeta\nimport { rchisq } from '../chi-2/rchisq';\nimport { rnchisq } from '../chi-2/rnchisq';\nimport { multiplexer } from '../r-func';\nimport { Inversion, IRNGNormal } from '../rng/normal';\nimport { boolVector, numVector } from '../types';\nimport { rbeta as _rbeta } from './rbeta';\nexport const special = {\n  beta,\n  lbeta\n};\n\nexport function Beta(rng: IRNGNormal = new Inversion()) {\n  function dbeta(\n    x: numVector,\n    shape1: numVector,\n    shape2: numVector,\n    ncp?: numVector,\n    log?: boolVector\n  ): numVector {\n    // I added the === 0 here, because dnbeta will go back to dbeta if 0 (c source code)\n    if (ncp === undefined || ncp === 0) {\n      return _dbeta(x, shape1, shape2, log || false);\n    } else {\n      return _dnbeta(x, shape1, shape2, ncp || 0, log || false);\n    }\n  }\n\n  function pbeta<T>(\n    q: T,\n    shape1: number,\n    shape2: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ): T {\n    if (ncp === undefined || ncp === 0) {\n      return _pbeta(q, shape1, shape2, lowerTail, logP);\n    } else {\n      return _pnbeta(q, shape1, shape2, ncp, lowerTail, logP);\n    }\n  }\n\n  function qbeta<T>(\n    p: T,\n    shape1: number,\n    shape2: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ): T {\n    if (ncp === undefined) {\n      return _qbeta(p, shape1, shape2, lowerTail, logP);\n    } else {\n      return _qnbeta(p, shape1, shape2, ncp, lowerTail, logP);\n    }\n  }\n\n  function rbeta(\n    n: number,\n    shape1: number,\n    shape2: number,\n    ncp = 0 // NOTE: normally the default is undefined, here it is '0'.\n  ): number | number[] {\n    if (ncp === 0) {\n      return _rbeta(n, shape1, shape2, rng);\n    } else {\n      let ax = rnchisq(n, 2 * shape1, ncp, rng);\n      let bx = rchisq(n, 2 * shape2, rng);\n      let result = multiplexer(ax, bx)((a, b) => a / (a + b));\n      return result.length === 1 ? result[0] : result;\n    }\n  }\n\n  return Object.freeze({\n    dbeta,\n    pbeta,\n    qbeta,\n    rbeta\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ME, ML_ERR_return_NAN, ML_ERROR, R_P_bounds_01 } from '../common/_general';\n\nimport { lgammafn } from '../gamma/lgamma_fn';\n\nimport { NumberW, Toms708 } from '../common/toms708';\n\nconst { log1p, floor, max: fmax2, sqrt, log, exp } = Math;\nconst { isNaN: ISNAN } = Number;\n\nconst printer = debug('pnbeta_raw');\n\nfunction pnbeta_raw(\n  x: number,\n  o_x: number,\n  a: number,\n  b: number,\n  ncp: number\n): number {\n  /* o_x  == 1 - x  but maybe more accurate */\n\n  /* change errmax and itrmax if desired;\n     * original (AS 226, R84) had  (errmax; itrmax) = (1e-6; 100) */\n  const errmax = 1.0e-9;\n  const itrmax = 10000; /* 100 is not enough for pf(ncp=200)\n                     see PR#11277 */\n  // double\n  let a0;\n  let lbeta;\n  let c;\n  let errbd;\n  let x0;\n  let temp = new NumberW(0);\n  let tmp_c = new NumberW(0);\n  // int\n  let ierr = new NumberW(0);\n\n  // long double\n  let ans;\n  let ax;\n  let gx;\n  let q;\n  let sumq;\n\n  if (ncp < 0 || a <= 0 || b <= 0) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  if (x < 0 || o_x > 1 || (x === 0 && o_x === 1)) return 0;\n  if (x > 1 || o_x < 0 || (x === 1 && o_x === 0)) return 1;\n\n  c = ncp / 2;\n\n  /* initialize the series */\n\n  x0 = floor(fmax2(c - 7 * sqrt(c), 0));\n  a0 = a + x0;\n  lbeta = lgammafn(a0) + lgammafn(b) - lgammafn(a0 + b);\n  /* temp = pbeta_raw(x, a0, b, TRUE, FALSE), but using (x, o_x): */\n  Toms708.bratio(a0, b, x, o_x, temp, tmp_c, ierr);\n\n  gx = exp(\n    a0 * log(x) + b * (x < 0.5 ? log1p(-x) : log(o_x)) - lbeta - log(a0)\n  );\n  if (a0 > a) q = exp(-c + x0 * log(c) - lgammafn(x0 + 1));\n  else q = exp(-c);\n\n  sumq = 1 - q;\n  ans = ax = q * temp.val;\n\n  /* recurse over subsequent terms until convergence is achieved */\n  let j = floor(x0); // x0 could be billions, and is in package EnvStats\n  do {\n    j++;\n    temp.val -= gx;\n    gx *= x * (a + b + j - 1) / (a + j);\n    q *= c / j;\n    sumq -= q;\n    ax = temp.val * q;\n    ans += ax;\n    errbd = (temp.val - gx) * sumq;\n  } while (errbd > errmax && j < itrmax + x0);\n\n  if (errbd > errmax)  ML_ERROR(ME.ME_PRECISION, 'pnbeta', printer);\n  if (j >= itrmax + x0)  ML_ERROR(ME.ME_NOCONV, 'pnbeta', printer);\n\n  return ans;\n}\n\nconst printer_pnbeta2 = debug('pnbeta2');\nexport function pnbeta2(\n  x: number,\n  o_x: number,\n  a: number,\n  b: number,\n  ncp: number /* o_x  == 1 - x  but maybe more accurate */,\n  lower_tail: boolean,\n  log_p: boolean\n) {\n  let ans = pnbeta_raw(x, o_x, a, b, ncp);\n\n  /* return R_DT_val(ans), but we want to warn about cancellation here */\n  if (lower_tail) {\n    return log_p ? log(ans) : ans;\n  } else {\n    if (ans > 1 - 1e-10) ML_ERROR(ME.ME_PRECISION, 'pnbeta', printer_pnbeta2);\n    if (ans > 1.0) ans = 1.0; /* Precaution */\n    /* include standalone case */\n    return log_p ? log1p(-ans) : 1 - ans;\n  }\n}\n\nexport function pnbeta<T>(\n  _x: T,\n  a: number,\n  b: number,\n  ncp: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n\n  const fa: number[] = Array.isArray(_x) ? _x : [_x] as any;\n\n  const result = fa.map(x => {\n    if (ISNAN(x) || ISNAN(a) || ISNAN(b) || ISNAN(ncp)) return x + a + b + ncp;\n\n    let rc = R_P_bounds_01(lower_tail, log_p, x, 0, 1);\n    if (rc !== undefined) {\n      return rc;\n    }\n    return pnbeta2(x, 1 - x, a, b, ncp, lower_tail, log_p);\n  });\n\n  return result.length === 1 ? result[0] : result as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/pnbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_pow_di } from '../common/_general';\n\nimport { map, seq } from '../r-func';\nimport { IRNG } from '../rng/irng';\nimport { qbinom } from './qbinom';\n\nconst { log, abs: fabs, abs, sqrt, min: fmin2, trunc, round } = Math;\nconst { MAX_SAFE_INTEGER: INT_MAX, isFinite: R_FINITE } = Number;\nconst sequence = seq()();\n\nconst printer_rbinom = debug('_rbinom');\n\nexport function rbinom(\n  N: number,\n  nin: number,\n  pp: number,\n  rng: IRNG\n): number | number[] {\n  return map(sequence(N))(() => _rbinom(nin, pp, rng)) as any;\n}\n\nfunction _rbinom(nin: number, pp: number, rng: IRNG): number {\n  \n // double\n  let c = 0;\n  let fm = 0;\n  let npq = 0;\n  let p1 = 0;\n  let p2 = 0;\n  let p3 = 0;\n  let p4 = 0;\n  let qn = 0;\n  let xl = 0;\n  let xll = 0;\n  let xlr = 0;\n  let xm = 0;\n  let xr = 0;\n  let psave = -1.0;\n  \n  //int\n  let nsave = -1;\n  let m = 0;\n\n//double\n  let f;\n  let f1;\n  let f2;\n  let u;\n  let v: number;\n  let w;\n  let w2;\n  let x;\n  let x1;\n  let x2;\n  let z;\n  let z2;\n  let p;\n  let q;\n  let np;\n  let g;\n  let r;\n  let al;\n  let alv;\n  let amaxp;\n  let ffm;\n  let ynorm;\n\n  //int\n  let i;\n  let ix = 0;\n  let k;\n  let n;\n\n  if (!R_FINITE(nin)) return ML_ERR_return_NAN(printer_rbinom);\n  r = round(nin);\n  if (r !== nin) return ML_ERR_return_NAN(printer_rbinom);\n  if (\n    !R_FINITE(pp) ||\n    /* n=0, p=0, p=1 are not errors <TSL>*/\n    r < 0 ||\n    pp < 0 ||\n    pp > 1\n  ) {\n    return ML_ERR_return_NAN(printer_rbinom);\n  }\n  if (r === 0 || pp === 0) return 0;\n  if (pp === 1) return r;\n\n  if (r >= INT_MAX) {\n    /* evade integer overflow,\n            and r == INT_MAX gave only even values */\n    printer_rbinom('Evade overflow:%d > MAX_SAFE_INTEGER', r);\n    return qbinom(\n      rng.unif_rand() as number, //between 0 and 1\n      r,\n      pp,\n      /*lower_tail*/ false,\n      /*log_p*/ false\n    );\n  }\n  /* else */\n  n = trunc(r);\n\n  p = fmin2(pp, 1 - pp);\n  q = 1 - p;\n  np = n * p;\n  r = p / q;\n  g = r * (n + 1);\n\n  /* Setup, perform only when parameters change [using static (globals): */\n\n  /* FIXING: Want this thread safe\n       -- use as little (thread globals) as possible\n    */\n  let gotoL_np_small = false;\n  if (pp !== psave || n !== nsave) {\n    psave = pp;\n    nsave = n;\n    if (np < 30.0) {\n      /* inverse cdf logic for mean less than 30 */\n      qn = R_pow_di(q, n);\n      gotoL_np_small = true;\n      //goto L_np_small;\n    } else {\n      ffm = np + p;\n      m = trunc(ffm);\n      fm = m;\n      npq = np * q;\n      p1 = trunc(2.195 * sqrt(npq) - 4.6 * q) + 0.5;\n      xm = fm + 0.5;\n      xl = xm - p1;\n      xr = xm + p1;\n      c = 0.134 + 20.5 / (15.3 + fm);\n      al = (ffm - xl) / (ffm - xl * p);\n      xll = al * (1.0 + 0.5 * al);\n      al = (xr - ffm) / (xr * q);\n      xlr = al * (1.0 + 0.5 * al);\n      p2 = p1 * (1.0 + c + c);\n      p3 = p2 + c / xll;\n      p4 = p3 + c / xlr;\n    }\n  } else if (n === nsave) {\n    if (np < 30.0) gotoL_np_small = true;\n    //goto L_np_small;\n  }\n\n  /*-------------------------- np = n*p >= 30 : ------------------- */\n  let gotoFinis = false;\n  while (true && !gotoL_np_small) {\n    u = (rng.unif_rand() as number) * p4;\n    v = (rng.unif_rand() as number);\n    /* triangular region */\n    if (u <= p1) {\n      ix = trunc(xm - p1 * v + u);\n      gotoFinis = true;\n      break;\n      //goto finis;\n    }\n    /* parallelogram region */\n    if (u <= p2) {\n      x = xl + (u - p1) / c;\n      v = v * c + 1.0 - fabs(xm - x) / p1;\n      if (v > 1.0 || v <= 0) continue;\n      ix = trunc(x);\n    } else {\n      if (u > p3) {\n        /* right tail */\n        ix = trunc(xr - log(v) / xlr);\n        if (ix > n) continue;\n        v = v * (u - p3) * xlr;\n      } else {\n        /* left tail */\n        ix = trunc(xl + log(v) / xll);\n        if (ix < 0) continue;\n        v = v * (u - p2) * xll;\n      }\n    }\n    /* determine appropriate way to perform accept/reject test */\n    k = abs(ix - m);\n    if (k <= 20 || k >= npq / 2 - 1) {\n      /* explicit evaluation */\n      f = 1.0;\n      if (m < ix) {\n        for (i = m + 1; i <= ix; i++) f *= g / i - r;\n      } else if (m !== ix) {\n        for (i = ix + 1; i <= m; i++) f /= g / i - r;\n      }\n      if (v <= f) {\n        gotoFinis = true;\n        break;\n        //goto finis;\n      }\n    } else {\n      /* squeezing using upper and lower bounds on log(f(x)) */\n      amaxp = k / npq * ((k * (k / 3 + 0.625) + 0.1666666666666) / npq + 0.5);\n      ynorm = -k * k / (2.0 * npq);\n      alv = log(v);\n      if (alv < ynorm - amaxp) {\n        gotoFinis = true;\n        break;\n        //goto finis;\n      }\n      if (alv <= ynorm + amaxp) {\n        /* stirling's formula to machine accuracy */\n        /* for the final acceptance/rejection test */\n        x1 = ix + 1;\n        f1 = fm + 1.0;\n        z = n + 1 - fm;\n        w = n - ix + 1.0;\n        z2 = z * z;\n        x2 = x1 * x1;\n        f2 = f1 * f1;\n        w2 = w * w;\n        if (\n          alv <=\n          xm * log(f1 / x1) +\n            (n - m + 0.5) * log(z / w) +\n            (ix - m) * log(w * p / (x1 * q)) +\n            (13860.0 - (462.0 - (132.0 - (99.0 - 140.0 / f2) / f2) / f2) / f2) /\n              f1 /\n              166320.0 +\n            (13860.0 - (462.0 - (132.0 - (99.0 - 140.0 / z2) / z2) / z2) / z2) /\n              z /\n              166320.0 +\n            (13860.0 - (462.0 - (132.0 - (99.0 - 140.0 / x2) / x2) / x2) / x2) /\n              x1 /\n              166320.0 +\n            (13860.0 - (462.0 - (132.0 - (99.0 - 140.0 / w2) / w2) / w2) / w2) /\n              w /\n              166320\n        ) {\n          gotoFinis = true; // finis;\n          break;\n        }\n      }\n    }\n  }\n  if (!gotoFinis) {\n    //L_np_small:\n    /*---------------------- np = n*p < 30 : ------------------------- */\n\n    while (true) {\n      ix = 0;\n      f = qn;\n      u = rng.unif_rand();\n      while (true) {\n        if (u < f) {\n          //goto finis;\n          gotoFinis = true;\n          break;\n        }\n        if (ix > 110) break;\n        u -= f;\n        ix++;\n        f *= g / ix - r;\n      }\n      if (gotoFinis) {\n        break;\n      }\n    }\n  }\n  //finis:\n  if (psave > 0.5) {\n    ix = n - ix;\n  }\n  return ix;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial/rbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\n\nconst { abs: fabs } = Math;\n\nconst printer = debug('chebyshev_eval');\n\nexport function chebyshev_init(\n  dos: number[],\n  nos: number,\n  eta: number\n): number {\n  let retCode: number = 0;\n  //let ii: number;\n  let err: number;\n\n  if (nos < 1) return 0;\n\n  err = 0.0;\n\n  for (let ii = 1; ii <= nos; ii++) {\n    retCode = nos - ii;\n    err += fabs(dos[retCode]);\n    if (err > eta) {\n      return retCode;\n    }\n  }\n  return retCode;\n}\n\nexport function chebyshev_eval(x: number, a: number[], n: number): number {\n  let b0: number;\n  let b1: number;\n  let b2: number;\n  let twox: number;\n  let i: number;\n\n  if (n < 1 || n > 1000) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  if (x < -1.1 || x > 1.1) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  twox = x * 2;\n  b2 = b1 = 0;\n  b0 = 0;\n  for (i = 1; i <= n; i++) {\n    b2 = b1;\n    b1 = b0;\n    b0 = twox * b1 - b2 + a[n - i];\n  }\n  return (b0 - b2) * 0.5;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chebyshev/chebyshev.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport {\n    pgamma\n} from '../gamma/pgamma';\n\nexport function pchisq<T>(x: T, df: number, lowerTail: boolean= true, logP: boolean= false) {\n    return pgamma(x, df / 2., 2., lowerTail, logP);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/pchisq.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport {\n  M_LN_SQRT_2PI,\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR,\n  R_D__1,\n  R_D_exp,\n  R_DT_0,\n  R_DT_1,\n  R_DT_val\n} from '../common/_general';\n\nimport { R_Log1_Exp } from '../exp/expm1';\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { logspace_add } from '../gamma/logspace-add';\nimport { map } from '../r-func';\nimport { pchisq } from './pchisq';\n\nconst {\n  sqrt,\n  abs: fabs,\n  exp,\n  log,\n  min: fmin2,\n  max: fmax2,\n  LN2: M_LN2,\n  LN10: M_LN10\n} = Math;\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  EPSILON: DBL_EPSILON,\n  NEGATIVE_INFINITY: ML_NEGINF\n} = Number;\n\nexport const DBL_MAX_EXP = Math.log2(Number.MAX_VALUE);\nexport const DBL_MIN_EXP = Math.log2(Number.MIN_VALUE);\n\nconst _dbl_min_exp = M_LN2 * DBL_MIN_EXP;\n/*= -708.3964 for IEEE double precision */\nconst { expm1, log1p } = Math;\nconst printer = debug('pnchisq');\n\nexport function pnchisq<T>(\n  xx: T,\n  df: number,\n  ncp = 0,\n  lower_tail = true,\n  log_p = false\n): T {\n  return map(xx)(x => {\n    let ans;\n\n    if (ISNAN(x) || ISNAN(df) || ISNAN(ncp)) {\n      return NaN;\n    }\n    if (!R_FINITE(df) || !R_FINITE(ncp)) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (df < 0 || ncp < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    ans = pnchisq_raw(\n      x,\n      df,\n      ncp,\n      1e-12,\n      8 * DBL_EPSILON,\n      1000000,\n      lower_tail,\n      log_p\n    );\n    if (ncp >= 80) {\n      if (lower_tail) {\n        ans = fmin2(ans, R_D__1(log_p)); /* e.g., pchisq(555, 1.01, ncp = 80) */\n      } else {\n        /* !lower_tail */\n        /* since we computed the other tail cancellation is likely */\n        if (ans < (log_p ? -10 * M_LN10 : 1e-10))\n          ML_ERROR(ME.ME_PRECISION, 'pnchisq', printer);\n        if (!log_p) ans = fmax2(ans, 0.0); /* Precaution PR#7099 */\n      }\n    }\n    if (!log_p || ans < -1e-8) {\n      return ans;\n    }\n\n    // log_p  &&  ans > -1e-8\n    // prob. = exp(ans) is near one: we can do better using the other tail\n    printer('   pnchisq_raw(*, log_p): ans=%d => 2nd call, other tail', ans);\n\n    // FIXME: (sum,sum2) will be the same (=> return them as well and reuse here ?)\n    ans = pnchisq_raw(\n      x,\n      df,\n      ncp,\n      1e-12,\n      8 * DBL_EPSILON,\n      1000000,\n      !lower_tail,\n      false\n    );\n    return log1p(-ans);\n  }) as any;\n}\n\nexport function pnchisq_raw(\n  x: number,\n  f: number,\n  theta: number /* = ncp */,\n  errmax: number,\n  reltol: number,\n  itrmax: number,\n  lower_tail: boolean,\n  log_p: boolean\n): number {\n  //double\n  let lam;\n  let x2;\n  let f2;\n  let term;\n  let bound;\n  let f_x_2n;\n  let f_2n;\n  let l_lam = -1;\n  let l_x = -1; /* initialized for -Wall */\n  //Rboolean\n  let lamSml: boolean;\n  let tSml: boolean;\n  let is_r: boolean;\n  let is_b: boolean;\n  let is_it: boolean;\n  \n  //LDOUBLE\n  let ans: number;\n  let u: number;\n  let v: number;\n  let t: number;\n  let lt: number;\n  let lu = -1;\n\n  if (x <= 0) {\n    if (x === 0 && f === 0) {\n      const _L = -0.5 * theta;\n      const result =\n         lower_tail ?\n         R_D_exp(log_p, _L)\n        : (log_p ? R_Log1_Exp(_L) \n            : -expm1(_L)\n          )\n        ;\n      printer('result1:%d', result);\n      return result;  \n    }\n    /* x < 0  or {x==0, f > 0} */\n    return R_DT_0(lower_tail, log_p);\n  }\n  if (!R_FINITE(x)) return R_DT_1(lower_tail, log_p);\n\n  /* This is principally for use from qnchisq */\n\n  if (theta < 80) {\n    /* use 110 for Inf, as ppois(110, 80/2, lower.tail=FALSE) is 2e-20 */\n    //double\n    let ans;\n    //int\n    let i;\n    // Have  pgamma(x,s) < x^s / Gamma(s+1) (< and ~= for small x)\n    // === = > pchisq(x, f) = pgamma(x, f/2, 2) = pgamma(x/2, f/2)\n    //                  <  (x/2)^(f/2) / Gamma(f/2+1) < eps\n    // <==>  f/2 * log(x/2) - log(Gamma(f/2+1)) < log(eps) ( ~= -708.3964 )\n    // <==>        log(x/2) < 2/f*(log(Gamma(f/2+1)) + log(eps))\n    // <==> log(x) < log(2) + 2/f*(log(Gamma(f/2+1)) + log(eps))\n    if (\n      lower_tail &&\n      f > 0 &&\n      log(x) < M_LN2 + 2 / f * (lgammafn(f / 2 + 1) + _dbl_min_exp)\n    ) {\n      // all  pchisq(x, f+2*i, lower_tail, FALSE), i=0,...,110 would underflow to 0.\n      // === = > work in log scale\n      let lambda = 0.5 * theta;\n      let sum = ML_NEGINF;\n      let sum2 = ML_NEGINF;\n      let pr = -lambda;\n      /* we need to renormalize here: the result could be very close to 1 */\n      for (i = 0; i < 110; pr += log(lambda) - log(++i)) {\n        sum2 = logspace_add(sum2, pr);\n        sum = logspace_add(sum, pr + pchisq(x, f + 2 * i, lower_tail, true));\n        if (sum2 >= -1e-15) {/*<=> EXP(sum2) >= 1-1e-15 */ \n          break;\n        }\n      }\n      ans = sum - sum2;\n      printer(\n        'pnchisq(x=%d, f=%d, th.=%d); th. < 80, logspace: i=%d, ans=(sum=%d)-(sum2=%d)',\n        x,\n        f,\n        theta,\n        i,\n        sum,\n        sum2\n      );\n\n      return log_p ? ans : exp(ans);\n    } else {\n      let lambda = 0.5 * theta;\n      let sum = 0;\n      let sum2 = 0;\n      let pr = exp(-lambda); // does this need a feature test?\n      /* we need to renormalize here: the result could be very close to 1 */\n      for (i = 0; i < 110; pr *= lambda / ++i) {\n        // pr === =  exp(-lambda) lambda^i / i!  ===   dpois(i, lambda)\n        sum2 += pr;\n        // pchisq(*, i, *) is  strictly decreasing to 0 for lower_tail=TRUE\n        //                 and strictly increasing to 1 for lower_tail=FALSE\n        sum += pr * pchisq(x, f + 2 * i, lower_tail, false);\n        if (sum2 >= 1 - 1e-15) break;\n      }\n      ans = sum / sum2;\n\n      printer(\n        'pnchisq(x=%d, f=%d, theta=%d); theta < 80: i=%d, sum=%d, sum2=%d',\n        x,\n        f,\n        theta,\n        i,\n        sum,\n        sum2\n      );\n\n      return log_p ? log(ans) : ans;\n    }\n  } // if(theta < 80)\n\n  // else: theta ===  ncp >= 80 --------------------------------------------\n\n  printer('pnchisq(x=%d, f=%d, theta=%d >= 80): ', x, f, theta);\n\n  // Series expansion ------- FIXME: log_p=TRUE, lower_tail=FALSE only applied at end\n\n  lam = 0.5 * theta;\n  lamSml = -lam < _dbl_min_exp;\n  if (lamSml) {\n    /* MATHLIB_ERROR(\n           \"non centrality parameter (= %g) too large for current algorithm\",\n           theta) */\n    u = 0;\n    lu = -lam; /* ===  ln(u) */\n    l_lam = log(lam);\n  } else {\n    u = exp(-lam);\n  }\n\n  /* evaluate the first term */\n  v = u;\n  x2 = 0.5 * x;\n  f2 = 0.5 * f;\n  f_x_2n = f - x;\n\n  printer('-- v=exp(-th/2)=%d, x/2= %d, f/2= %d', v, x2, f2);\n\n  if (\n    f2 * DBL_EPSILON > 0.125 && /* very large f and x ~= f: probably needs */\n    fabs((t = x2 - f2))  < /* another algorithm anyway */\n     sqrt(DBL_EPSILON) * f2\n  ) {\n    /* evade cancellation error */\n    /* t = exp((1 - t)*(2 - t/(f2 + 1))) / sqrt(2*M_PI*(f2 + 1));*/\n    lt = (1 - t) * (2 - t / (f2 + 1)) - M_LN_SQRT_2PI - 0.5 * log(f2 + 1);\n\n    printer(' (case I) === > ');\n  } else {\n    /* Usual case 2: careful not to overflow .. : */\n    lt = f2 * log(x2) - x2 - lgammafn(f2 + 1);\n  }\n\n  printer(' lt= %d', lt);\n\n  tSml = lt < _dbl_min_exp;\n  if (tSml) {\n    printer(' is very small');\n\n    if (x > f + theta + 5 * sqrt(2 * (f + 2 * theta))) {\n      /* x > E[X] + 5* sigma(X) */\n      return R_DT_1(\n        lower_tail,\n        log_p\n      ); /* FIXME: could be more accurate than 0. */\n    } /* else */\n    l_x = log(x);\n    ans = term = 0;\n    t = 0;\n  } else {\n    t = exp(lt);\n    printer(', t=exp(lt)= %d', t);\n    term = v * t;\n    ans = term;\n  }\n\n  let n; //cant put it inside the for below((\n  for (n = 1, f_2n = f + 2, f_x_2n += 2 ;; n++, f_2n += 2, f_x_2n += 2 ) {\n    printer(' _OL_: n=%d', n);\n    /* f_2n    === = f + 2*n\n         * f_x_2n  === = f - x + 2*n   > 0  <==> (f+2n)  >   x */\n    if (f_x_2n > 0) {\n      /* find the error bound and check for convergence */\n\n      bound = t * x / f_x_2n;\n\n      printer(' L10: n=%d; term= %d; bound= %d', n, term, bound);\n\n      is_r = is_it = false;\n      /* convergence only if BOTH absolute and relative error < 'bnd' */\n      if (\n        ((is_b = bound <= errmax) && (is_r = term <= reltol * ans)) ||\n        (is_it = n > itrmax)\n      ) {\n        printer(\n          'BREAK n=%d %s; bound= %d %s, rel.err= %d %s',\n          n,\n          is_it ? '> itrmax' : '',\n          bound,\n          is_b ? '<= errmax' : '',\n          term / ans,\n          is_r ? '<= reltol' : ''\n        );\n        break; /* out completely */\n      }\n    }\n\n    /* evaluate the next term of the */\n    /* expansion and then the partial sum */\n\n    if (lamSml) {\n      lu += l_lam - log(n); /* u = u* lam / n */\n      if (lu >= _dbl_min_exp) {\n        /* no underflow anymore === > change regime */\n\n        printer(' n=%d; nomore underflow in u = exp(lu) === > change', n);\n\n        v = u = exp(lu); /* the first non-0 'u' */\n        lamSml = false;\n      }\n    } else {\n      u *= lam / n;\n      v += u;\n    }\n    if (tSml) {\n      lt += l_x - log(f_2n); /* t <- t * (x / f2n) */\n      if (lt >= _dbl_min_exp) {\n        /* no underflow anymore === > change regime */\n\n        printer('  n=%d; nomore underflow in t = exp(lt) === > change', n);\n\n        t = exp(lt); /* the first non-0 't' */\n        tSml = false;\n      }\n    } else {\n      t *= x / f_2n;\n    }\n    if (!lamSml && !tSml) {\n      term = v * t;\n      ans += term;\n    }\n  } /* for(n ...) */\n\n  if (is_it) {\n    printer('pnchisq(x=%d, ..): not converged in %d iter.', x, itrmax);\n  }\n\n  printer(' ===  L_End: n=%d; term= %d; bound=%d', n, term, bound);\n\n  return R_DT_val(lower_tail, log_p, ans);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/pnchisq.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 18, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *\tThe quantile function of the chi-squared distribution.\n */\n\nimport { qgamma } from '../gamma/qgamma';\n\n\nexport function qchisq<T>(\n  p: T,\n  df: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return qgamma(p, 0.5 * df, 2.0, lowerTail, logP);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/qchisq.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\n\nimport { rgamma } from '../gamma/rgamma';\nimport { rpois } from '../poisson/rpois';\nimport { IRNGNormal } from '../rng/normal/inormal-rng';\nimport { rchisq } from './rchisq';\n\nconst printer = debug('rnchisq');\nconst { isFinite: R_FINITE } = Number;\n\nexport function rnchisq(\n  n: number,\n  df: number,\n  lambda: number,\n  rng: IRNGNormal\n): number | number[] {\n\n  const result = new Array(n).fill(0).map(() => {\n\n    if (!R_FINITE(df) || !R_FINITE(lambda) || df < 0 || lambda < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (lambda === 0) {\n      return df === 0 ? 0 : (rgamma(1, df / 2, 2, rng) as number);\n    } else {\n      let r = rpois(1, lambda / 2, rng) as number;\n      if (r > 0) r = rchisq(1, 2 * r, rng) as number;\n      if (df > 0) r += rgamma(1, df / 2, 2, rng) as number;\n      return r;\n    }\n  });\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/rnchisq.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { chebyshev_eval } from '../chebyshev/chebyshev';\nimport { ME, ML_ERR_return_NAN, ML_ERROR } from '../common/_general';\n\nconst printer = debug('lgammacor');\n\nconst algmcs: number[] = [\n    +.1666389480451863247205729650822e+0,\n    -.1384948176067563840732986059135e-4,\n    +.9810825646924729426157171547487e-8,\n    -.1809129475572494194263306266719e-10,\n    +.6221098041892605227126015543416e-13,\n    -.3399615005417721944303330599666e-15,\n    +.2683181998482698748957538846666e-17,\n    -.2868042435334643284144622399999e-19,\n    +.3962837061046434803679306666666e-21,\n    -.6831888753985766870111999999999e-23,\n    +.1429227355942498147573333333333e-24,\n    -.3547598158101070547199999999999e-26,\n    +.1025680058010470912000000000000e-27,\n    -.3401102254316748799999999999999e-29,\n    +.1276642195630062933333333333333e-30\n];\n\nconst nalgm = 5;\nconst xbig = 94906265.62425156;\nconst xmax = 3.745194030963158e306;\n\nexport function lgammacor(x: number) {\n\n    let tmp: number;\n\n    // For IEEE double precision DBL_EPSILON = 2^-52 = 2.220446049250313e-16 :\n    //   xbig = 2 ^ 26.5\n    //   xmax = DBL_MAX / 48 =  2^1020 / 3 \n\n    if (x < 10)\n        return ML_ERR_return_NAN(printer);\n    else if (x >= xmax) {\n        ML_ERROR(ME.ME_UNDERFLOW, 'lgammacor', printer);\n        // allow to underflow below \n    }\n    else if (x < xbig) {\n        tmp = 10 / x;\n        return chebyshev_eval(tmp * tmp * 2 - 1, algmcs, nalgm) / x;\n    }\n    return 1 / (x * 12);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/lgammacor.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 23, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include \"Rnorm.h\"\n *    double rnorm(double mu, double sigma);\n *\n *  DESCRIPTION\n *\n *    Random variates from the normal distribution.\n *\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { multiplexer, seq as crSeq } from '../r-func';\nimport { IRNGNormal } from '../rng/normal';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst printer = debug('rnorm');\nconst seq = crSeq()();\n\nexport function rnorm(\n  n: number = 1,\n  mu: number = 0,\n  sigma: number = 1,\n  rng: IRNGNormal\n): number | number[] {\n\n  let result = multiplexer(seq(n))(() => {\n    if (ISNAN(mu) || !R_FINITE(sigma) || sigma < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (sigma === 0 || !R_FINITE(mu)) {\n      return mu; /* includes mu = +/- Inf with finite sigma */\n    }\n    return mu + sigma * (rng.norm_rand() as number);\n  });\n\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/normal/rnorm.ts","export { stirlerr } from './stirlerror';\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/stirling/index.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 4, 2017\n * \n *  ORIGINAL AUTHOR:\n *  AUTHOR\n *    Catherine Loader, catherine@research.bell-labs.com.\n *    October 23, 2000.\n *\n *  Merge in to R:\n *\tCopyright (C) 2000-2015 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *\n * DESCRIPTION\n *\n *    The t density is evaluated as\n *         sqrt(n/2) / ((n+1)/2) * Gamma((n+3)/2) / Gamma((n+2)/2).\n *             * (1+x^2/n)^(-n/2)\n *             / sqrt( 2 pi (1+x^2/n) )\n *\n *    This form leads to a stable computation for all\n *    values of n, including n -> 0 and n -> infinity.\n */\nimport * as debug from 'debug';\n\nimport {\n  M_1_SQRT_2PI,\n  M_LN_SQRT_2PI,\n  ML_ERR_return_NAN,\n  R_D__0\n} from '../common/_general';\n\nimport { bd0 } from '../deviance/bd0';\nimport { dnorm4 as dnorm } from '../normal/dnorm';\nimport { map } from '../r-func';\nimport { stirlerr } from '../stirling/stirlerror';\n\nconst { log1p, abs: fabs, exp, log, sqrt } = Math;\nconst { isNaN: ISNAN, EPSILON: DBL_EPSILON, isFinite: R_FINITE } = Number;\n\nconst printer_dt = debug('dt');\nexport function dt<T>(\n  xx: T,\n  n: number,\n  giveLog: boolean = false\n): T {\n  \n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(n)) {\n      return x + n;\n    }\n    if (n <= 0) {\n      return ML_ERR_return_NAN(printer_dt);\n    }\n    if (!R_FINITE(x)) {\n      return R_D__0(giveLog);\n    }\n    if (!R_FINITE(n)) {\n      return dnorm(x, 0, 1, giveLog);\n    }\n\n    let u: number;\n    let t = -bd0(n / 2, (n + 1) / 2) + stirlerr((n + 1) / 2) - stirlerr(n / 2);\n    let x2n = x * x / n;\n    // in  [0, Inf]\n    let ax = 0; // <- -Wpedantic\n    let l_x2n; // := log(sqrt(1 + x2n)) = log(1 + x2n)/2\n    let lrg_x2n: boolean = x2n > 1 / DBL_EPSILON;\n    if (lrg_x2n) {\n      // large x^2/n :\n      ax = fabs(x);\n      l_x2n = log(ax) - log(n) / 2; // = log(x2n)/2 = 1/2 * log(x^2 / n)\n      u = //  log(1 + x2n) * n/2 =  n * log(1 + x2n)/2 =\n        n * l_x2n;\n    } else if (x2n > 0.2) {\n      l_x2n = log(1 + x2n) / 2;\n      u = n * l_x2n;\n    } else {\n      l_x2n = log1p(x2n) / 2;\n      u = -bd0(n / 2, (n + x * x) / 2) + x * x / 2;\n    }\n\n    //old: return  R_D_fexp(M_2PI*(1+x2n), t-u);\n\n    // R_D_fexp(f,x) :=  (give_log ? -0.5*log(f)+(x) : exp(x)/sqrt(f))\n    // f = 2pi*(1+x2n)\n    //  ==> 0.5*log(f) = log(2pi)/2 + log(1+x2n)/2 = log(2pi)/2 + l_x2n\n    //\t     1/sqrt(f) = 1/sqrt(2pi * (1+ x^2 / n))\n    //\t\t       = 1/sqrt(2pi)/(|x|/sqrt(n)*sqrt(1+1/x2n))\n    //\t\t       = M_1_SQRT_2PI * sqrt(n)/ (|x|*sqrt(1+1/x2n))\n    if (giveLog) return t - u - (M_LN_SQRT_2PI + l_x2n);\n\n    // else :  if(lrg_x2n) : sqrt(1 + 1/x2n) ='= sqrt(1) = 1\n    let I_sqrt_ = lrg_x2n ? sqrt(n) / ax : exp(-l_x2n);\n    return exp(t - u) * M_1_SQRT_2PI * I_sqrt_;\n  }) as any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/dt.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 14, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998-2015 The R Core Team\n *  based on AS243 (C) 1989 Royal Statistical Society\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n */\n\n/*  Algorithm AS 243  Lenth,R.V. (1989). Appl. Statist., Vol.38, 185-189.\n *  ----------------\n *  Cumulative probability at t of the non-central t-distribution\n *  with df degrees of freedom (may be fractional) and non-centrality\n *  parameter delta.\n *\n *  NOTE\n *\n *    Requires the following auxiliary routines:\n *\n *\tlgammafn(x)\t- log gamma function\n *\tpbeta(x, a, b)\t- incomplete beta function\n *\tpnorm(x)\t- normal distribution function\n *\n *  CONSTANTS\n *\n *    M_SQRT_2dPI  = 1/ {gamma(1.5) * sqrt(2)} = sqrt(2 / pi)\n *    M_LN_SQRT_PI = ln(sqrt(pi)) = ln(pi)/2\n */\n\n/*----------- DEBUGGING -------------\n *\n *\tmake CFLAGS='-DDEBUG_pnt -g'\n\n * -- Feb.3, 1999; M.Maechler:\n    - For 't > ncp > 20' (or so)\tthe result is completely WRONG!  <== no longer true\n    - but for ncp > 100\n */\n\nimport * as debug from 'debug';\nimport { pbeta } from '../beta/pbeta';\nimport {\n  //DBL_MIN_EXP,\n  M_LN_SQRT_PI,\n  M_SQRT_2dPI,\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR,\n  R_DT_0,\n  R_DT_1,\n  R_DT_val\n} from '../common/_general';\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { pnorm5 as pnorm } from '../normal/pnorm';\nimport { map } from '../r-func';\nimport { pt } from './pt';\n\nconst { isFinite: R_FINITE, EPSILON: DBL_EPSILON } = Number;\nconst { sqrt, exp, pow, log, expm1, abs: fabs, min: fmin2 } = Math;\nconst printer_pnt = debug('pnt');\nconst DBL_MIN_EXP = -1021;\nconst M_LN2 = 0.693147180559945309417;\n\nexport function pnt<T>(\n  tt: T,\n  df: number,\n  ncp: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return map(tt)(t =>\n    _pnt(t, df, ncp, lowerTail, logP /*, normal*/)\n  ) as any;\n}\n\nfunction _pnt(\n  _t: number,\n  df: number,\n  ncp: number,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): number {\n  //double\n  let errbd: number;\n  let rxb: number;\n  let x: number;\n\n  // long double\n  let geven: number;\n  let godd: number;\n  let p: number;\n  let q: number;\n\n  let s: number;\n\n  let tnc: number = 0;\n  let xeven: number;\n  let xodd: number;\n  // int\n\n  /* note - itrmax and errmax may be changed to suit one's needs. */\n\n  const itrmax = 1000;\n  const errmax = 1e-12;\n\n  if (df <= 0.0) {\n    return ML_ERR_return_NAN(printer_pnt);\n  }\n\n  if (ncp === 0.0) {\n    return pt(_t, df, lower_tail, log_p);\n  }\n\n  if (!R_FINITE(_t)) {\n    return _t < 0 ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);\n  }\n\n  const negdel = _t < 0;\n  const tt = fabs(_t);\n  const del = _t >= 0 ? ncp : -ncp;\n\n  /* \n      We deal quickly with left tail if extreme,\n        since pt(q, df, ncp) <= pt(0, df, ncp) = \\Phi(-ncp) \n    */\n  if (_t < 0 && ncp > 40 && (!log_p || !lower_tail)) {\n    printer_pnt('if x <=0 and solution for edge ncp > 40');\n    return R_DT_0(lower_tail, log_p);\n  }\n\n  if (df > 4e5 || del * del > 2 * M_LN2 * -DBL_MIN_EXP) {\n    printer_pnt(\n      'Abramowitz & Stegun 26.7.10 ncp:%d, del:%d, ncp2:%d, del2:%d, D:%d',\n      ncp,\n      del,\n      ncp * ncp,\n      del * del,\n      2 * M_LN2 * -DBL_MIN_EXP\n    );\n\n    // in JS its del >= 38.604  then 0.5*exp(-0.5(del*del)) === 0\n    // use Number.MIN_VALUE = 5e-324 to calculate\n    /*\n       -- 2nd part: if del > 37.62, then p=0 below\n          FIXME: test should depend on `df', `tt' AND `del' ! \n    */\n    /* \n      Approx. from\t Abramowitz & Stegun 26.7.10 (p.949) \n    */\n    const _s = 1 / (4 * df);\n\n    return pnorm(\n      tt * (1 - _s),\n      del,\n      sqrt(1 + tt * tt * 2 * _s),\n      lower_tail !== negdel,\n      log_p\n    );\n  }\n\n  /* initialize twin series */\n  /* Guenther, J. (1978). Statist. Computn. Simuln. vol.6, 199. */\n\n  x = _t * _t; // always positive?\n  rxb = df / (x + df); /* := (1 - x) {x below} -- but more accurately */\n  x = x / (x + df); /* in [0,1) */\n\n  printer_pnt(\n    'pnt(t=%d, df=%d, ncp=%d, rxb=%d) ==> x= %d',\n    _t,\n    df,\n    ncp,\n    rxb,\n    x\n  );\n\n  // x will be always >= 0\n  // because df >0\n  // edge case is x==0, then we skip this\n  if (x > 0) {\n    printer_pnt('x > 0 branch');\n    /* <==>  t != 0 */\n    const lambda = del * del;\n    p = 0.5 * exp(-0.5 * lambda);\n\n    printer_pnt('p=%d', p);\n\n    if (p === 0) {\n      /* underflow! */\n      printer_pnt('p=%d, underflow protection', p);\n      /*========== really use an other algorithm for this case !!! */\n      ML_ERROR(ME.ME_UNDERFLOW, 'pnt', printer_pnt);\n      ML_ERROR(ME.ME_RANGE, 'pnt', printer_pnt); /* |ncp| too large */\n      return R_DT_0(lower_tail, log_p);\n    }\n\n    printer_pnt(\n      'it  1e5*(godd,   geven)|          p           q           s' +\n        /* 1.3 1..4..7.9 1..4..7.9|1..4..7.901 1..4..7.901 1..4..7.901 */\n        '        pnt(*)     errbd'\n    );\n    /* 1..4..7..0..34 1..4..7.9*/\n\n    q = M_SQRT_2dPI * p * del;\n    s = 0.5 - p;\n    /* s = 0.5 - p = 0.5*(1 - exp(-.5 L)) =  -0.5*expm1(-.5 L)) */\n    if (s < 1e-7) s = -0.5 * expm1(-0.5 * lambda);\n    let a = 0.5;\n    let b = 0.5 * df;\n    /* rxb = (1 - x) ^ b   [ ~= 1 - b*x for tiny x --> see 'xeven' below]\n         *       where '(1 - x)' =: rxb {accurately!} above */\n    rxb = pow(rxb, b);\n    const albeta = M_LN_SQRT_PI + lgammafn(b) - lgammafn(0.5 + b);\n    xodd = pbeta(x, a, b, /*lower*/ true, /*log_p*/ false);\n    printer_pnt('return from pbeta:%d', xodd);\n    godd = 2 * rxb * exp(a * log(x) - albeta);\n    tnc = b * x;\n    xeven = tnc < DBL_EPSILON ? tnc : 1 - rxb;\n    geven = tnc * rxb;\n    tnc = p * xodd + q * xeven;\n\n    let gotoFinis = false;\n\n    /* repeat until convergence or iteration limit */\n    for (let it = 1; it <= itrmax; it++) {\n      a += 1;\n      xodd -= godd;\n      xeven -= geven;\n      godd *= x * (a + b - 1) / a;\n      geven *= x * (a + b - 0.5) / (a + 0.5);\n      p *= lambda / (2 * it);\n      q *= lambda / (2 * it + 1);\n      tnc += p * xodd + q * xeven;\n      s -= p;\n      /* R 2.4.0 added test for rounding error here. */\n\n      if (s < -1e-10) {\n        /* happens e.g. for (t,df,ncp)=(40,10,38.5), after 799 it.*/\n        ML_ERROR(ME.ME_PRECISION, 'pnt', printer_pnt);\n        printer_pnt('goto:true, s = %d < 0 !!! ---> non-convergence!!', s);\n        gotoFinis = true;\n        break;\n      }\n      if (s <= 0) {\n        printer_pnt('goto:true, s:%d < 0 && it:%d>1', s, it);\n        gotoFinis = true;\n        break;\n      }\n      errbd = 2 * s * (xodd - godd);\n\n      printer_pnt(\n        '%d %d %d|%d %d %d %d %d',\n        it,\n        1e5 * godd,\n        1e5 * geven,\n        p,\n        q,\n        s,\n        tnc,\n        errbd\n      );\n\n      if (fabs(errbd) < errmax) {\n        printer_pnt('goto:true, errbd:%d < errmax:%d', errbd, errmax);\n        gotoFinis = true; /*convergence*/\n        break;\n      }\n      gotoFinis = false;\n    } //for (it = 1; it <= itrmax; it++)\n    /* non-convergence:*/\n    if (!gotoFinis) {\n      ML_ERROR(ME.ME_NOCONV, 'pnt', printer_pnt);\n    }\n  }\n  //finis: goto label\n  tnc += pnorm(-del, 0, 1, /*lower*/ true, /*log_p*/ false);\n\n  lower_tail = lower_tail !== negdel; /* xor */\n  /*\n    negdel = (t < 0)\n    lt nd  | nlt\n    T  T   |  F\n    T  F   |  T\n    F  T   |  T\n    T  T      F\n\n  */\n  if (tnc > 1 - 1e-10 && lower_tail) {\n    ML_ERROR(ME.ME_PRECISION, 'pnt{final}', printer_pnt);\n  }\n  const rc = R_DT_val(lower_tail, log_p, fmin2(tnc, 1) /* Precaution */);\n  printer_pnt(\n    'rc:%d, tnc:%d, log_p:%s, lower_tail:%s',\n    rc,\n    tnc,\n    log_p,\n    lower_tail\n  );\n\n  return rc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/pnt.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 16, 2017\n *\n *  ORIGINAL AUTHOR\n *  R : A Computer Language for Statistical Data Analysis\n *  Copyright (C) 1995, 1996  Robert Gentleman and Ross Ihaka\n *  Copyright (C) 2000-2007   The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n */\n\nimport * as debug from 'debug';\n\nimport { internal_lbeta } from '../beta/lbeta';\nimport { pbeta } from '../beta/pbeta';\nimport {\n  M_LN2,\n  ML_ERR_return_NAN,\n  R_D_Cval,\n  R_DT_0,\n  R_DT_1\n} from '../common/_general';\nimport { pnorm5 as pnorm } from '../normal/pnorm';\nimport { map } from '../r-func';\n\nconst { log1p, sqrt, log, abs: fabs, exp } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\nconst printer = debug('pt');\n\nexport function pt<T>(\n  xx: T,\n  n: number,\n  lowerTail: boolean = true,\n  log_p: boolean = false\n): T {\n  /* return  P[ T <= x ]\twhere\n     * T ~ t_{n}  (t distrib. with n degrees of freedom).\n    \n     *\t--> ./pnt.c for NON-central\n     */\n  return map(xx)(x => {\n    let val;\n    let nx;\n\n    let lower_tail = lowerTail;\n\n    if (ISNAN(x) || ISNAN(n)) return x + n;\n\n    if (n <= 0.0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (!R_FINITE(x)) {\n      return x < 0 ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);\n    }\n\n    if (!R_FINITE(n)) {\n      return pnorm(x, 0.0, 1.0, lower_tail, log_p);\n    }\n\n    if (n > 4e5) {\n      /*-- Fixme(?): test should depend on `n' AND `x' ! */\n      /* Approx. from\t Abramowitz & Stegun 26.7.8 (p.949) */\n      val = 1 / (4 * n);\n      return pnorm(\n        x * (1 - val) / sqrt(1 + x * x * 2 * val),\n        0.0,\n        1.0,\n        lower_tail,\n        log_p\n      );\n    }\n\n    nx = 1 + x / n * x;\n    /* FIXME: This test is probably losing rather than gaining precision,\n     * now that pbeta(*, log_p = TRUE) is much better.\n     * Note however that a version of this test *is* needed for x*x > D_MAX */\n    if (nx > 1e100) {\n      /* <==>  x*x > 1e100 * n  */\n      /* Danger of underflow. So use Abramowitz & Stegun 26.5.4\n           pbeta(z, a, b) ~ z^a(1-z)^b / aB(a,b) ~ z^a / aB(a,b),\n           with z = 1/nx,  a = n/2,  b= 1/2 :\n        */\n      let lval;\n      lval =\n        -0.5 * n * (2 * log(fabs(x)) - log(n)) -\n        internal_lbeta(0.5 * n, 0.5) -\n        log(0.5 * n);\n      val = log_p ? lval : exp(lval);\n    } else {\n      val =\n        n > x * x\n          ? pbeta(x * x / (n + x * x), 0.5, n / 2, /*lower_tail*/ false, log_p)\n          : pbeta(1 / nx, n / 2, 0.5, /*lower_tail*/ true, log_p);\n    }\n\n    /* Use \"1 - v\"  if\tlower_tail  and\t x > 0 (but not both):*/\n    if (x <= 0) {\n      lower_tail = !lower_tail;\n    }\n\n    if (log_p) {\n      if (lower_tail) {\n        return log1p(-0.5 * exp(val));\n      } else {\n        return val - M_LN2; /* = log(.5* pbeta(....)) */\n      }\n    } else {\n      val /= 2;\n      return R_D_Cval(lower_tail, val);\n    }\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/pt.ts","export class WilcoxonCache {\n  \n  //private _map = new Map<number, Map<number, Map<number, number>>>();\n  private _map2 = {};\n  constructor() {\n\n  }\n\n  public get(i: number, j: number, k: number): number | undefined {\n    /*const jMap = this._map.get(i);\n    if (jMap) {\n      const kMap = jMap.get(j);\n      if (kMap) {\n        return kMap.get(k);\n      }\n    }\n    return undefined;*/\n    const jstruct = this._map2[i];\n    if (jstruct !== undefined){\n      const kstruct = jstruct[j];\n      if (kstruct !==  undefined ){\n        return kstruct[k];\n      }\n    }\n    return undefined;\n  }\n\n  public set(i: number, j: number, k: number, value: number ){\n    /*\n    USING old fashioned way of simple objects to mimic key-value mapping\n    DONT USE: new Map(), it will cause performance problems\n    \n    let jMap = this._map.get(i);\n    if (!jMap) {\n      jMap = new Map();  \n      this._map.set(i, jMap);\n    }\n    let kMap = jMap.get(j);\n    if (!kMap) {\n        kMap = new Map();\n        jMap.set(j, kMap);\n    }\n    kMap.set(k, value);*/\n    let jstruct = this._map2[i];\n    if (jstruct === undefined){\n      jstruct = {};\n      this._map2[i] = jstruct;\n    }\n    let kstruct = jstruct[j];\n    if (kstruct === undefined){\n      kstruct = {};\n      jstruct[j] = kstruct;\n    }\n    kstruct[k] = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/WilcoxonCache.ts","/*\n *  AUTHOR\n * \n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORIGINAL AUTHOR\n  Mathlib : A C Library of Special Functions\n  Copyright (C) 1999-2014  The R Core Team\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or (at\n  your option) any later version.\n\n  This program is distributed in the hope that it will be useful, but\n  WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU\n  General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, a copy is available at\n  https://www.R-project.org/Licenses/\n\n  SYNOPSIS\n\n    #include <Rmath.h>\n    double dwilcox(double x, double m, double n, int give_log)\n    double pwilcox(double x, double m, double n, int lower_tail, int log_p)\n    double qwilcox(double x, double m, double n, int lower_tail, int log_p);\n    double rwilcox(double m, double n)\n\n  DESCRIPTION\n\n    dwilcox\tThe density of the Wilcoxon distribution.\n    pwilcox\tThe distribution function of the Wilcoxon distribution.\n    qwilcox\tThe quantile function of the Wilcoxon distribution.\n    rwilcox\tRandom variates from the Wilcoxon distribution.\n\n */\n\n/* \nThis counts the number of choices with \nstatistic = k \n*/\nconst { trunc } = Math;\n\nimport { WilcoxonCache } from './WilcoxonCache';\n\nexport function cwilcox(\n  k: number,\n  m: number,\n  n: number,\n  w: WilcoxonCache\n): number {\n  let i;\n  let j;\n\n  const u = m * n;\n  const c = trunc(u / 2);\n\n  if (k < 0 || k > u) {\n    return 0;\n  }\n\n  if (k > c) {\n    k = u - k; /* hence  k <= floor(u / 2) */\n  }\n\n  if (m < n) {\n    i = m;\n    j = n;\n  } else {\n    i = n;\n    j = m;\n  } /* hence  i <= j */\n\n  /*if (j === 0) {\n    // and hence i == 0 \n    console.log(`5. cwilcox: exit with k:${k}`);\n    return k === 0 ? 1 : 0;\n  }*/\n\n  /*\n     We can simplify things if k is small.  Consider the Mann-Whitney \n         definition, and sort y.  Then if the statistic is k, no more \n         than k of the y's can be <= any x[i], and since they are sorted \n         these can only be in the first k.  So the count is the same as\n         if there were just k y's. \n  */\n\n  if (j > 0 && k < j) {\n    return cwilcox(k, i, k, w);\n  }\n\n  /*if (w[i][j] === undefined) {\n      w[i][j] = new Array<number>(c + 1).fill(-1); //  (double *) calloc((size_t) c + 1, sizeof(double));\n      //#ifdef MATHLIB_STANDALONE\n      //if (!w[i][j]) MATHLIB_ERROR(_(\"wilcox allocation error %d\"), 3);\n      //#endif\n      //NOTE: replaced by \"fill\" for (l = 0; l <= c; l++) w[i][j][l] = -1;\n    }*/\n\n  if (w.get(i, j, k) === undefined) {\n    if (j === 0) {\n      w.set(i, j, k, k === 0 ? 1 : 0);\n    } else {\n      const c1 = cwilcox(k - j, i - 1, j, w);\n      const c2 =  cwilcox(k, i, j - 1, w);\n      w.set(i, j, k, c1 + c2);\n    }\n  }\n  const result = w.get(i, j, k);\n  if (result === undefined){\n    throw new Error ('WilcoxonCache not set');\n  }\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/cwilcox.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ME, ML_ERROR } from '../../common/_general';\nimport { multiplexer } from '../../r-func';\nimport { cospi } from '../../trigonometry/cospi';\nimport { sinpi } from '../../trigonometry/sinpi';\nimport { numVector } from '../../types';\nimport { internal_bessel_y } from '../besselY';\nimport { J_bessel } from './Jbessel';\n\nconst { isNaN: ISNAN }  = Number;\nconst { floor, trunc } = Math;\n\nconst printer = debug('bessel_j');\n\nexport function bessel_j(_x: numVector, _alpha: numVector): numVector {\n   return multiplexer(_x, _alpha)((x, alpha) => internal_bessel_j(x, alpha));\n}\n\nexport function internal_bessel_j(x: number, alpha: number): number  {\n    //int\n    let nb; \n    //double\n    let na; // , *bj;\n  \n    /* NaNs propagated correctly */\n    if (ISNAN(x) || ISNAN(alpha)) return x + alpha;\n    if (x < 0) {\n      ML_ERROR(ME.ME_RANGE, 'bessel_j', printer);\n        return NaN;\n    }\n    na = floor(alpha);\n    if (alpha < 0) {\n      /* Using Abramowitz & Stegun  9.1.2\n       * this may not be quite optimal (CPU and accuracy wise) */\n      return(((alpha - na === 0.5) ? 0 : internal_bessel_j(x, -alpha) * cospi(alpha)) +\n        ((alpha === na) ? 0 : internal_bessel_y(x, -alpha) * sinpi(alpha)));\n    }\n    else if (alpha > 1e7) {\n      printer(\n        'besselJ(x, nu): nu=%d too large for bessel_j() algorithm',\n        alpha);\n      return NaN;\n    }\n  \n    nb = 1 + trunc(na); /* nb-1 <= alpha < nb */\n    alpha -= (nb - 1); // ==> alpha' in [0, 1)\n    const rc = J_bessel(x, alpha, nb);\n  \n    if (rc.ncalc !== nb) {/* error input */\n      if (rc.ncalc < 0)\n        printer('bessel_j(%d): ncalc (=%d) != nb (=%d); alpha=%d. Arg. out of range?',\n          x, rc.ncalc, rc.nb, alpha);\n      else\n        printer('bessel_j(%d,nu=%d): precision lost in result',\n          x, alpha + nb - 1);\n    }\n    x = rc.x; // bj[nb - 1];\n    return x;\n  }\n  \n  \n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselJ/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ME, ML_ERROR } from '../../common/_general';\nimport { multiplexer } from '../../r-func';\nimport { boolVector, numVector } from '../../types';\nimport { K_bessel } from './Kbessel';\n\nconst { isNaN: ISNAN } = Number;\nconst { floor } = Math;\nconst printer = debug('bessel_k');\n\nexport function bessel_k(_x: numVector, _alpha: numVector, _expo: boolVector): numVector {\n  return multiplexer(_x, _alpha, _expo)((x, alpha, expo) => internal_bessel_k(x, alpha, expo));\n}\n\nexport function internal_bessel_k(x: number, alpha: number, expo: boolean = false): number {\n  let nb;\n  let ize;\n\n\n  /* NaNs propagated correctly */\n  if (ISNAN(x) || ISNAN(alpha)) return x + alpha;\n\n  if (x < 0) {\n    ML_ERROR(ME.ME_RANGE, 'bessel_k', printer);\n    return NaN;\n  }\n  ize = expo ? 2 : 1;\n  if (alpha < 0)\n    alpha = -alpha;\n  nb = 1 + floor(alpha); /* nb-1 <= |alpha| < nb */\n  alpha -= (nb - 1);\n\n\n\n\n  const rc = K_bessel(x, alpha, nb, ize);\n  if (rc.ncalc !== rc.nb) {/* error input */\n    if (rc.ncalc < 0)\n      printer('bessel_k(%d): ncalc (=%d) != nb (=%d); alpha=%d. Arg. out of range?\\n',\n        rc.x, rc.ncalc, rc.nb, alpha);\n    else\n      printer('bessel_k(%d,nu=%d): precision lost in result\\n',\n        rc.x, alpha + rc.nb - 1);\n  }\n  x = rc.x; // bk[nb - 1];\n  return x;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselK/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ME, ML_ERROR } from '../../common/_general';\nimport { multiplexer } from '../../r-func';\nimport { cospi } from '../../trigonometry/cospi';\nimport { sinpi } from '../../trigonometry/sinpi';\nimport { numVector } from '../../types';\nimport { internal_bessel_j } from '../besselJ';\nimport { Y_bessel } from './Ybessel';\n\nconst { floor } = Math;\nconst { isNaN:ISNAN, POSITIVE_INFINITY: ML_POSINF } = Number;\n\nconst printer = debug('bessel_y');\n\n\nexport function bessel_y(_x: numVector, _alpha: numVector): numVector {\n  return multiplexer(_x, _alpha)((x, alpha) => internal_bessel_y(x, alpha));\n}\n\nexport function internal_bessel_y(x: number, alpha: number): number {\n  //double\n  \n  /* NaNs propagated correctly */\n  if (ISNAN(x) || ISNAN(alpha)) return x + alpha;\n\n  if (x < 0) {\n    ML_ERROR(ME.ME_RANGE, 'bessel_y', printer);\n    return NaN;\n  }\n  const na = floor(alpha);\n  if (alpha < 0) {\n    /* Using Abramowitz & Stegun  9.1.2\n     * this may not be quite optimal (CPU and accuracy wise) */\n    return (((alpha - na === 0.5) ? 0 : internal_bessel_y(x, -alpha) * cospi(alpha)) -\n      ((alpha === na) ? 0 : internal_bessel_j(x, -alpha) * sinpi(alpha)));\n  }\n  else if (alpha > 1e7) {\n    printer('besselY(x, nu): nu=%d too large for bessel_y() algorithm',\n      alpha);\n    return NaN;\n  }\n  const nb = 1 + na; /* nb-1 <= alpha < nb */\n  alpha -= (nb - 1);\n\n\n  const rc = Y_bessel(x, alpha, nb);\n  if (rc.ncalc !== nb) {/* error input */\n    if (rc.ncalc === -1) {\n      return ML_POSINF;\n    }\n    else if (rc.ncalc < -1)\n      printer('bessel_y(%d): ncalc (=%d) != nb (=%d); alpha=%d. Arg. out of range?\\n',\n        rc.x, rc.ncalc, nb, alpha);\n    else /* ncalc >= 0 */\n      printer('bessel_y(%d,nu=%d): precision lost in result\\n',\n        rc.x, alpha + nb - 1);\n  }\n  x = rc.x;\n  return x;\n}\n  \n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselY/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport {\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D_exp,\n  R_D_val\n} from '../common/_general';\n\nimport { boolVector, numVector } from '../types';\n\nimport { dbinom_raw } from '../binomial/dbinom';\nimport { multiplexer } from '../r-func';\nimport { internal_lbeta } from './lbeta';\n\nconst { log , log1p } = Math;\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer = debug('dbeta');\n\nexport function dbeta(_x: numVector, _a: numVector, _b: numVector, _asLog: boolVector): numVector {\n  \n  return multiplexer(_x, _a, _b, _asLog)((x, a, b, asLog) => {\n    \n    if (ISNAN(x) || ISNAN(a) || ISNAN(b)) return x + a + b;\n\n    if (a < 0 || b < 0) return ML_ERR_return_NAN(printer);\n    if (x < 0 || x > 1) return R_D__0(asLog);\n\n    // limit cases for (a,b), leading to point masses\n\n    if (a === 0 || b === 0 || !R_FINITE(a) || !R_FINITE(b)) {\n      if (a === 0 && b === 0) {\n        // point mass 1/2 at each of {0,1} :\n        if (x === 0 || x === 1) return ML_POSINF;\n        else return R_D__0(asLog);\n      }\n      if (a === 0 || a / b === 0) {\n        // point mass 1 at 0\n        if (x === 0) return ML_POSINF;\n        else return R_D__0(asLog);\n      }\n      if (b === 0 || b / a === 0) {\n        // point mass 1 at 1\n        if (x === 1) return ML_POSINF;\n        else return R_D__0(asLog);\n      }\n      // else, remaining case:  a = b = Inf : point mass 1 at 1/2\n      if (x === 0.5) return ML_POSINF;\n      else return R_D__0(asLog);\n    }\n\n    if (x === 0) {\n      if (a > 1) return R_D__0(asLog);\n      if (a < 1) return ML_POSINF;\n      /* a == 1 : */ return R_D_val(asLog, b);\n    }\n    if (x === 1) {\n      if (b > 1) return R_D__0(asLog);\n      if (b < 1) return ML_POSINF;\n      /* b == 1 : */ return R_D_val(asLog, a);\n    }\n\n    let lval: number;\n    if (a <= 2 || b <= 2)\n      lval = (a - 1) * log(x) + (b - 1) * log1p(-x) - internal_lbeta(a, b);\n    else {\n      lval = log(a + b - 1) + dbinom_raw(a - 1, a + b - 2, x, 1 - x, true);\n    }\n    return R_D_exp(asLog, lval);\n  });\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/dbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport {\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D_exp\n} from '../common/_general';\nimport { dpois_raw } from '../poisson/dpois';\nimport { multiplexer } from '../r-func';\nimport { boolVector, numVector } from '../types';\nimport { dbeta } from './dbeta';\n\n\nconst { log:ln, sqrt, ceil } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst printer = debug('dnbeta');\n\n//also used by f-distriution\nexport function dnbeta(\n  _x: numVector,\n  _shape1: numVector,\n  _shape2: numVector,\n  _ncp: numVector,\n  _asLog: boolVector): numVector {\n\n  return multiplexer(_x, _shape1, _shape2, _ncp, _asLog)(\n    function(x: number, shape1, shape2, ncp, asLog){\n      return _dnbeta(x, shape1, shape2, ncp, asLog);\n    }) ;\n}\n\nfunction _dnbeta(\n  x: number,\n  a: number,\n  b: number,\n  ncp: number,\n  give_log: boolean\n): number {\n  const eps = 1e-15;\n  //int\n  let kMax;\n  //double\n  let k;\n  let ncp2;\n  let dx2;\n  let d;\n  let D;\n  let term;\n  //long double\n  let sum;\n  let p_k;\n  let q;\n\n  if (ISNAN(x) || ISNAN(a) || ISNAN(b) || ISNAN(ncp)) return x + a + b + ncp;\n  if (ncp < 0 || a <= 0 || b <= 0) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  if (!R_FINITE(a) || !R_FINITE(b) || !R_FINITE(ncp)) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  if (x < 0 || x > 1) {\n    return R_D__0(give_log);\n  }\n  if (ncp === 0) {\n    return dbeta(x, a, b, give_log) as number;\n  }\n  /* New algorithm, starting with *largest* term : */\n  ncp2 = 0.5 * ncp;\n  dx2 = ncp2 * x;\n  d = (dx2 - a - 1) / 2;\n  D = d * d + dx2 * (a + b) - a;\n  if (D <= 0) {\n    kMax = 0;\n  } else {\n    D = ceil(d + sqrt(D));\n    kMax = D > 0 ? D : 0;\n  }\n\n  /* The starting \"middle term\" --- first look at it's log scale: */\n  term = dbeta(x, a + kMax, b, /* log = */ true);\n  p_k = dpois_raw(kMax, ncp2, true);\n  if (x === 0 || !R_FINITE(term) || !R_FINITE(p_k)) {\n    /* if term = +Inf */\n    return R_D_exp(give_log, p_k + term);\n  }\n\n  /* Now if s_k := p_k * t_k  {here = exp(p_k + term)} would underflow,\n     * we should rather scale everything and re-scale at the end:*/\n\n  p_k += term; /* = log(p_k) + log(t_k) == log(s_k) -- used at end to rescale */\n  /* mid = 1 = the rescaled value, instead of  mid = exp(p_k); */\n\n  /* Now sum from the inside out */\n  sum = term = 1 /* = mid term */;\n  /* middle to the left */\n  k = kMax;\n  while (k > 0 && term > sum * eps) {\n    k--;\n    q = /* 1 / r_k = */ (k + 1) * (k + a) / (k + a + b) / dx2;\n    term *= q;\n    sum += term;\n  }\n  /* middle to the right */\n  term = 1;\n  k = kMax;\n  do {\n    q = /* r_{old k} = */ dx2 * (k + a + b) / (k + a) / (k + 1);\n    k++;\n    term *= q;\n    sum += term;\n  } while (term > sum * eps);\n\n  return R_D_exp(give_log, p_k + ln(sum));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/dnbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport {\n  DBL_MANT_DIG,\n  DBL_MIN_EXP,\n  M_LN2,\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR,\n  R_D_half,\n  R_DT_0,\n  R_DT_1,\n  R_pow_di\n} from '../common/_general';\n\nimport {\n  R_DT_CIv,\n  R_DT_Clog,\n  R_DT_log,\n  R_DT_qIv,\n  R_Log1_Exp\n} from '../exp/expm1';\n\nimport { lbeta } from '../beta/lbeta';\nimport { pbeta_raw } from '../beta/pbeta';\n\nconst {\n  expm1,\n  log1p,\n  sqrt,\n  min: fmin2,\n  exp,\n  abs: fabs,\n  log,\n  pow,\n  max: fmax2\n} = Math;\n\nconst {\n  isNaN: ISNAN,\n  MIN_VALUE: DBL_MIN,\n  EPSILON: DBL_EPSILON,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF,\n  isFinite: R_FINITE,\n  NaN: ML_NAN\n} = Number;\n\n\n\n\n\n\nconst USE_LOG_X_CUTOFF = -5;\n//                       --- based on some testing; had = -10\n\nconst n_NEWTON_FREE = 4;\n//                   --- based on some testing; had = 10\n\nconst MLOGICAL_NA = -1;\n// an \"NA_LOGICAL\" substitute for Mathlib {only used here, for now}\n\n//attribute_hidden\n/*export function qbeta_raw(alpha: number, double p, double q, int lower_tail, int log_p,\n        int swap_01, double log_q_cut, int n_N, double * qb): number { return 0 };\n*/\n\nconst printer_qbeta = debug('qbeta');\nexport function qbeta<T>(\n  pp: T,\n  shape1: number,\n  shape2: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n  /* test for admissibility of parameters */\n\n  const fa: number[] = Array.isArray(pp) ? pp : ([pp] as any);\n\n  const result = fa.map(p => {\n    if (ISNAN(shape1) || ISNAN(shape2) || ISNAN(p)) return shape1 + shape2 + p;\n\n    if (shape1 < 0 || shape2 < 0) {\n      return ML_ERR_return_NAN(printer_qbeta);\n    }\n    // allowing p==0 and q==0  <==> treat as one- or two-point mass\n\n    let qbet = [0, 0]; // = { qbeta(), 1 - qbeta() }\n\n    qbeta_raw(\n      p,\n      shape1,\n      shape2,\n      lower_tail,\n      log_p,\n      MLOGICAL_NA,\n      USE_LOG_X_CUTOFF,\n      n_NEWTON_FREE,\n      qbet\n    );\n    return qbet[0];\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n// CARE: assumes subnormal numbers, i.e., no underflow at DBL_MIN:\nconst DBL_very_MIN = DBL_MIN / 4;\nconst DBL_log_v_MIN = M_LN2 * (DBL_MIN_EXP - 2);\n// Too extreme: inaccuracy in pbeta(); e.g for  qbeta(0.95, 1e-9, 20):\n// -> in pbeta() --> bgrat(..... b*z === 0 underflow, hence inaccurate pbeta()\n/* DBL_very_MIN  = 0x0.0000001p-1022, // = 2^-1050 = 2^(-1022 - 28) */\n/* DBL_log_v_MIN = -1050. * M_LN2, // = log(DBL_very_MIN) */\n// the most extreme -- not ok, as pbeta() then behaves strangely,\n// e.g., for  qbeta(0.95, 1e-8, 20):\n/* DBL_very_MIN  = 0x0.0000000000001p-1022, // = 2^-1074 = 2^(-1022 -52) */\n/* DBL_log_v_MIN = -1074. * M_LN2, // = log(DBL_very_MIN) */\n\nconst DBL_1__eps = 1 - DBL_EPSILON; // or rather (1 - DBL_EPSILON/2) (??)\n\n/* set the exponent of acu to -2r-2 for r digits of accuracy */\n/*---- NEW ---- -- still fails for p = 1e11, q=.5*/\n\nconst fpu = 3e-308;\n/* acu_min:  Minimal value for accuracy 'acu' which will depend on (a,p);\n         acu_min >= fpu ! */\nconst acu_min = 1e-300;\nconst p_lo = fpu;\nconst p_hi = 1 - 2.22e-16;\n\nconst const1 = 2.30753;\nconst const2 = 0.27061;\nconst const3 = 0.99229;\nconst const4 = 0.04481;\n\nfunction return_q_0(give_log_q: boolean, qb: number[]): void {\n  if (give_log_q) {\n    qb[0] = ML_NEGINF;\n    qb[1] = 0;\n  } else {\n    qb[0] = 0;\n    qb[1] = 1;\n  }\n  return;\n}\n\nfunction return_q_1(give_log_q: boolean, qb: number[]): void {\n  if (give_log_q) {\n    qb[0] = 0;\n    qb[1] = ML_NEGINF;\n  } else {\n    qb[0] = 1;\n    qb[1] = 0;\n  }\n  return;\n}\n\nfunction return_q_half(give_log_q: boolean, qb: number[]): void {\n  if (give_log_q) {\n    qb[0] = qb[1] = -M_LN2;\n  } else {\n    qb[0] = qb[1] = 0.5;\n  }\n  return;\n}\n\n\nconst printer_qbeta_raw = debug('qbeta_raw');\nconst R_ifDEBUG_printf = printer_qbeta_raw;\n// Returns both qbeta() and its \"mirror\" 1-qbeta(). Useful notably when qbeta() ~= 1\nexport function qbeta_raw(\n  alpha: number,\n  p: number,\n  q: number,\n  lower_tail: boolean,\n  log_p: boolean,\n  swap_01: number, // {TRUE, NA, FALSE}: if NA, algorithm decides swap_tail\n  log_q_cut: number /* if === Inf: return log(qbeta(..));\n                   otherwise, if finite: the bound for\n                   switching to log(x)-scale; see use_log_x */,\n  n_N: number, // number of \"unconstrained\" Newton steps before switching to constrained\n  qb: number[] // = qb[0:1] = { qbeta(), 1 - qbeta() }\n): void {\n  let swap_choose = swap_01 === MLOGICAL_NA;\n  let swap_tail;\n  let log_;\n  let give_log_q = log_q_cut === ML_POSINF;\n  let use_log_x = give_log_q; // or u < log_q_cut  below\n  let warned = false;\n  let add_N_step = true;\n  let i_pb;\n  let i_inn;\n  let a;\n  let la;\n  let logbeta;\n  let g;\n  let h;\n  let pp;\n  let p_;\n  let qq;\n  let r;\n  let s;\n  let t;\n  let w;\n  let y = -1;\n  let u: number = 0;\n  let xinbta: number = 0;\n  let u_n: number = 0;\n\n  // Assuming p >= 0, q >= 0  here ...\n\n  // Deal with boundary cases here:\n  if (alpha === R_DT_0(lower_tail, log_p)) {\n    return return_q_0(give_log_q, qb);\n  }\n  if (alpha === R_DT_1(lower_tail, log_p)) {\n    return return_q_1(give_log_q, qb);\n  }\n\n  // check alpha {*before* transformation which may all accuracy}:\n  if ((log_p && alpha > 0) || (!log_p && (alpha < 0 || alpha > 1))) {\n    // alpha is outside\n    printer_qbeta_raw(\n      'qbeta(alpha=%d, %d, %d, .., log_p=%d): %s%s',\n      alpha,\n      p,\n      q,\n      log_p,\n      'alpha not in ',\n      log_p ? '[-Inf, 0]' : '[0,1]'\n    );\n    // ML_ERR_return_NAN :\n    ML_ERROR(ME.ME_DOMAIN, '', printer_qbeta_raw);\n    qb[0] = qb[1] = ML_NAN;\n    return;\n  }\n\n  //  p==0, q==0, p = Inf, q = Inf  <==> treat as one- or two-point mass\n  if (p === 0 || q === 0 || !R_FINITE(p) || !R_FINITE(q)) {\n    // We know 0 < T(alpha) < 1 : pbeta() is constant and trivial in {0, 1/2, 1}\n    printer_qbeta_raw(\n      'qbeta(%d, %d, %d, lower_t=%d, log_p=%d): (p,q)-boundary: trivial',\n      alpha,\n      p,\n      q,\n      lower_tail,\n      log_p\n    );\n    if (p === 0 && q === 0) {\n      // point mass 1/2 at each of {0,1} :\n      if (alpha < R_D_half(log_p)) {\n        return_q_0(give_log_q, qb);\n      }\n      if (alpha > R_D_half(log_p)) {\n        return_q_1(give_log_q, qb);\n      }\n      // else:  alpha === \"1/2\"\n      return_q_half(give_log_q, qb);\n    } else if (p === 0 || p / q === 0) {\n      // point mass 1 at 0 - \"flipped around\"\n      return_q_0;\n    } else if (q === 0 || q / p === 0) {\n      // point mass 1 at 0 - \"flipped around\"\n      return_q_1;\n    }\n    // else:  p = q = Inf : point mass 1 at 1/2\n    return_q_half;\n  }\n\n  /* initialize */\n  p_ = R_DT_qIv(lower_tail, log_p, alpha); /* lower_tail prob (in any case) */\n  // Conceptually,  0 < p_ < 1  (but can be 0 or 1 because of cancellation!)\n  logbeta = lbeta(p, q);\n\n  swap_tail = swap_choose ? p_ > 0.5 : swap_01;\n  // change tail; default (swap_01 = NA): afterwards 0 < a <= 1/2\n  if (swap_tail) {\n    /* change tail, swap  p <-> q :*/\n    a = R_DT_CIv(lower_tail, log_p, alpha); // = 1 - p_ < 1/2\n    /* la := log(a), but without numerical cancellation: */\n    la = R_DT_Clog(lower_tail, log_p, alpha);\n    pp = q;\n    qq = p;\n  } else {\n    a = p_;\n    la = R_DT_log(lower_tail, log_p, alpha);\n    pp = p;\n    qq = q;\n  }\n\n  /* calculate the initial approximation */\n\n  /* Desired accuracy for Newton iterations (below) should depend on  (a,p)\n     * This is from Remark .. on AS 109, adapted.\n     * However, it's not clear if this is \"optimal\" for IEEE double prec.\n\n     * acu = fmax2(acu_min, pow(10., -25. - 5./(pp * pp) - 1./(a * a)));\n\n     * NEW: 'acu' accuracy NOT for squared adjustment, but simple;\n     * ---- i.e.,  \"new acu\" = sqrt(old acu)\n    */\n  let acu = fmax2(acu_min, pow(10, -13 - 2.5 / (pp * pp) - 0.5 / (a * a)));\n  // try to catch  \"extreme left tail\" early\n  let tx = 0;\n  let u0 = (la + log(pp) + logbeta) / pp; // = log(x_0)\n  let log_eps_c = M_LN2 * (1 - DBL_MANT_DIG); // = log(DBL_EPSILON) = -36.04..\n  r = pp * (1 - qq) / (pp + 1);\n\n  t = 0.2;\n  // FIXME: Factor 0.2 is a bit arbitrary;  '1' is clearly much too much.\n\n  printer_qbeta_raw(\n    'qbeta(%d, %d, %d, lower_t=%d, log_p=%d):%s   swap_tail=%d, la=%d, u0=%d (bnd: %d (%d)) ',\n    alpha,\n    p,\n    q,\n    lower_tail,\n    log_p,\n    log_p && (p_ === 0 || p_ === 1) ? (p_ === 0 ? ' p_=0' : ' p_=1') : '',\n    swap_tail,\n    la,\n    u0,\n    (t * log_eps_c - log(fabs(pp * (1 - qq) * (2 - qq) / (2 * (pp + 2))))) / 2,\n    t * log_eps_c - log(fabs(r))\n  );\n\n  let goto_L_Newton = false;\n  let goto_L_return = false;\n  let goto_L_converged = false;\n\n  if (\n    M_LN2 * DBL_MIN_EXP < u0 && // cannot allow exp(u0) = 0 ==> exp(u1) = exp(u0) = 0\n    u0 < -0.01 && // (must: u0 < 0, but too close to 0 <==> x = exp(u0) = 0.99..)\n    // qq <= 2 && // <--- \"arbitrary\"\n    // u0 <  t*log_eps_c - log(fabs(r)) &&\n    u0 <\n      (t * log_eps_c - log(fabs(pp * (1 - qq) * (2 - qq) / (2 * (pp + 2))))) / 2\n  ) {\n    // TODO: maybe jump here from below, when initial u \"fails\" ?\n    // L_tail_u:\n    // MM's one-step correction (cheaper than 1 Newton!)\n    r = r * exp(u0); // = r*x0\n    if (r > -1) {\n      u = u0 - log1p(r) / pp;\n      printer_qbeta_raw('u1-u0=%d --> choosing u = u1', u - u0);\n    } else {\n      u = u0;\n      printer_qbeta_raw('cannot cheaply improve u0');\n    }\n    tx = xinbta = exp(u);\n    use_log_x = true; // or (u < log_q_cut)  ??\n    //goto L_Newton;\n    goto_L_Newton = true;\n  }\n\n  if (!goto_L_Newton) {\n    // y := y_\\alpha in AS 64 := Hastings(1955) approximation of qnorm(1 - a) :\n    r = sqrt(-2 * la);\n    y = r - (const1 + const2 * r) / (1 + (const3 + const4 * r) * r);\n\n    if (pp > 1 && qq > 1) {\n      // use  Carter(1947), see AS 109, remark '5.'\n      r = (y * y - 3) / 6;\n      s = 1 / (pp + pp - 1);\n      t = 1 / (qq + qq - 1);\n      h = 2 / (s + t);\n      w = y * sqrt(h + r) / h - (t - s) * (r + 5.0 / 6.0 - 2.0 / (3 * h));\n      printer_qbeta_raw('p,q > 1 => w=%d', w);\n      if (w > 300) {\n        // exp(w+w) is huge or overflows\n        t = w + w + log(qq) - log(pp); // = argument of log1pexp(.)\n        u = // log(xinbta) = - log1p(qq/pp * exp(w+w)) = -log(1 + exp(t))\n          t <= 18 ? -log1p(exp(t)) : -t - exp(-t);\n        xinbta = exp(u);\n      } else {\n        xinbta = pp / (pp + qq * exp(w + w));\n        u = -log1p(qq / pp * exp(w + w)); // log(xinbta)\n      }\n    } else {\n      // use the original AS 64 proposal, Scheffé-Tukey (1944) and Wilson-Hilferty\n      r = qq + qq;\n      /* A slightly more stable version of  t := \\chi^2_{alpha} of AS 64\n             * t = 1. / (9. * qq); t = r * R_pow_di(1. - t + y * sqrt(t), 3);  */\n      t = 1 / (3 * sqrt(qq));\n      t = r * R_pow_di(1 + t * (-t + y), 3); // = \\chi^2_{alpha} of AS 64\n      s = 4 * pp + r - 2; // 4p + 2q - 2 = numerator of new t = (...) / chi^2\n      R_ifDEBUG_printf('min(p,q) <= 1: t=%g', t);\n      if (t === 0 || (t < 0 && s >= t)) {\n        // cannot use chisq approx\n        // x0 = 1 - { (1-a)*q*B(p,q) } ^{1/q}    {AS 65}\n        // xinbta = 1. - exp((log(1-a)+ log(qq) + logbeta) / qq);\n        let l1ma; /* := log(1-a), directly from alpha (as 'la' above):\n             * FIXME: not worth it? log1p(-a) always the same ?? */\n        if (swap_tail) l1ma = R_DT_log(lower_tail, log_p, alpha);\n        else l1ma = R_DT_Clog(lower_tail, log_p, alpha);\n        R_ifDEBUG_printf(\n          ' t <= 0 : log1p(-a)=%.15g, better l1ma=%.15g\\n',\n          log1p(-a),\n          l1ma\n        );\n        let xx = (l1ma + log(qq) + logbeta) / qq;\n        if (xx <= 0) {\n          xinbta = -expm1(xx);\n          u = R_Log1_Exp(xx); // =  log(xinbta) = log(1 - exp(...A...))\n        } else {\n          // xx > 0 ==> 1 - e^xx < 0 .. is nonsense\n          R_ifDEBUG_printf(' xx=%g > 0: xinbta:= 1-e^xx < 0\\n', xx);\n          xinbta = 0;\n          u = ML_NEGINF; /// FIXME can do better?\n        }\n      } else {\n        t = s / t;\n        R_ifDEBUG_printf(' t > 0 or s < t < 0:  new t = %g ( > 1 ?)\\n', t);\n        if (t <= 1) {\n          // cannot use chisq, either\n          u = (la + log(pp) + logbeta) / pp;\n          xinbta = exp(u);\n        } else {\n          // (1+x0)/(1-x0) = t,  solved for x0 :\n          xinbta = 1 - 2 / (t + 1);\n          u = log1p(-2 / (t + 1));\n        }\n      }\n    }\n\n    // Problem: If initial u is completely wrong, we make a wrong decision here\n    if (\n      swap_choose &&\n      ((swap_tail && u >= -exp(log_q_cut)) || // ==> \"swap back\"\n        (!swap_tail && u >= -exp(4 * log_q_cut) && pp / qq < 1000))\n    ) {\n      // ==> \"swap now\" (much less easily)\n      // \"revert swap\" -- and use_log_x\n      swap_tail = !swap_tail;\n      R_ifDEBUG_printf(' u = %g (e^u = xinbta = %.16g) ==> ', u, xinbta);\n      if (swap_tail) {\n        a = R_DT_CIv(lower_tail, log_p, alpha); // needed ?\n        la = R_DT_Clog(lower_tail, log_p, alpha);\n        pp = q;\n        qq = p;\n      } else {\n        a = p_;\n        la = R_DT_log(lower_tail, log_p, alpha);\n        pp = p;\n        qq = q;\n      }\n      R_ifDEBUG_printf(\n        '\"%s\\'; la = %g\\n',\n        swap_tail ? 'swap now' : 'swap back',\n        la\n      );\n      // we could redo computations above, but this should be stable\n      u = R_Log1_Exp(u);\n      xinbta = exp(u);\n\n      /* Careful: \"swap now\"  should not fail if\n               1) the above initial xinbta is \"completely wrong\"\n               2) The correction step can go outside (u_n > 0 ==>  e^u > 1 is illegal)\n               e.g., for\n                qbeta(0.2066, 0.143891, 0.05)\n            */\n    }\n\n    if (!use_log_x) use_log_x = u < log_q_cut; //(per default) <==> xinbta = e^u < 4.54e-5\n    let bad_u = !R_FINITE(u);\n    let bad_init = bad_u || xinbta > p_hi;\n\n    R_ifDEBUG_printf(\n      ' -> u = %g, e^u = xinbta = %.16g, (Newton acu=%g%s)\\n',\n      u,\n      xinbta,\n      acu,\n      bad_u ? ', ** bad u **' : use_log_x ? ', on u = log(x) scale' : ''\n    );\n\n    u_n = 1; // -Wall\n    tx = xinbta; // keeping \"original initial x\" (for now)\n\n    if (bad_u || u < log_q_cut) {\n      /* e.g.\n            qbeta(0.21, .001, 0.05)\n            try \"left border\" quickly, i.e.,\n            try at smallest positive number: */\n      w = pbeta_raw(DBL_very_MIN, pp, qq, true, log_p);\n      if (w > (log_p ? la : a)) {\n        R_ifDEBUG_printf(\n          ' quantile is left of smallest positive number; \"convergence\"\\n'\n        );\n        if (log_p || fabs(w - a) < fabs(0 - a)) {\n          // DBL_very_MIN is better than 0\n          tx = DBL_very_MIN;\n          u_n = DBL_log_v_MIN; // = log(DBL_very_MIN)\n        } else {\n          tx = 0;\n          u_n = ML_NEGINF;\n        }\n        use_log_x = log_p;\n        add_N_step = false;\n        goto_L_return = true;\n        //goto L_return;\n      } else {\n        R_ifDEBUG_printf(\n          ' pbeta(smallest pos.) = %g <= %g  --> continuing\\n',\n          w,\n          log_p ? la : a\n        );\n        if (u < DBL_log_v_MIN) {\n          u = DBL_log_v_MIN; // = log(DBL_very_MIN)\n          xinbta = DBL_very_MIN;\n        }\n      }\n    }\n\n    /* Sometimes the approximation is negative (and === 0 is also not \"ok\") */\n    if (bad_init && !(use_log_x && tx > 0)) {\n      if (u === ML_NEGINF) {\n        R_ifDEBUG_printf('  u = -Inf;');\n        u = M_LN2 * DBL_MIN_EXP;\n        xinbta = DBL_MIN;\n      } else {\n        R_ifDEBUG_printf(' bad_init: u=%g, xinbta=%g;', u, xinbta);\n        xinbta =\n          xinbta > 1.1 // i.e. \"way off\"\n            ? 0.5 // otherwise, keep the respective boundary:\n            : xinbta < p_lo ? exp(u) : p_hi;\n        if (bad_u) u = log(xinbta);\n        // otherwise: not changing \"potentially better\" u than the above\n      }\n      R_ifDEBUG_printf(' -> (partly)new u=%g, xinbta=%g\\n', u, xinbta);\n    }\n  }\n  //L_Newton:\n  /* --------------------------------------------------------------------\n\n     * Solve for x by a modified Newton-Raphson method, using pbeta_raw()\n     */\n  if (!goto_L_return) {\n    r = 1 - pp;\n    t = 1 - qq;\n    let wprev = 0;\n    let prev = 1;\n    let adj = 1; // -Wall\n\n    if (use_log_x) {\n      // find  log(xinbta) -- work in  u := log(x) scale\n      // if(bad_init && tx > 0) xinbta = tx;// may have been better\n\n      for (i_pb = 0; i_pb < 1000; i_pb++) {\n        // using log_p === TRUE  unconditionally here\n        // FIXME: if exp(u) = xinbta underflows to 0, like different formula pbeta_log(u, *)\n        y = pbeta_raw(xinbta, pp, qq, /*lower_tail = */ true, true);\n\n        /* w := Newton step size for   L(u) = log F(e^u)  =!= 0;   u := log(x)\n                 *   =  (L(.) - la) / L'(.);  L'(u)= (F'(e^u) * e^u ) / F(e^u)\n                 *   =  (L(.) - la)*F(.) / {F'(e^u) * e^u } =\n                 *   =  (L(.) - la) * e^L(.) * e^{-log F'(e^u) - u}\n                 *   =  ( y   - la) * e^{ y - u -log F'(e^u)}\n                and  -log F'(x)= -log f(x) =  + logbeta + (1-p) log(x) + (1-q) log(1-x)\n                           = logbeta + (1-p) u + (1-q) log(1-e^u)\n                 */\n        w =\n          y === ML_NEGINF // y = -Inf  well possible: we are on log scale!\n            ? 0\n            : (y - la) * exp(y - u + logbeta + r * u + t * R_Log1_Exp(u));\n        if (!R_FINITE(w)) break;\n        if (i_pb >= n_N && w * wprev <= 0) prev = fmax2(fabs(adj), fpu);\n        R_ifDEBUG_printf(\n          'N(i=%2d): u=%#20.16g, pb(e^u)=%#12.6g, w=%#15.9g, %s prev=%11g,',\n          i_pb,\n          u,\n          y,\n          w,\n          w * wprev <= 0 ? 'new' : 'old',\n          prev\n        );\n        g = 1;\n        for (i_inn = 0; i_inn < 1000; i_inn++) {\n          adj = g * w;\n          // take full Newton steps at the beginning; only then safe guard:\n          if (i_pb < n_N || fabs(adj) < prev) {\n            u_n = u - adj; // u_{n+1} = u_n - g*w\n            if (u_n <= 0) {\n              // <==> 0 <  xinbta := e^u  <= 1\n              if (prev <= acu || fabs(w) <= acu) {\n                /* R_ifDEBUG_printf(\" -adj=%g, %s <= acu  ==> convergence\\n\", */\n                /*\t -adj, (prev <= acu) ? \"prev\" : \"|w|\"); */\n                R_ifDEBUG_printf(\n                  ' it{in}=%d, -adj=%g, %s <= acu  ==> convergence\\n',\n                  i_inn,\n                  -adj,\n                  prev <= acu ? 'prev' : '|w|'\n                );\n                goto_L_converged = true;\n                break;\n                //goto L_converged;\n              }\n              // if (u_n != ML_NEGINF && u_n != 1)\n              break;\n            }\n          }\n          g /= 3;\n        } //for(i_inn)\n        if (goto_L_converged) {\n          break;\n        }\n        // (cancellation in (u_n -u) => may differ from adj:\n        let D = fmin2(fabs(adj), fabs(u_n - u));\n        /* R_ifDEBUG_printf(\" delta(u)=%g\\n\", u_n - u); */\n        R_ifDEBUG_printf(\n          ' it{in}=%d, delta(u)=%9.3g, D/|.|=%.3g\\n',\n          i_inn,\n          u_n - u,\n          D / fabs(u_n + u)\n        );\n        if (D <= 4e-16 * fabs(u_n + u)) {\n          goto_L_converged = true;\n          break;\n        }\n        u = u_n;\n        xinbta = exp(u);\n        wprev = w;\n      } // for(i )\n    } else {\n      for (i_pb = 0; i_pb < 1000; i_pb++) {\n        y = pbeta_raw(xinbta, pp, qq, /*lower_tail = */ true, log_p);\n        // delta{y} :   d_y = y - (log_p ? la : a);\n\n        if (!R_FINITE(y) && !(log_p && y === ML_NEGINF)) {\n          // y = -Inf  is ok if(log_p)\n          // ML_ERR_return_NAN :\n          ML_ERROR(ME.ME_DOMAIN, '', printer_qbeta_raw);\n          qb[0] = qb[1] = ML_NAN;\n          return;\n        }\n\n        /* w := Newton step size  (F(.) - a) / F'(.)  or,\n                 * --   log: (lF - la) / (F' / F) = exp(lF) * (lF - la) / F'\n                 */\n        w = log_p\n          ? (y - la) * exp(y + logbeta + r * log(xinbta) + t * log1p(-xinbta))\n          : (y - a) * exp(logbeta + r * log(xinbta) + t * log1p(-xinbta));\n        if (i_pb >= n_N && w * wprev <= 0) prev = fmax2(fabs(adj), fpu);\n        R_ifDEBUG_printf(\n          'N(i=%2d): x0=%d, pb(x0)=%d, w=%d, %s prev=%d,',\n          i_pb,\n          xinbta,\n          y,\n          w,\n          w * wprev <= 0 ? 'new' : 'old',\n          prev\n        );\n        g = 1;\n        for (i_inn = 0; i_inn < 1000; i_inn++) {\n          adj = g * w;\n          // take full Newton steps at the beginning; only then safe guard:\n          if (i_pb < n_N || fabs(adj) < prev) {\n            tx = xinbta - adj; // x_{n+1} = x_n - g*w\n            if (0 <= tx && tx <= 1) {\n              if (prev <= acu || fabs(w) <= acu) {\n                R_ifDEBUG_printf(\n                  ' it{in}=%d, delta(x)=%g, %s <= acu  ==> convergence\\n',\n                  i_inn,\n                  -adj,\n                  prev <= acu ? 'prev' : '|w|'\n                );\n                goto_L_converged = true;\n                break;\n              }\n              if (tx !== 0 && tx !== 1) break;\n            }\n          }\n          g /= 3;\n        } //for(i_inn)\n        if (goto_L_converged) {\n          break;\n        }\n        R_ifDEBUG_printf(' it{in}=%d, delta(x)=%g\\n', i_inn, tx - xinbta);\n        if (fabs(tx - xinbta) <= 4e-16 * (tx + xinbta)) {\n          // \"<=\" : (.) === 0\n          goto_L_converged = true;\n          break;\n        }\n        xinbta = tx;\n        if (tx === 0)\n          // \"we have lost\"\n          break;\n        wprev = w;\n      } //for\n    } //if\n\n    /*-- NOT converged: Iteration count --*/\n    if (!goto_L_converged) {\n      warned = true;\n      ML_ERROR(ME.ME_PRECISION, 'qbeta', printer_qbeta_raw);\n    }\n\n    //L_converged:\n    log_ = log_p || use_log_x; // only for printing\n    R_ifDEBUG_printf(\n      ' %s: Final delta(y) = %g%s\\n',\n      warned ? '_NO_ convergence' : 'converged',\n      y - (log_ ? la : a),\n      log_ ? ' (log_)' : ''\n    );\n    if ((log_ && y === ML_NEGINF) || (!log_ && y === 0)) {\n      // stuck at left, try if smallest positive number is \"better\"\n      w = pbeta_raw(DBL_very_MIN, pp, qq, true, log_);\n      if (log_ || fabs(w - a) <= fabs(y - a)) {\n        tx = DBL_very_MIN;\n        u_n = DBL_log_v_MIN; // = log(DBL_very_MIN)\n      }\n      add_N_step = false; // not trying to do better anymore\n    } else if (!warned && (log_ ? fabs(y - la) > 3 : fabs(y - a) > 1e-4)) {\n      if (\n        !(\n          log_ &&\n          y === ML_NEGINF &&\n          // e.g. qbeta(-1e-10, .2, .03, log=TRUE) cannot get accurate ==> do NOT warn\n          pbeta_raw(\n            DBL_1__eps, // = 1 - eps\n            pp,\n            qq,\n            true,\n            true\n          ) >\n            la + 2\n        )\n      )\n        printer_qbeta_raw(\n          // low accuracy for more platform independent output:\n          'qbeta(a, *) =: x0 with |pbeta(x0,* %s) - alpha| = %d is not accurate',\n          log_ ? ', log_' : '',\n          fabs(y - (log_ ? la : a))\n        );\n    }\n  }\n  //L_return:\n  if (give_log_q) {\n    // ==> use_log_x , too\n    if (!use_log_x)\n      // (see if claim above is true)\n      printer_qbeta_raw(\n        'qbeta() L_return, u_n=%d;  give_log_q=TRUE but use_log_x=FALSE -- please report!',\n        u_n\n      );\n    let r = R_Log1_Exp(u_n);\n    if (swap_tail) {\n      qb[0] = r;\n      qb[1] = u_n;\n    } else {\n      qb[0] = u_n;\n      qb[1] = r;\n    }\n  } else {\n    if (use_log_x) {\n      if (add_N_step) {\n        /* add one last Newton step on original x scale, e.g., for\n                   qbeta(2^-98, 0.125, 2^-96) */\n        xinbta = exp(u_n);\n        y = pbeta_raw(xinbta, pp, qq, /*lower_tail = */ true, log_p);\n        w = log_p\n          ? (y - la) * exp(y + logbeta + r * log(xinbta) + t * log1p(-xinbta))\n          : (y - a) * exp(logbeta + r * log(xinbta) + t * log1p(-xinbta));\n        tx = xinbta - w;\n        R_ifDEBUG_printf(\n          'Final Newton correction(non-log scale): xinbta=%.16g, y=%g, w=%g. => new tx=%.16g\\n',\n          xinbta,\n          y,\n          w,\n          tx\n        );\n      } else {\n        if (swap_tail) {\n          qb[0] = -expm1(u_n);\n          qb[1] = exp(u_n);\n        } else {\n          qb[0] = exp(u_n);\n          qb[1] = -expm1(u_n);\n        }\n        return;\n      }\n    }\n    if (swap_tail) {\n      qb[0] = 1 - tx;\n      qb[1] = tx;\n    } else {\n      qb[0] = tx;\n      qb[1] = 1 - tx;\n    }\n  }\n  return;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/qbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nimport { R_DT_qIv } from '../exp/expm1';\nimport { map } from '../r-func';\nimport { pnbeta } from './pnbeta';\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  MIN_VALUE: DBL_MIN,\n  EPSILON: DBL_EPSILON\n} = Number;\n\nconst { min: fmin2 } = Math;\n\nconst printer_qnbeta = debug('qnbeta');\n\nexport function qnbeta<T>(\n  _p: T,\n  a: number,\n  b: number,\n  ncp: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n  const accu = 1e-15;\n  const Eps = 1e-14; /* must be > accu */\n\n  return map(_p)(p => {\n    let ux;\n    let lx;\n    let nx;\n    let pp;\n\n    if (ISNAN(p) || ISNAN(a) || ISNAN(b) || ISNAN(ncp)) return p + a + b + ncp;\n\n    if (!R_FINITE(a)) return ML_ERR_return_NAN(printer_qnbeta);\n\n    if (ncp < 0 || a <= 0 || b <= 0) return ML_ERR_return_NAN(printer_qnbeta);\n\n    let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, 1);\n    if (rc !== undefined) {\n      return rc;\n    }\n    p = R_DT_qIv(lower_tail, log_p, p);\n\n    /* Invert pnbeta(.) :\n     * 1. finding an upper and lower bound */\n    if (p > 1 - DBL_EPSILON) return 1.0;\n    pp = fmin2(1 - DBL_EPSILON, p * (1 + Eps));\n    for (\n      ux = 0.5;\n      ux < 1 - DBL_EPSILON && pnbeta(ux, a, b, ncp, true, false) < pp;\n      ux = 0.5 * (1 + ux)\n    );\n    pp = p * (1 - Eps);\n    for (\n      lx = 0.5;\n      lx > DBL_MIN && pnbeta(lx, a, b, ncp, true, false) > pp;\n      lx *= 0.5\n    );\n\n    /* 2. interval (lx,ux)  halving : */\n    do {\n      nx = 0.5 * (lx + ux);\n      if (pnbeta(nx, a, b, ncp, true, false) > p) ux = nx;\n      else lx = nx;\n    } while ((ux - lx) / nx > accu);\n\n    return 0.5 * (ux + lx);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/qnbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_DT_0, R_DT_1 } from '../common/_general';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { floor, log } = Math;\n\nimport { pbeta } from '../beta/pbeta';\nimport { NumberW, Toms708 } from '../common/toms708';\n\nconst printer = debug('pnbinom');\n\nexport function pnbinom<T>(\n  xx: T,\n  size: number,\n  prob: number,\n  lowerTail: boolean,\n  logP: boolean\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n\n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(size) || ISNAN(prob)) return x + size + prob;\n    if (!R_FINITE(size) || !R_FINITE(prob)) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (size < 0 || prob <= 0 || prob > 1) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    /* limiting case: point mass at zero */\n    if (size === 0)\n      return x >= 0 ? R_DT_1(lowerTail, logP) : R_DT_0(lowerTail, logP);\n\n    if (x < 0) return R_DT_0(lowerTail, logP);\n    if (!R_FINITE(x)) return R_DT_1(lowerTail, logP);\n    x = floor(x + 1e-7);\n    return pbeta(prob, size, x + 1, lowerTail, logP);\n  });\n\n  return result.length === 1 ? result[0] : (result as any);\n}\n\nconst printer_pnbinom_mu = debug('printer_pnbinom_mu');\n\nexport function pnbinom_mu<T>(\n  xx: T,\n  size: number,\n  mu: number,\n  lowerTail: boolean,\n  logP: boolean\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(size) || ISNAN(mu)) return x + size + mu;\n    if (!R_FINITE(size) || !R_FINITE(mu)) return ML_ERR_return_NAN(printer_pnbinom_mu);\n\n    if (size < 0 || mu < 0) return ML_ERR_return_NAN(printer_pnbinom_mu);\n\n    /* limiting case: point mass at zero */\n    if (size === 0)\n      return x >= 0 ? R_DT_1(lowerTail, logP) : R_DT_0(lowerTail, logP);\n\n    if (x < 0) return R_DT_0(lowerTail, logP);\n    if (!R_FINITE(x)) return R_DT_1(lowerTail, logP);\n    x = floor(x + 1e-7);\n    /* return\n     * pbeta(pr, size, x + 1, lowerTail, logP);  pr = size/(size + mu), 1-pr = mu/(size+mu)\n     *\n     *= pbeta_raw(pr, size, x + 1, lowerTail, logP)\n     *            x.  pin   qin\n     *=  bratio (pin,  qin, x., 1-x., &w, &wc, &ierr, logP),  and return w or wc ..\n     *=  bratio (size, x+1, pr, 1-pr, &w, &wc, &ierr, logP) */\n    {\n      let ierr = new NumberW(0);\n      let w = new NumberW(0);\n      let wc = new NumberW(0);\n      Toms708.bratio(\n        size,\n        x + 1,\n        size / (size + mu),\n        mu / (size + mu),\n        w,\n        wc,\n        ierr\n      );\n      if (ierr)\n        printer('pnbinom_mu() -> bratio() gave error code %d', ierr.val);\n      if (logP) {\n        w.val = log(w.val);\n        wc.val = log(wc.val);\n      }\n      return lowerTail ? w.val : wc.val;\n    }\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial-negative/pnbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { pbeta } from '../beta/pbeta';\nimport {\n  ML_ERR_return_NAN,\n  R_DT_0,\n  R_DT_1,\n  R_nonint\n} from '../common/_general';\nimport { map } from '../r-func';\n\nconst printer = debug('pbinom');\nconst { floor, round: R_forceint } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\nexport function pbinom<T>(\n  xx: T,\n  n: number,\n  p: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(n) || ISNAN(p)) return NaN;\n    if (!R_FINITE(n) || !R_FINITE(p)) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    let lower_tail = lowerTail;\n    let log_p = logP;\n\n    if (R_nonint(n)) {\n      printer('non-integer n = %d', n);\n      return ML_ERR_return_NAN(printer);\n    }\n    n = R_forceint(n);\n    /* \n     PR#8560: n=0 is a valid value \n  */\n    if (n < 0 || p < 0 || p > 1) return ML_ERR_return_NAN(printer);\n\n    if (x < 0) return R_DT_0(lower_tail, log_p);\n    x = floor(x + 1e-7);\n    if (n <= x) return R_DT_1(lower_tail, log_p);\n    printer('calling pbeta:(q=%d,a=%d,b=%d, l.t=%s, log=%s', p, x + 1, n - x, !lower_tail, log_p);\n    return pbeta(p, x + 1, n - x, !lower_tail, log_p);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial/pbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nconst { max: fmax2, min: fmin2, floor, sqrt } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE, EPSILON: DBL_EPSILON } = Number;\n\nimport { NumberW } from '../common/toms708';\nimport { R_DT_qIv } from '../exp/expm1';\nimport { qnorm } from '../normal/qnorm';\nimport { map } from '../r-func';\nimport { pbinom } from './pbinom';\n\nconst printer_do_search = debug('do_search');\n\nfunction do_search(\n  y: number,\n  z: NumberW,\n  p: number,\n  n: number,\n  pr: number,\n  incr: number\n): number {\n  if (z.val >= p) {\n    /* search to the left */\n\n    printer_do_search(\n      'new z=%o >= p = %d  --> search to left (y--) ..',\n      z,\n      p\n    );\n\n    while (true) {\n      let newz: number;\n      if (\n        y === 0 ||\n        (newz = pbinom(y - incr, n, pr, /*l._t.*/ true, /*log_p*/ false)) < p\n      )\n        return y;\n      y = fmax2(0, y - incr);\n      z.val = newz;\n    }\n  } else {\n    /* search to the right */\n\n    printer_do_search(\n      'new z=%d < p = %d  --> search to right (y++) ..',\n      z.val,\n      p\n    );\n\n    while (true) {\n      y = fmin2(y + incr, n);\n      if (\n        y === n ||\n        (z.val = pbinom(y, n, pr, /*l._t.*/ true, /*log_p*/ false)) >= p\n      )\n        return y;\n    }\n  }\n}\n\nexport function qbinom<T>(\n  pp: T,\n  n: number,\n  pr: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return map(pp)(p => _qbinom(p, n, pr, lowerTail, logP)) as any;\n}\n\nconst printer_qbinom = debug('_qbinom');\n\nfunction _qbinom(\n  p: number,\n  size: number,\n  pr: number,\n  lower_tail: boolean,\n  log_p: boolean\n): number {\n  let q: number;\n  let mu: number;\n  let sigma: number;\n  let gamma: number;\n  const z = new NumberW(0);\n  let y: number;\n\n  if (ISNAN(p) || ISNAN(size) || ISNAN(pr)) return NaN;\n\n  if (!R_FINITE(size) || !R_FINITE(pr)) {\n    return ML_ERR_return_NAN(printer_qbinom);\n  }\n  /* if log_p is true, p = -Inf is a legitimate value */\n  if (!R_FINITE(p) && !log_p) {\n    return ML_ERR_return_NAN(printer_qbinom);\n  }\n\n  if (!Number.isInteger(size)) {\n    return ML_ERR_return_NAN(printer_qbinom);\n  }\n\n  if (pr < 0 || pr > 1 || size < 0) {\n    return ML_ERR_return_NAN(printer_qbinom);\n  }\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, size);\n  if (rc !== undefined) {\n    return rc;\n  }\n\n  //edge cases\n\n  if (pr === 0 || size === 0) return 0;\n\n  q = 1 - pr;\n  if (q === 0) return size; /* covers the full range of the distribution */\n\n  mu = size * pr; //mean\n  sigma = sqrt(size * pr * q); //standard deviation\n\n  gamma = (q - pr) / sigma; // = (  (1 - pr)-pr )/sd = (1 - 2pr)/sd\n\n  printer_qbinom(\n    'qbinom(p=%d, n=%d, pr=%d, l.t.=%s, log=%s): sigm=%d, gam=%d',\n    p,\n    size,\n    pr,\n    lower_tail,\n    log_p,\n    sigma,\n    gamma\n  );\n\n  /* Note : \"same\" code in qpois.c, qbinom.c, qnbinom.c --\n     * FIXME: This is far from optimal [cancellation for p ~= 1, etc]: */\n  if (!lower_tail || log_p) {\n    p = R_DT_qIv(lower_tail, log_p, p); /* need check again (cancellation!): */\n    if (p === 0) return 0;\n    if (p === 1) return size;\n  }\n  /* temporary hack --- FIXME --- */\n  //if (p + 1.01 * DBL_EPSILON >= 1.) return size;\n  if (Math.abs(p - 1) < DBL_EPSILON) {\n    return size;\n  }\n\n  /* y := approx.value (Cornish-Fisher expansion) :  */\n  z.val = qnorm(p, 0, 1, /*lower_tail*/ true, /*log_p*/ false);\n  y = floor(mu + sigma * (z.val + gamma * (z.val * z.val - 1) / 6) + 0.5);\n\n  if (y > size) {\n    /* way off */ y = size;\n  }\n\n  printer_qbinom(\n    '  new (p,1-p)=(%d,%d), z=qnorm(..)=%d, y=%d, size=%d',\n    p,\n    1 - p,\n    z.val,\n    y,\n    size\n  );\n\n  z.val = pbinom(y, size, pr, /*lower_tail*/ true, /*log_p*/ false);\n\n  /* fuzz to ensure left continuity: */\n  p *= 1 - 64 * DBL_EPSILON;\n\n  if (size < 1e5) {\n    return do_search(y, z, p, size, pr, 1);\n  }\n  /* Otherwise be a bit cleverer in the search */\n\n  let incr = floor(size * 0.001);\n  let oldincr;\n  do {\n    console.log('loopdieloop');\n    oldincr = incr;\n    y = do_search(y, z, p, size, pr, incr);\n    incr = fmax2(1, floor(incr / 100));\n  } while (oldincr > 1 && incr > size * 1e-15);\n  return y;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial/qbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { dgamma } from '../gamma/dgamma';\n\nexport function dchisq<T>(x: T, df: number, log: boolean = false) {\n  return dgamma(x, df / 2, 2, log);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/dchisq.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_D__0, R_D_val } from '../common/_general';\n\nimport { dchisq } from '../chi-2/dchisq';\nimport { dpois_raw } from '../poisson/dpois';\n\nconst { ceil, sqrt } = Math;\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer_dnchisq = debug('dnchisq');\n\nexport function dnchisq<T>(\n  xx: T,\n  df: number,\n  ncp: number,\n  give_log: boolean\n): T {\n  const eps = 5e-15;\n\n  const fa: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n\n  const result = fa.map(x => {\n    let i: number;\n    let ncp2: number;\n    let q: number;\n    let mid: number;\n    let dfmid: number;\n    let imax: number;\n    let sum: number;\n    let term: number;\n\n    if (ISNAN(x) || ISNAN(df) || ISNAN(ncp)) {\n      return x + df + ncp;\n    }\n\n    if (!R_FINITE(df) || !R_FINITE(ncp) || ncp < 0 || df < 0) {\n      return ML_ERR_return_NAN(printer_dnchisq);\n    }\n\n    if (x < 0) {\n      return R_D__0(give_log);\n    }\n    if (x === 0 && df < 2) return ML_POSINF;\n    if (ncp === 0) return df > 0 ? dchisq(x, df, give_log) : R_D__0(give_log);\n    if (x === ML_POSINF) return R_D__0(give_log);\n\n    ncp2 = 0.5 * ncp;\n\n    /* find max element of sum */\n    imax = ceil((-(2 + df) + sqrt((2 - df) * (2 - df) + 4 * ncp * x)) / 4);\n    if (imax < 0) imax = 0;\n    if (R_FINITE(imax)) {\n      dfmid = df + 2 * imax;\n      mid = dpois_raw(imax, ncp2, false) * dchisq(x, dfmid, false);\n    } else {\n      /* imax = Inf */\n      // mid = 0;\n      // }\n\n      // if (mid === 0) {\n      /* underflow to 0 -- maybe numerically correct; maybe can be more accurate,\n\t * particularly when  give_log = TRUE */\n      /* Use  central-chisq approximation formula when appropriate;\n\t * ((FIXME: the optimal cutoff also depends on (x,df);  use always here? )) */\n      if (give_log || ncp > 1000) {\n        let nl = df + ncp;\n        let ic = nl / (nl + ncp); /* = \"1/(1+b)\" Abramowitz & St.*/\n        return dchisq(x * ic, nl * ic, give_log);\n      } else return R_D__0(give_log);\n    }\n\n    sum = mid;\n\n    /* errorbound := term * q / (1-q)  now subsumed in while() / if() below: */\n\n    /* upper tail */\n    term = mid;\n    df = dfmid;\n    i = imax;\n    let x2 = x * ncp2;\n    do {\n      i++;\n      q = x2 / i / df;\n      df += 2;\n      term *= q;\n      sum += term;\n    } while (q >= 1 || term * q > (1 - q) * eps || term > 1e-10 * sum);\n    /* lower tail */\n    term = mid;\n    df = dfmid;\n    i = imax;\n    while (i !== 0) {\n      df -= 2;\n      q = i * df / x2;\n      i--;\n      term *= q;\n      sum += term;\n      if (q < 1 && term * q <= (1 - q) * eps) break;\n    }\n    return R_D_val(give_log, sum);\n  });\n\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/dnchisq.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport {\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR,\n  R_D_qIv,\n  R_Q_P01_boundaries\n} from '../common/_general';\n\nimport { qchisq } from '../chi-2/qchisq';\nimport { map } from '../r-func';\nimport { pnchisq_raw } from './pnchisq';\n\nconst { expm1, min: fmin2 } = Math;\nconst {\n  MAX_VALUE: DBL_MAX,\n  MIN_VALUE: DBL_MIN,\n  EPSILON: DBL_EPSILON,\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer = debug('_qnchisq');\n\nexport function qnchisq<T>(\n  pp: T,\n  df: number,\n  ncp = 0,\n  lowerTail = true,\n  logP = false\n): T {\n  return map(pp)(p => _qnchisq(p, df, ncp, lowerTail, logP)) as any;\n}\n\nfunction _qnchisq(\n  p: number,\n  df: number,\n  ncp: number,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): number {\n\n  printer('start');\n  \n  const accu = 1e-13;\n  const racc = 4 * DBL_EPSILON;\n  /* these two are for the \"search\" loops, can have less accuracy: */\n  const Eps = 1e-11; /* must be > accu */\n  const rEps = 1e-10; /* relative tolerance ... */\n\n  // double\n  let ux: number;\n  let lx: number;\n  let ux0: number;\n  let nx: number;\n  let pp: number;\n\n  if (ISNAN(p) || ISNAN(df) || ISNAN(ncp)) {\n    return NaN;\n  }\n\n  if (!R_FINITE(df)) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  /* Was\n     * df = floor(df + 0.5);\n     * if (df < 1 || ncp < 0) ML_ERR_return_NAN;\n     */\n  if (df < 0 || ncp < 0) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n\n  pp = R_D_qIv(log_p, p);\n  if (pp > 1 - DBL_EPSILON) {\n    return lower_tail ? ML_POSINF : 0.0;\n  }\n\n  /* Invert pnchisq(.) :\n     * 1. finding an upper and lower bound */\n  {\n    /* This is Pearson's (1959) approximation,\n       which is usually good to 4 figs or so.  */\n    //double\n    let b;\n    let c;\n    let ff;\n    \n    b = ncp * ncp / (df + 3 * ncp);\n    c = (df + 3 * ncp) / (df + 2 * ncp);\n    ff = (df + 2 * ncp) / (c * c);\n    ux = b + c * qchisq(p, ff, lower_tail, log_p);\n    if (ux < 0) ux = 1;\n    ux0 = ux;\n  }\n\n  if (!lower_tail && ncp >= 80) {\n    /* in this case, pnchisq() works via lower_tail = TRUE */\n    if (pp < 1e-10) ML_ERROR(ME.ME_PRECISION, 'qnchisq', printer);\n    p = /* R_DT_qIv(p)*/ log_p ? -expm1(p) : 0.5 - p + 0.5;\n    lower_tail = true;\n  } else {\n    p = pp;\n  }\n\n  pp = fmin2(1 - DBL_EPSILON, p * (1 + Eps));\n  if (lower_tail) {\n    for (\n      ;\n      ux < DBL_MAX &&\n      pnchisq_raw(ux, df, ncp, Eps, rEps, 10000, true, false) < pp;\n      ux *= 2\n    );\n    pp = p * (1 - Eps);\n    for (\n      lx = fmin2(ux0, DBL_MAX);\n      lx > DBL_MIN &&\n      pnchisq_raw(lx, df, ncp, Eps, rEps, 10000, true, false) > pp;\n      lx *= 0.5\n    );\n  } else {\n    for (\n      ;\n      ux < DBL_MAX &&\n      pnchisq_raw(ux, df, ncp, Eps, rEps, 10000, false, false) > pp;\n      ux *= 2\n    );\n    pp = p * (1 - Eps);\n    for (\n      lx = fmin2(ux0, DBL_MAX);\n      lx > DBL_MIN &&\n      pnchisq_raw(lx, df, ncp, Eps, rEps, 10000, false, false) < pp;\n      lx *= 0.5\n    );\n  }\n\n  /* 2. interval (lx,ux)  halving : */\n  if (lower_tail) {\n    do {\n      nx = 0.5 * (lx + ux);\n      if (pnchisq_raw(nx, df, ncp, accu, racc, 100000, true, false) > p)\n        ux = nx;\n      else lx = nx;\n    } while ((ux - lx) / nx > accu);\n  } else {\n    do {\n      nx = 0.5 * (lx + ux);\n      if (\n        pnchisq_raw(nx, df, ncp, accu, racc, 100000, false, false) < p\n      )\n        ux = nx;\n      else lx = nx;\n    } while ((ux - lx) / nx > accu);\n  }\n  return 0.5 * (ux + lx);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/qnchisq.ts","\n\nexport class NumberW {\n  private _val: number;\n  constructor(v: number = 0) {\n    this._val = v;\n  }\n  get val() {\n    return this._val;\n  }\n  set val(a: number) {\n    if (Number.isNaN(a)) {\n      throw new Error(`trying to set NaN, old value:${this._val}`);\n    }\n    this._val = a;\n\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/common/toms708/NumberW.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nconst { isFinite: R_FINITE, MIN_VALUE: DBL_MIN, NaN } = Number;\nconst { abs: fabs, log } = Math;\n\n\nexport function bd0(x: number, np: number): number {\n  let ej: number;\n\n  let s: number;\n\n  let s1: number;\n\n  let v: number;\n\n  let j: number;\n\n  if (!R_FINITE(x) || !R_FINITE(np) || np === 0.0) {\n    return NaN;\n  }\n\n  if (fabs(x - np) < 0.1 * (x + np)) {\n    v = (x - np) / (x + np); // might underflow to 0\n\n    s = (x - np) * v; // s using v -- change by MM\n\n    if (fabs(s) < DBL_MIN) return s;\n\n    ej = 2 * x * v;\n\n    v = v * v;\n\n    for (j = 1; j < 1000; j++) {\n      // Taylor series; 1000: no infinite loop\n\n      //\t\t\t\tas |v| < .1,  v^2000 is \"zero\"\n\n      ej *= v; // = v^(2j+1)\n\n      s1 = s + ej / ((j << 1) + 1);\n\n      if (s1 === s)\n        //* last term was effectively 0\n\n        return s1;\n\n      s = s1;\n    }\n  }\n\n  // else:  | x - np |  is not too small\n\n  return x * log(x / np) + np - x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/deviance/bd0.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nexport * from './bd0';\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/deviance/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n\nimport { sinpi } from '../trigonometry';\n\nconst { PI: M_PI, log, exp, trunc } = Math;\n\nconst {\n  EPSILON: DBL_EPSILON,\n  MIN_VALUE: DBL_MIN,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\n\nexport function Rf_gamma_cody(x: number) {\n  /*\n *\n *  NOTES\n   This routine calculates the GAMMA function for a float argument X.\n   Computation is based on an algorithm outlined in reference [1].\n   The program uses rational functions that approximate the GAMMA\n   function to at least 20 significant decimal digits.\tCoefficients\n   for the approximation over the interval (1,2) are unpublished.\n   Those for the approximation for X >= 12 are from reference [2].\n   The accuracy achieved depends on the arithmetic system, the\n   compiler, the intrinsic functions, and proper selection of the\n   machine-dependent constants.\n\n   *******************************************************************\n\n   Error returns\n\n   The program returns the value XINF for singularities or\n   when overflow would occur.\t The computation is believed\n   to be free of underflow and overflow.\n\n   Intrinsic functions required are:\n\n   INT, DBLE, EXP, LOG, REAL, SIN\n\n\n   References:\n   [1]  \"An Overview of Software Development for Special Functions\",\n  W. J. Cody, Lecture Notes in Mathematics, 506,\n  Numerical Analysis Dundee, 1975, G. A. Watson (ed.),\n  Springer Verlag, Berlin, 1976.\n\n   [2]  Computer Approximations, Hart, Et. Al., Wiley and sons, New York, 1968.\n\n   Latest modification: October 12, 1989\n\n   Authors: W. J. Cody and L. Stoltz\n   Applied Mathematics Division\n   Argonne National Laboratory\n   Argonne, IL 60439\n   ----------------------------------------------------------------------*/\n\n  /* ----------------------------------------------------------------------\n   Mathematical constants\n   ----------------------------------------------------------------------*/\n  const sqrtpi = 0.9189385332046727417803297; /* == ??? */\n\n  /* *******************************************************************\n\n   Explanation of machine-dependent constants\n\n   beta\t- radix for the floating-point representation\n   maxexp - the smallest positive power of beta that overflows\n   XBIG\t- the largest argument for which GAMMA(X) is representable\n  in the machine, i.e., the solution to the equation\n  GAMMA(XBIG) = beta**maxexp\n   XINF\t- the largest machine representable floating-point number;\n  approximately beta**maxexp\n   EPS\t- the smallest positive floating-point number such that  1.0+EPS > 1.0\n   XMININ - the smallest positive floating-point number such that\n  1/XMININ is machine representable\n\n   Approximate values for some important machines are:\n\n   beta\t      maxexp\t     XBIG\n\n   CRAY-1\t\t(S.P.)\t      2\t\t8191\t    966.961\n   Cyber 180/855\n   under NOS\t(S.P.)\t      2\t\t1070\t    177.803\n   IEEE (IBM/XT,\n   SUN, etc.)\t(S.P.)\t      2\t\t 128\t    35.040\n   IEEE (IBM/XT,\n   SUN, etc.)\t(D.P.)\t      2\t\t1024\t    171.624\n   IBM 3033\t(D.P.)\t     16\t\t  63\t    57.574\n   VAX D-Format\t(D.P.)\t      2\t\t 127\t    34.844\n   VAX G-Format\t(D.P.)\t      2\t\t1023\t    171.489\n\n   XINF\t EPS\t    XMININ\n\n   CRAY-1\t\t(S.P.)\t 5.45E+2465   7.11E-15\t  1.84E-2466\n   Cyber 180/855\n   under NOS\t(S.P.)\t 1.26E+322    3.55E-15\t  3.14E-294\n   IEEE (IBM/XT,\n   SUN, etc.)\t(S.P.)\t 3.40E+38     1.19E-7\t  1.18E-38\n   IEEE (IBM/XT,\n   SUN, etc.)\t(D.P.)\t 1.79D+308    2.22D-16\t  2.23D-308\n   IBM 3033\t(D.P.)\t 7.23D+75     2.22D-16\t  1.39D-76\n   VAX D-Format\t(D.P.)\t 1.70D+38     1.39D-17\t  5.88D-39\n   VAX G-Format\t(D.P.)\t 8.98D+307    1.11D-16\t  1.12D-308\n\n   *******************************************************************\n\n   ----------------------------------------------------------------------\n   Machine dependent parameters\n   ----------------------------------------------------------------------\n   */\n\n  const xbig = 171.624;\n  /* ML_POSINF ==   const double xinf = 1.79e308;*/\n  /* DBL_EPSILON = const double eps = 2.22e-16;*/\n  /* DBL_MIN ==   const double xminin = 2.23e-308;*/\n\n  /*----------------------------------------------------------------------\n  Numerator and denominator coefficients for rational minimax\n  approximation over (1,2).\n  ----------------------------------------------------------------------*/\n  const p = [\n    -1.71618513886549492533811,\n    24.7656508055759199108314,\n    -379.804256470945635097577,\n    629.331155312818442661052,\n    866.966202790413211295064,\n    -31451.2729688483675254357,\n    -36144.4134186911729807069,\n    66456.1438202405440627855\n  ];\n  const q = [\n    -30.8402300119738975254353,\n    315.350626979604161529144,\n    -1015.15636749021914166146,\n    -3107.77167157231109440444,\n    22538.1184209801510330112,\n    4755.84627752788110767815,\n    -134659.959864969306392456,\n    -115132.259675553483497211\n  ];\n  /*----------------------------------------------------------------------\n  Coefficients for minimax approximation over (12, INF).\n  ----------------------------------------------------------------------*/\n  const c = [\n    -0.001910444077728,\n    8.4171387781295e-4,\n    -5.952379913043012e-4,\n    7.93650793500350248e-4,\n    -0.002777777777777681622553,\n    0.08333333333333333331554247,\n    0.0057083835261\n  ];\n\n  /* Local variables */\n  //int\n  let i: number;\n  let n: number;\n  let parity: number; /*logical*/\n\n  //double\n  let fact: number;\n  let xden: number;\n  let xnum: number;\n  let y: number;\n  let z: number;\n  let yi: number;\n  let res: number;\n  let sum: number;\n  let ysq: number;\n\n  parity = 0;\n  fact = 1;\n  n = 0;\n  y = x;\n  if (y <= 0) {\n    /* -------------------------------------------------------------\n     Argument is negative\n     ------------------------------------------------------------- */\n    y = -x;\n    yi = trunc(y);\n    res = y - yi;\n    if (res !== 0) {\n      if (yi !== trunc(yi * 0.5) * 2) {\n        parity = 1;\n      }\n      fact = -M_PI / sinpi(res);\n      y += 1;\n    } else {\n      return ML_POSINF;\n    }\n  }\n  /* -----------------------------------------------------------------\n   Argument is positive\n   -----------------------------------------------------------------*/\n  if (y < DBL_EPSILON) {\n    /* --------------------------------------------------------------\n     Argument < EPS\n     -------------------------------------------------------------- */\n    if (y >= DBL_MIN) {\n      res = 1 / y;\n    } else {\n      return ML_POSINF;\n    }\n  } else if (y < 12) {\n    yi = y;\n    if (y < 1) {\n      /* ---------------------------------------------------------\n       EPS < argument < 1\n       --------------------------------------------------------- */\n      z = y;\n      y += 1;\n    } else {\n      /* -----------------------------------------------------------\n       1 <= argument < 12, reduce argument if necessary\n       ----------------------------------------------------------- */\n      n = trunc(y) - 1;\n      y -= n;\n      z = y - 1;\n    }\n    /* ---------------------------------------------------------\n     Evaluate approximation for 1. < argument < 2.\n     ---------------------------------------------------------*/\n    xnum = 0;\n    xden = 1;\n    for (i = 0; i < 8; ++i) {\n      xnum = (xnum + p[i]) * z;\n      xden = xden * z + q[i];\n    }\n    res = xnum / xden + 1;\n    if (yi < y) {\n      /* --------------------------------------------------------\n       Adjust result for case  0. < argument < 1.\n       -------------------------------------------------------- */\n      res /= yi;\n    } else if (yi > y) {\n      /* ----------------------------------------------------------\n       Adjust result for case  2. < argument < 12.\n       ---------------------------------------------------------- */\n      for (i = 0; i < n; ++i) {\n        res *= y;\n        y += 1;\n      }\n    }\n  } else {\n    /* -------------------------------------------------------------\n     Evaluate for argument >= 12.,\n     ------------------------------------------------------------- */\n    if (y <= xbig) {\n      ysq = y * y;\n      sum = c[6];\n      for (i = 0; i < 6; ++i) {\n        sum = sum / ysq + c[i];\n      }\n      sum = sum / y - y + sqrtpi;\n      sum += (y - 0.5) * log(y);\n      res = exp(sum);\n    } else {\n      return ML_POSINF;\n    }\n  }\n  /* ----------------------------------------------------------------------\n   Final adjustments and return\n   ----------------------------------------------------------------------*/\n  if (parity) res = -res;\n  if (fact !== 1) res = fact / res;\n  return res;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/gamma_cody.ts","\n/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport {\n  fmod,\n  M_LN_SQRT_2PI, // no math alias for this\n  M_LN_SQRT_PId2,\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR\n} from '../common/_general';\n\nimport { sinpi } from '../trigonometry';\nimport { gammafn } from './gamma_fn';\nimport { lgammacor } from './lgammacor';\n\nconst { isNaN: ISNAN, POSITIVE_INFINITY: ML_POSINF } = Number;\nconst { log, abs: fabs, floor, trunc } = Math;\n\n\nconst printer_sign = debug('lgammafn_sign');\n\nconst xmax = 2.5327372760800758e305;\nconst dxrel = 1.490116119384765625e-8;\n\nexport function lgammafn_sign(x: number, sgn?: number[]): number {\n  let ans: number;\n  let y: number;\n  let sinpiy: number;\n\n  /*\n  #ifdef NOMORE_FOR_THREADS\n    static double xmax = 0.;\n    static double dxrel = 0.;\n \n    if (xmax == 0) {// initialize machine dependent constants _ONCE_ \n        xmax = d1mach(2) / log(d1mach(2));// = 2.533 e305\t for IEEE double \n        dxrel = sqrt(d1mach(4));// sqrt(Eps) ~ 1.49 e-8  for IEEE double \n    }\n    #else*/\n  // For IEEE double precision DBL_EPSILON = 2^-52 = 2.220446049250313e-16 :\n  //   xmax  = DBL_MAX / log(DBL_MAX) = 2^1024 / (1024 * log(2)) = 2^1014 / log(2)\n  //   dxrel = sqrt(DBL_EPSILON) = 2^-26 = 5^26 * 1e-26 (is *exact* below !)\n  //\n\n  if (sgn) sgn[0] = 1;\n\n  //#ifdef IEEE_754\n  if (ISNAN(x)) return x;\n  //#endif\n\n  if (sgn && x < 0 && fmod(floor(-x), 2) === 0) {\n    sgn[0] = -1;\n  }\n\n  if (x <= 0 && x === trunc(x)) {\n    /// Negative integer argument\n    ML_ERROR(ME.ME_RANGE, 'lgamma', printer_sign);\n    return ML_POSINF; // +Inf, since lgamma(x) = log|gamma(x)|\n  }\n\n  y = fabs(x);\n\n  if (y < 1e-306) return -log(y); // denormalized range, R change\n  if (y <= 10) return log(fabs(gammafn(x) as number));\n\n  //  ELSE  y = |x| > 10 ----------------------\n\n  if (y > xmax) {\n    ML_ERROR(ME.ME_RANGE, 'lgamma', printer_sign);\n    return ML_POSINF;\n  }\n\n  if (x > 0) {\n    // i.e. y = x > 10\n    //#ifdef IEEE_754\n    if (x > 1e17) return x * (log(x) - 1);\n    else if (x > 4934720) return M_LN_SQRT_2PI + (x - 0.5) * log(x) - x;\n    else return M_LN_SQRT_2PI + (x - 0.5) * log(x) - x + lgammacor(x);\n  }\n  // else: x < -10; y = -x\n  sinpiy = fabs(sinpi(y));\n\n  if (sinpiy === 0) {\n    // Negative integer argument ===\n    //Now UNNECESSARY: caught above\n    printer_sign(' ** should NEVER happen! *** [lgamma.c: Neg.int, y=%d]', y);\n    return ML_ERR_return_NAN(printer_sign);\n  }\n\n  ans = M_LN_SQRT_PId2 + (x - 0.5) * log(y) - x - log(sinpiy) - lgammacor(y);\n\n  if (fabs((x - Math.trunc(x - 0.5)) * ans / x) < dxrel) {\n    // The answer is less than half precision because\n    // the argument is too near a negative integer.\n\n    ML_ERROR(ME.ME_PRECISION, 'lgamma', printer_sign);\n  }\n\n  return ans;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/lgammafn_sign.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport {\n  M_LN2,\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_Q_P01_boundaries,\n  R_Q_P01_check\n} from '../common/_general';\n\nimport { R_DT_Clog, R_DT_log, R_DT_qIv } from '../exp/expm1';\n\nimport { dgamma } from '../gamma/dgamma';\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { pgamma } from '../gamma/pgamma';\n\nimport { pgamma_raw } from './pgamma';\n\nimport { lgamma1p } from './pgamma';\n\nimport { qnorm } from '../normal/qnorm';\nconst { isArray } = Array;\n\nconst { abs: fabs, sqrt, pow, exp, log } = Math;\nconst {\n  isNaN: ISNAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF,\n  MIN_VALUE: DBL_MIN,\n  isFinite: R_FINITE\n} = Number;\n\nconst printer_qchisq_appr = debug('qchisq_appr');\n\nexport function qchisq_appr(\n  p: number,\n  nu: number,\n  g: number /* = log Gamma(nu/2) */,\n  lower_tail: boolean,\n  log_p: boolean,\n  tol: number /* EPS1 */,\n  //normal: INormal\n): number {\n  const C7 = 4.67;\n  const C8 = 6.66;\n  const C9 = 6.73;\n  const C10 = 13.32;\n\n  let alpha;\n  let a;\n  let c;\n  let ch;\n  let p1;\n  let p2;\n  let q;\n  let t;\n  let x;\n\n  /* test arguments and initialise */\n\n  if (ISNAN(p) || ISNAN(nu)) return p + nu;\n\n  let rc = R_Q_P01_check(log_p, p);\n  if (rc !== undefined) {\n    return rc;\n  }\n  if (nu <= 0) {\n    return ML_ERR_return_NAN(printer_qchisq_appr);\n  }\n\n  alpha = 0.5 * nu; /* = [pq]gamma() shape */\n  c = alpha - 1;\n\n  if (nu < -1.24 * (p1 = R_DT_log(lower_tail, log_p, p))) {\n    /* for small chi-squared */\n    /* log(alpha) + g = log(alpha) + log(gamma(alpha)) =\n         *        = log(alpha*gamma(alpha)) = lgamma(alpha+1) suffers from\n         *  catastrophic cancellation when alpha << 1\n         */\n    let lgam1pa = alpha < 0.5 ? lgamma1p(alpha) : log(alpha) + g;\n    ch = exp((lgam1pa + p1) / alpha + M_LN2);\n\n    printer_qchisq_appr(' small chi-sq., ch0 = %d', ch);\n  } else if (nu > 0.32) {\n    /*  using Wilson and Hilferty estimate */\n\n    x = qnorm(p, 0, 1, lower_tail, log_p);\n    p1 = 2 / (9 * nu);\n    ch = nu * pow(x * sqrt(p1) + 1 - p1, 3);\n\n    printer_qchisq_appr(' nu > .32: Wilson-Hilferty; x = %d', x);\n\n    /* approximation for p tending to 1: */\n    if (ch > 2.2 * nu + 6)\n      ch = -2 * (R_DT_Clog(lower_tail, log_p, p) - c * log(0.5 * ch) + g);\n  } else {\n    /* \"small nu\" : 1.24*(-log(p)) <= nu <= 0.32 */\n\n    ch = 0.4;\n    a = R_DT_Clog(lower_tail, log_p, p) + g + c * M_LN2;\n\n    printer_qchisq_appr(' nu <= .32: a = %d', a);\n\n    do {\n      q = ch;\n      p1 = 1 / (1 + ch * (C7 + ch));\n      p2 = ch * (C9 + ch * (C8 + ch));\n      t = -0.5 + (C7 + 2 * ch) * p1 - (C9 + ch * (C10 + 3 * ch)) / p2;\n      ch -= (1 - exp(a + 0.5 * ch) * p2 * p1) / t;\n    } while (fabs(q - ch) > tol * fabs(ch));\n  }\n\n  return ch;\n}\n\nexport function qgamma<T>(\n  p: T,\n  alpha: number = 1, //named shape\n  scale: number = 1, //not the \"rate\"\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const fa: number[] = isArray(p) ? p : ([p] as any);\n  const result = fa.map(pp =>\n    _qgamma(pp, alpha, scale, lowerTail, logP)\n  );\n\n  return result.length === 1 ? result[0] : (result as any);\n}\n\nconst printer_qgamma = debug('_qgamma');\n\nexport function _qgamma(\n  p: number,\n  alpha: number = 1,\n  scale: number = 1 / alpha,\n  lower_tail: boolean = true,\n  log_p: boolean = false,\n  //normal: INormal\n): number {\n  /*\t\t\tshape = alpha */\n  const EPS1 = 1e-2;\n  const EPS2 = 5e-7; /* final precision of AS 91 */\n  const EPS_N = 1e-15; /* precision of Newton step / iterations */\n\n  // LN_EPS unused\n  //const LN_EPS = -36.043653389117156; /* = log(.Machine$double.eps) iff IEEE_754 */\n\n  const MAXIT = 1000; /* was 20 */\n\n  const pMIN = 1e-100; /* was 0.000002 = 2e-6 */\n  const pMAX = 1 - 1e-14; /* was (1-1e-12) and 0.999998 = 1 - 2e-6 */\n\n  const i420 = 1 / 420;\n  const i2520 = 1 / 2520;\n  const i5040 = 1 / 5040;\n\n  let p_;\n  let a;\n  let b;\n  let c;\n  let g;\n  let ch;\n  let ch0;\n  let p1;\n  let p2;\n  let s1;\n  let s2;\n  let s3;\n  let s4;\n  let s5;\n  let s6;\n  let t;\n  let x;\n  let i;\n  let max_it_Newton = 1;\n\n  let q: number = 0;\n\n  /* test arguments and initialise */\n\n  let goto_END = false;\n\n  if (ISNAN(p) || ISNAN(alpha) || ISNAN(scale)) return p + alpha + scale;\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n  if (alpha < 0 || scale <= 0) return ML_ERR_return_NAN(printer_qgamma);\n\n  if (alpha === 0) /* all mass at 0 : */ return 0;\n\n  if (alpha < 1e-10) {\n    /* Warning seems unnecessary now: */\n\n    printer_qgamma(\n      'value of shape (%d) is extremely small: results may be unreliable',\n      alpha\n    );\n\n    max_it_Newton = 7; /* may still be increased below */\n  }\n\n  p_ = R_DT_qIv(lower_tail, log_p, p); /* lower_tail prob (in any case) */\n\n  printer_qgamma(\n    'qgamma(p=%d, alpha=%d, scale=%d, l.t.=%s, log_p=%s): ',\n    p,\n    alpha,\n    scale,\n    lower_tail,\n    log_p\n  );\n\n  g = lgammafn(alpha); /* log Gamma(v/2) */\n\n  /*----- Phase I : Starting Approximation */\n  ch = qchisq_appr(\n    p,\n    /* nu= 'df' =  */ 2 * alpha,\n    /* lgamma(nu/2)= */ g,\n    lower_tail,\n    log_p,\n    /* tol= */ EPS1\n  );\n  if (!R_FINITE(ch)) {\n    /* forget about all iterations! */\n    max_it_Newton = 0;\n    goto_END = true;\n    //  goto END;\n  }\n  if (goto_END === false) {\n    if (ch < EPS2) {\n      /* Corrected according to AS 91; MM, May 25, 1999 */\n      max_it_Newton = 20;\n      // goto END;/* and do Newton steps */\n      goto_END = true;\n    }\n  }\n\n  /* FIXME: This (cutoff to {0, +Inf}) is far from optimal\n     * -----  when log_p or !lower_tail, but NOT doing it can be even worse */\n  if (goto_END === false) {\n    if (p_ > pMAX || p_ < pMIN) {\n      /* did return ML_POSINF or 0.;\tmuch better: */\n      max_it_Newton = 20;\n      goto_END = true;\n      //goto END;/* and do Newton steps */\n    }\n  }\n\n  if (goto_END === false) {\n    printer_qgamma('\\t==> ch = %d:', ch);\n\n    /*----- Phase II: Iteration\n         *\tCall pgamma() [AS 239]\tand calculate seven term taylor series\n         */\n    c = alpha - 1;\n    s6 = (120 + c * (346 + 127 * c)) * i5040; /* used below, is \"const\" */\n\n    ch0 = ch; /* save initial approx. */\n    for (i = 1; i <= MAXIT; i++) {\n      q = ch;\n      p1 = 0.5 * ch;\n      p2 =\n        p_ -\n        pgamma_raw(p1, alpha, /*lower_tail*/ true, /*log_p*/ false);\n\n      if (i === 1) printer_qgamma(' Ph.II iter; ch=%d, p2=%d', ch, p2);\n      if (i >= 2) printer_qgamma('     it=%d,  ch=%d, p2=%d', i, ch, p2);\n\n      if (!R_FINITE(p2) || ch <= 0) {\n        ch = ch0;\n        max_it_Newton = 27;\n        goto_END = true;\n        break;\n        //goto END;\n      } /*was  return ML_NAN;*/\n\n      t = p2 * exp(alpha * M_LN2 + g + p1 - c * log(ch));\n      b = t / ch;\n      a = 0.5 * t - b * c;\n      s1 = (210 + a * (140 + a * (105 + a * (84 + a * (70 + 60 * a))))) * i420;\n      s2 = (420 + a * (735 + a * (966 + a * (1141 + 1278 * a)))) * i2520;\n      s3 = (210 + a * (462 + a * (707 + 932 * a))) * i2520;\n      s4 =\n        (252 + a * (672 + 1182 * a) + c * (294 + a * (889 + 1740 * a))) * i5040;\n      s5 = (84 + 2264 * a + c * (1175 + 606 * a)) * i2520;\n\n      ch +=\n        t *\n        (1 +\n          0.5 * t * s1 -\n          b * c * (s1 - b * (s2 - b * (s3 - b * (s4 - b * (s5 - b * s6))))));\n      if (fabs(q - ch) < EPS2 * ch) {\n        //   goto END;\n        goto_END = true;\n        break;\n      }\n      if (fabs(q - ch) > 0.1 * ch) {\n        /* diverging? -- also forces ch > 0 */\n        if (ch < q) ch = 0.9 * q;\n        else ch = 1.1 * q;\n      }\n    }\n    /* no convergence in MAXIT iterations -- but we add Newton now... */\n\n    printer_qgamma(\n      'qgamma(%d) not converged in %d iterations; rel.ch=%d',\n      p,\n      MAXIT,\n      ch / fabs(q - ch)\n    );\n\n    /* was\n         *    ML_ERROR(ME_PRECISION, \"qgamma\");\n         * does nothing in R !*/\n  }\n  //END:\n  /* PR# 2214 :\t From: Morten Welinder <terra@diku.dk>, Fri, 25 Oct 2002 16:50\n       --------\t To: R-bugs@biostat.ku.dk     Subject: qgamma precision\n    \n       * With a final Newton step, double accuracy, e.g. for (p= 7e-4; nu= 0.9)\n       *\n       * Improved (MM): - only if rel.Err > EPS_N (= 1e-15);\n       *\t\t    - also for lower_tail = FALSE\t or log_p = TRUE\n       *\t\t    - optionally *iterate* Newton\n       */\n  x = 0.5 * scale * ch;\n  if (max_it_Newton) {\n    /* always use log scale */\n    if (!log_p) {\n      p = log(p);\n      log_p = true;\n    }\n    if (x === 0) {\n      const _1_p = 1 + 1e-7;\n      const _1_m = 1 - 1e-7;\n      x = DBL_MIN;\n      p_ = pgamma(x, alpha, scale, lower_tail, log_p);\n      if ((lower_tail && p_ > p * _1_p) || (!lower_tail && p_ < p * _1_m))\n        return 0;\n      /* else:  continue, using x = DBL_MIN instead of  0  */\n    } else p_ = pgamma(x, alpha, scale, lower_tail, log_p);\n    if (p_ === ML_NEGINF) return 0; /* PR#14710 */\n    for (i = 1; i <= max_it_Newton; i++) {\n      p1 = p_ - p;\n\n      if (i === 1)\n        printer_qgamma(\n          ' it=%d: p=%d, x = %d, p.=%d; p1=d{p}=%d',\n          i,\n          p,\n          x,\n          p_,\n          p1\n        );\n      if (i >= 2)\n        printer_qgamma(\n          '          x{it= %d} = %d, p.=%d, p1=d{p}=%d',\n          i,\n          x,\n          p_,\n          p1\n        );\n\n      if (fabs(p1) < fabs(EPS_N * p)) break;\n      /* else */\n      g = dgamma(x, alpha, scale, log_p);\n      if (g === R_D__0(log_p)) {\n        if (i === 1)\n          printer_qgamma('no final Newton step because dgamma(*)== 0!');\n        break;\n      }\n      /* else :\n             * delta x = f(x)/f'(x);\n             * if(log_p) f(x) := log P(x) - p; f'(x) = d/dx log P(x) = P' / P\n             * ==> f(x)/f'(x) = f*P / P' = f*exp(p_) / P' (since p_ = log P(x))\n             */\n      t = log_p ? p1 * exp(p_ - g) : p1 / g; /* = \"delta x\" */\n      t = lower_tail ? x - t : x + t;\n      p_ = pgamma(t, alpha, scale, lower_tail, log_p);\n      if (\n        fabs(p_ - p) > fabs(p1) ||\n        (i > 1 && fabs(p_ - p) === fabs(p1)) /* <- against flip-flop */\n      ) {\n        /* no improvement */\n\n        if (i === 1 && max_it_Newton > 1)\n          printer_qgamma('no Newton step done since delta{p} >= last delta');\n\n        break;\n      } /* else : */\n\n      /* control step length: this could have started at\n               the initial approximation */\n      if (t > 1.1 * x) t = 1.1 * x;\n      else if (t < 0.9 * x) t = 0.9 * x;\n\n      x = t;\n    }\n  }\n\n  return x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/qgamma.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { map } from '../r-func';\n\nimport {\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D__1,\n  R_D_negInonint,\n  R_D_nonint_check\n} from '../common/_general';\n\nimport { dbinom_raw } from '../binomial/dbinom';\n\nconst printer = debug('dhyper');\nconst { round: R_forceint } = Math;\nconst { isNaN: ISNAN } = Number;\n\nexport function dhyper<T>(\n  xx: T,\n  r: number,\n  b: number,\n  n: number,\n  give_log: boolean = false\n): T {\n  return map(xx)(x => {\n    let p: number;\n    let q: number;\n    let p1: number;\n    let p2: number;\n    let p3: number;\n\n    if (ISNAN(x) || ISNAN(r) || ISNAN(b) || ISNAN(n)) return x + r + b + n;\n\n    if (\n      R_D_negInonint(r) ||\n      R_D_negInonint(b) ||\n      R_D_negInonint(n) ||\n      n > r + b\n    )\n      return ML_ERR_return_NAN(printer);\n    if (x < 0) return R_D__0(give_log);\n    let rc = R_D_nonint_check(give_log, x, printer); // incl warning\n    if (rc !== undefined) {\n      return rc;\n    }\n    x = R_forceint(x);\n    r = R_forceint(r);\n    b = R_forceint(b);\n    n = R_forceint(n);\n\n    if (n < x || r < x || n - x > b) return R_D__0(give_log);\n    if (n === 0) return x === 0 ? R_D__1(give_log) : R_D__0(give_log);\n\n    p = n / (r + b);\n    q = (r + b - n) / (r + b);\n\n    p1 = dbinom_raw(x, r, p, q, give_log);\n    p2 = dbinom_raw(n - x, b, p, q, give_log);\n    p3 = dbinom_raw(n, r + b, p, q, give_log);\n\n    return give_log ? p1 + p2 - p3 : p1 * p2 / p3;\n  }) as any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/hypergeometric/dhyper.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\nimport { R_DT_qIv } from '../exp/expm1';\nimport { map } from '../r-func';\nimport { lfastchoose } from './lfastchoose';\n\nconst { log, exp, min: fmin2, max: fmax2, round: R_forceint } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE, EPSILON: DBL_EPSILON } = Number;\n\nconst printer_qhyper = debug('qhyper');\n\nexport function qhyper<T>(\n  pp: T,\n  nr: number,\n  nb: number,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return map(pp)(p => {\n    /* This is basically the same code as  ./phyper.c  *used* to be --> FIXME! */\n    let N;\n    let xstart;\n    let xend;\n    let xr;\n    let xb;\n    let sum;\n    let term;\n    let small_N;\n\n    if (ISNAN(p) || ISNAN(nr) || ISNAN(nb) || ISNAN(n)) return NaN;\n\n    if (/*!R_FINITE(p) ||*/ !R_FINITE(nr) || !R_FINITE(nb) || !R_FINITE(n))\n      return ML_ERR_return_NAN(printer_qhyper);\n\n    let NR = R_forceint(nr);\n    let NB = R_forceint(nb);\n    N = NR + NB;\n    n = R_forceint(n);\n    if (NR < 0 || NB < 0 || n < 0 || n > N)\n      return ML_ERR_return_NAN(printer_qhyper);\n\n    /* Goal:  Find  xr (= #{red balls in sample}) such that\n     *   phyper(xr,  NR,NB, n) >= p > phyper(xr - 1,  NR,NB, n)\n     */\n\n    xstart = fmax2(0, n - NB);\n    xend = fmin2(n, NR);\n\n    let rc = R_Q_P01_boundaries(lowerTail, logP, p, xstart, xend);\n    if (rc !== undefined) {\n      return rc;\n    }\n    xr = xstart;\n    xb = n - xr; /* always ( = #{black balls in sample} ) */\n\n    small_N = N < 1000; /* won't have underflow in product below */\n    /* if N is small,  term := product.ratio( bin.coef );\n       otherwise work with its logarithm to protect against underflow */\n    term = lfastchoose(NR, xr) + lfastchoose(NB, xb) - lfastchoose(N, n);\n    if (small_N) term = exp(term);\n    NR -= xr;\n    NB -= xb;\n\n    if (!lowerTail || logP) {\n      p = R_DT_qIv(lowerTail, logP, p);\n    }\n    p *= 1 - 1000 * DBL_EPSILON; /* was 64, but failed on FreeBSD sometimes */\n    sum = small_N ? term : exp(term);\n\n    while (sum < p && xr < xend) {\n      xr++;\n      NB++;\n      if (small_N) term *= NR / xr * (xb / NB);\n      else term += log(NR / xr * (xb / NB));\n      sum += small_N ? term : exp(term);\n      xb--;\n      NR--;\n    }\n    return xr;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/hypergeometric/qhyper.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 16, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    The distribution function of the Poisson distribution.\n */\n\nimport { ML_ERR_return_NAN, R_DT_0, R_DT_1 } from '../common/_general';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { floor, max: fmax2 } = Math;\n\nimport * as debug from 'debug';\nimport { NumberW } from '../common/toms708';\nimport { pgamma } from '../gamma/pgamma';\nimport { map } from '../r-func';\n\nconst printer = debug('ppois');\n\nexport function ppois<T>(\n  _x: T,\n  lambda: number,\n  lowerTail: boolean = true,\n  logP: boolean = false,\n  //normal: INormal //pass it on to \"pgamma\"->\"pgamma_raw\"->\"ppois_asymp\"->(dpnorm??)->(\"normal.pnorm\")  \n): T {\n\n  return map(_x)(x => {\n    if (ISNAN(x) || ISNAN(lambda)) return x + lambda;\n\n    if (lambda < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (x < 0) return R_DT_0(lowerTail, logP);\n    if (lambda === 0) return R_DT_1(lowerTail, logP);\n    if (!R_FINITE(x)) return R_DT_1(lowerTail, logP);\n    x = floor(x + 1e-7);\n\n    return pgamma(lambda, x + 1, 1, !lowerTail, logP);\n  }) as any;\n\n}\n\nexport function do_search(\n  y: number,\n  z: NumberW,\n  p: number,\n  lambda: number,\n  incr: number,\n // normal: INormal\n): number {\n  if (z.val >= p) {\n    /* search to the left */\n    while (true) {\n      if (\n        y === 0 ||\n        (z.val = ppois(\n          y - incr,\n          lambda,\n          /*l._t.*/ true,\n          /*log_p*/ false,\n         // normal\n        )) < p\n      )\n        return y;\n      y = fmax2(0, y - incr);\n    }\n  } else {\n    /* search to the right */\n\n    while (true) {\n      y = y + incr;\n      if (\n        (z.val = ppois(y, lambda, /*l._t.*/ true, /*log_p*/ false/*, normal*/)) >= p\n      )\n        return y;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/poisson/ppois.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998   Ross Ihaka\n *  Copyright (C) 2000-9 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double norm_rand(void);\n *\n *  DESCRIPTION\n *\n *    Random variates from the STANDARD normal distribution  N(0,1).\n *\n * Is called from  rnorm(..), but also rt(), rf(), rgamma(), ...\n */\n\n/*\n *  REFERENCE\n *\n *    Ahrens, J.H. and Dieter, U.\n *    Extensions of Forsythe's method for random sampling from\n *    the normal distribution.\n *    Math. Comput. 27, 927-937.\n *\n *    The definitions of the constants a[k], d[k], t[k] and\n *    h[k] are according to the abovementioned article\n */\n\n/*-----------------------------------------------------------*/\n\nimport { IRNG } from '../';\nimport { qnorm } from '../../normal/qnorm';\nimport { MersenneTwister } from '../mersenne-twister';\nimport { IRNGNormal } from './inormal-rng';\n\nconst BIG = 134217728; /* 2^27 */\n\nconst { isArray } = Array;\nexport class Inversion extends IRNGNormal {\n  constructor(_rng: IRNG  = new MersenneTwister(0) ) {\n    super(_rng);\n  }\n\n  protected internal_norm_rand(): number {\n    /* unif_rand() alone is not of high enough precision */\n    let u1 = this.rng.unif_rand() as number;\n    let t =  this.rng.unif_rand() as number;\n    u1 = new Int32Array([BIG * u1])[0] + t;\n    const result = qnorm(u1 / BIG, 0.0, 1.0, !!1, !!0);\n    return isArray(result) ? result[0] : result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/inversion.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n * ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1999-2014  The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double dsignrank(double x, double n, int give_log)\n *    double psignrank(double x, double n, int lower_tail, int log_p)\n *    double qsignrank(double x, double n, int lower_tail, int log_p)\n *    double rsignrank(double n)\n *\n *  DESCRIPTION\n *\n *    dsignrank\t   The density of the Wilcoxon Signed Rank distribution.\n *    psignrank\t   The distribution function of the Wilcoxon Signed Rank\n *\t\t   distribution.\n *    qsignrank\t   The quantile function of the Wilcoxon Signed Rank\n *\t\t   distribution.\n *    rsignrank\t   Random variates from the Wilcoxon Signed Rank\n *\t\t   distribution.\n */\nimport * as debug from 'debug';\n\nimport {\n  imin2,\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D_exp,\n  R_DT_0,\n  R_DT_1,\n  R_DT_val,\n  R_Q_P01_check\n} from '../common/_general';\n\nimport { R_DT_qIv } from '../exp/expm1';\n\nimport { IRNG } from '../rng';\n\nconst { isFinite: R_FINITE, EPSILON: DBL_EPSILON, isNaN: ISNAN } = Number;\nconst {\n  LN2: M_LN2,\n  abs: fabs,\n  trunc,\n  log,\n  exp,\n  floor,\n  round\n} = Math;\n\nconst printer_dsignrank = debug('dsignrank');\nconst printer_psignrank = debug('psignrank');\nconst printer_qsignrank = debug('qsignrank');\nconst printer_rsignrank = debug('rsignrank');\n\nexport function csignrank(\n  k: number,\n  n: number,\n  u: number,\n  c: number,\n  w: number[]\n): number {\n  if (k < 0 || k > u) return 0;\n  if (k > c) k = u - k;\n\n  if (n === 1) return 1;\n  if (w[0] === 1) return w[k];\n  w[0] = w[1] = 1;\n  for (let j = 2; j < n + 1; ++j) {\n    let i;\n    let end = imin2(j * (j + 1) / 2, c);\n    for (i = end; i >= j; --i) w[i] += w[i - j];\n  }\n  return w[k];\n}\n\nexport function dsignrank<T>(xx: T, n: number, logX: boolean = false): T {\n  const rn = round(n);\n  const u = rn * (rn + 1) / 2;\n  const c = trunc(u / 2);\n  const w = new Array(c + 1).fill(0);\n\n  const fx: number[] = (Array.isArray(xx) ? xx : [xx]) as any;\n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(n)) return x + n;\n\n    if (n <= 0) {\n      return ML_ERR_return_NAN(printer_dsignrank);\n    }\n    if (fabs(x - round(x)) > 1e-7) {\n      return R_D__0(logX);\n    }\n    x = round(x);\n    if (x < 0 || x > n * (n + 1) / 2) {\n      return R_D__0(logX);\n    }\n    let d = R_D_exp(logX, log(csignrank(trunc(x), n, u, c, w)) - n * M_LN2);\n    return d;\n  });\n  return (result.length === 1 ? result[0] : result) as any;\n}\n\nexport function psignrank<T>(\n  xx: T,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const roundN = round(n);\n  const u = roundN * (roundN + 1) / 2;\n  const c = trunc(u / 2);\n  const w = new Array(c + 1).fill(0);\n\n  const fx: number[] = (Array.isArray(xx) ? xx : [xx]) as any;\n\n  const result = fx.map(x => round(x + 1e-7)).map(x => {\n    let lowerT = lowerTail; // temp copy on each iteration\n    if (ISNAN(x) || ISNAN(n)) return x + n;\n    if (!R_FINITE(n)) return ML_ERR_return_NAN(printer_psignrank);\n    if (n <= 0) return ML_ERR_return_NAN(printer_psignrank);\n\n    if (x < 0.0) {\n      return R_DT_0(lowerTail, logP);\n    }\n\n    if (x >= u) {\n      return  R_DT_1(lowerTail, logP); //returns 1 on the edge case or 0 (because log(1)= 0)\n    }\n    let f = exp(-roundN * M_LN2);\n    let p = 0;\n    if (x <= u / 2) {\n      //smaller then mean\n      for (let i = 0; i <= x; i++) {\n        p += csignrank(i, roundN, u, c, w) * f;\n      }\n    } else {\n      x = n * (n + 1) / 2 - x;\n      for (let i = 0; i < x; i++) {\n        p += csignrank(i, roundN, u, c, w) * f;\n      }\n      lowerT = !lowerT; /* p = 1 - p; */\n    }\n    return R_DT_val(lowerT, logP, p);\n  });\n  return (result.length === 1 ? result[0] : result) as any;\n} /* psignrank() */\n\nexport function qsignrank<T>(\n  xx: T,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n\n  const roundN = round(n);\n  const u = roundN * (roundN + 1) / 2;\n  const c = trunc(u / 2);\n  const w = new Array(c + 1).fill(0);\n  \n  const fx: number[] = (Array.isArray(xx) ? xx : [xx]) as any;\n \n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(n)) {\n      return x + n;\n    }\n\n    if (!R_FINITE(x) || !R_FINITE(n)) {\n      return ML_ERR_return_NAN(printer_qsignrank);\n    }\n    let rc = R_Q_P01_check(logP, x);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (roundN <= 0) {return ML_ERR_return_NAN(printer_qsignrank); }\n\n    if (x === R_DT_0(lowerTail, logP)) {\n      return 0;\n    }\n    if (x === R_DT_1(lowerTail, logP)) {\n      return u;\n    }\n\n    if (logP || !lowerTail)\n      x = R_DT_qIv(lowerTail, logP, x); // lower_tail, non-log \"p\" \n\n    //this.w_init_maybe(n);\n    let f = exp(-n * M_LN2);\n    let p = 0;\n    let q = 0;\n    if (x <= 0.5) {\n      x = x - 10 * DBL_EPSILON;\n      while (true) {\n        p += csignrank(q, roundN, u, c, w) * f;\n        if (p >= x) break;\n        q++;\n      }\n    } else {\n      x = 1 - x + 10 * DBL_EPSILON;\n      while (true) {\n        p += csignrank(q, roundN, u, c, w) * f;\n        if (p > x) {\n          q = trunc(u - q);\n          break;\n        }\n        q++;\n      }\n    }\n    return q;\n  });\n  return (result.length === 1 ? result[0] : result) as any;\n}\n\nexport function rsignrank(nn: number, n: number, rng: IRNG): number | number[] {\n  const result = new Array(nn).fill(0).map(() => {\n    /* NaNs propagated correctly */\n    if (ISNAN(n)) return n;\n    const nRound = round(n);\n    if (nRound < 0) return ML_ERR_return_NAN(printer_rsignrank);\n\n    if (nRound === 0) return 0;\n    let r = 0.0;\n    let k = floor(nRound);\n    for (let i = 0; i < k /**/; ) {\n      r += ++i * floor((rng.unif_rand() as number) + 0.5);\n    }\n    return r;\n  });\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/signrank.ts","/*\n *  AUTHOR\n * \n *  Jacob Bogers, jkfbogers@gmail.com\n *  Januari 22, 2017\n * \n *  ORIGINAL AUTHOR\n *    Catherine Loader, catherine@research.bell-labs.com.\n *    October 23, 2000.\n *\n *  Merge in to R:\n *  Copyright (C) 2000, The R Core Team\n *  R has lgammafn, and lgamma is not part of ISO C\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n * \n *  License for JS language implementation\n *  https://www.jacob-bogers/libRmath.js/Licenses/\n * \n *  License for R statistical package\n *  https://www.r-project.org/Licenses/\n *\n *\n *  DESCRIPTION\n *\n *    Computes the log of the error term in Stirling's formula.\n *      For n > 15, uses the series 1/12n - 1/360n^3 + ...\n *      For n <=15, integers or half-integers, uses stored values.\n *      For other n < 15, uses lgamma directly (don't use this to\n *        write lgamma!)\n *\n */\n\nimport { M_LN_SQRT_2PI } from '../common/_general';\nimport { lgammafn } from '../gamma/lgamma_fn';\n\nconst { trunc , log } = Math;\n\nconst sferr_halves: number[] = [\n    0.0, // n=0 - wrong, place holder only \n    0.1534264097200273452913848,  // 0.5 \n    0.0810614667953272582196702,  // 1.0 \n    0.0548141210519176538961390,  // 1.5 \n    0.0413406959554092940938221,  // 2.0  \n    0.03316287351993628748511048, // 2.5  \n    0.02767792568499833914878929, // 3.0  \n    0.02374616365629749597132920, // 3.5  \n    0.02079067210376509311152277, // 4.0  \n    0.01848845053267318523077934, // 4.5  \n    0.01664469118982119216319487, // 5.0  \n    0.01513497322191737887351255, // 5.5  \n    0.01387612882307074799874573, // 6.0  \n    0.01281046524292022692424986, // 6.5  \n    0.01189670994589177009505572, // 7.0  \n    0.01110455975820691732662991, // 7.5  \n    0.010411265261972096497478567, // 8.0  \n    0.009799416126158803298389475, // 8.5  \n    0.009255462182712732917728637, // 9.0  \n    0.008768700134139385462952823, // 9.5  \n    0.008330563433362871256469318, // 10.0  \n    0.007934114564314020547248100, // 10.5  \n    0.007573675487951840794972024, // 11.0  \n    0.007244554301320383179543912, // 11.5  \n    0.006942840107209529865664152, // 12.0  \n    0.006665247032707682442354394, // 12.5  \n    0.006408994188004207068439631, // 13.0  \n    0.006171712263039457647532867, // 13.5  \n    0.005951370112758847735624416, // 14.0  \n    0.005746216513010115682023589, // 14.5  \n    0.005554733551962801371038690  // 15.0  \n];\n\nconst S0 = 0.083333333333333333333;       // 1/12 \nconst S1 = 0.00277777777777777777778;     // 1/360 \nconst S2 = 0.00079365079365079365079365;  // 1/1260 \nconst S3 = 0.000595238095238095238095238; // 1/1680 \nconst S4 = 0.0008417508417508417508417508; // 1/1188 \n\n\n// stirlerr(n) = log(n!) - log( sqrt(2*pi*n)*(n/e)^n )\n//              = log Gamma(n+1) - 1/2 * [log(2*pi) + log(n)] - n*[log(n) - 1]\n//             = log Gamma(n+1) - (n + 1/2) * log(n) + n - log(2*pi)/2\n//\n// see also lgammacor() in ./lgammacor.c  which computes almost the same!\n//\n\n export function stirlerr(n: number): number {\n\n    //  error for 0, 0.5, 1.0, 1.5, ..., 14.5, 15.0.\n    let nn: number;\n\n    if (n <= 15.0) {\n        nn = n + n;\n        if (nn === trunc(nn)) return (sferr_halves[trunc(nn)]);\n        return (lgammafn(n + 1.) - (n + 0.5) * log(n) + n - M_LN_SQRT_2PI);\n    }\n\n    nn = n * n;\n    if (n > 500) return ((S0 - S1 / nn) / n);\n    if (n > 80) return ((S0 - (S1 - S2 / nn) / nn) / n);\n    if (n > 35) return ((S0 - (S1 - (S2 - S3 / nn) / nn) / nn) / n);\n    // 15 < n <= 35 :\n    return ((S0 - (S1 - (S2 - (S3 - S4 / nn) / nn) / nn) / nn) / n);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/stirling/stirlerror.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 20, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2013 The R Core Team\n *  Copyright (C) 2003-2013 The R Foundation\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *\tThe \"Student\" t distribution quantile function.\n *\n *  NOTES\n *\n *\tThis is a C translation of the Fortran routine given in:\n *\tHill, G.W (1970) \"Algorithm 396: Student's t-quantiles\"\n *\tCACM 13(10), 619-620.\n *\n *\tSupplemented by inversion for 0 < ndf < 1.\n *\n *  ADDITIONS:\n *\t- lower_tail, log_p\n *\t- using\t expm1() : takes care of  Lozy (1979) \"Remark on Algo.\", TOMS\n *\t- Apply 2-term Taylor expansion as in\n *\t  Hill, G.W (1981) \"Remark on Algo.396\", ACM TOMS 7, 250-1\n *\t- Improve the formula decision for 1 < df < 2\n */\n\nimport * as debug from 'debug';\n\nimport {\n  DBL_MANT_DIG,\n  M_1_PI,\n  M_PI_2,\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR,\n  R_D_Cval,\n  R_D_log,\n  R_D_Lval,\n  R_D_qIv,\n  R_Q_P01_boundaries\n} from '../common/_general';\n\nimport { R_D_LExp, R_DT_qIv } from '../exp/expm1';\nimport { qnorm } from '../normal/qnorm';\nimport { map } from '../r-func';\nimport { tanpi } from '../trigonometry/cospi';\nimport { dt } from './dt';\nimport { pt } from './pt';\n\nconst {\n  LN2: M_LN2,\n  PI: M_PI,\n  SQRT2: M_SQRT2,\n  sqrt,\n  pow,\n  log,\n  exp,\n  min: fmin2,\n  abs: fabs,\n  expm1\n} = Math;\n\nconst {\n  isNaN: ISNAN,\n  EPSILON: DBL_EPSILON,\n  MAX_VALUE: DBL_MAX,\n  MIN_VALUE: DBL_MIN,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF,\n  isFinite: R_FINITE\n} = Number;\n\nconst printer_qt = debug('qt');\n\nexport function qt<T>(\n  pp: T,\n  ndf: number,\n  lowerTail: boolean,\n  logP: boolean\n): T {\n  return map(pp)(p => _qt(p, ndf, lowerTail, logP)) as any;\n}\n\nfunction _qt(\n  p: number,\n  ndf: number,\n  lower_tail: boolean,\n  log_p: boolean\n): number {\n  const eps = 1e-12;\n  let P;\n  let q;\n\n  const accu = 1e-13;\n  const Eps = 1e-11; /* must be > accur */\n\n  if (ISNAN(p) || ISNAN(ndf)) return p + ndf;\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, ML_NEGINF, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n  if (ndf <= 0) return ML_ERR_return_NAN(printer_qt);\n\n  if (ndf < 1) {\n    /* based on qnt */\n\n    let ux;\n    let lx;\n    let nx;\n    let pp;\n\n    let iter = 0;\n\n    p = R_DT_qIv(lower_tail, log_p, p);\n\n    /* Invert pt(.) :\n     * 1. finding an upper and lower bound */\n    if (p > 1 - DBL_EPSILON) return ML_POSINF;\n    pp = fmin2(1 - DBL_EPSILON, p * (1 + Eps));\n    for (\n      ux = 1;\n      ux < DBL_MAX && pt(ux, ndf, true, false) < pp;\n      ux *= 2\n    );\n    pp = p * (1 - Eps);\n    for (\n      lx = -1;\n      lx > -DBL_MAX && pt(lx, ndf, true, false) > pp;\n      lx *= 2\n    );\n\n    /* 2. interval (lx,ux)  halving\n       regula falsi failed on qt(0.1, 0.1)\n     */\n    do {\n      nx = 0.5 * (lx + ux);\n      if (pt(nx, ndf, true, false) > p) ux = nx;\n      else lx = nx;\n    } while ((ux - lx) / fabs(nx) > accu && ++iter < 1000);\n\n    if (iter >= 1000) {\n      ML_ERROR(ME.ME_PRECISION, 'qt', printer_qt);\n    }\n\n    return 0.5 * (lx + ux);\n  }\n\n  /* Old comment:\n     * FIXME: \"This test should depend on  ndf  AND p  !!\n     * -----  and in fact should be replaced by\n     * something like Abramowitz & Stegun 26.7.5 (p.949)\"\n     *\n     * That would say that if the qnorm value is x then\n     * the result is about x + (x^3+x)/4df + (5x^5+16x^3+3x)/96df^2\n     * The differences are tiny even if x ~ 1e5, and qnorm is not\n     * that accurate in the extreme tails.\n     */\n  if (ndf > 1e20) return qnorm(p, 0, 1, lower_tail, log_p);\n\n  P = R_D_qIv(log_p, p); /* if exp(p) underflows, we fix below */\n\n  let neg = (!lower_tail || P < 0.5) && (lower_tail || P > 0.5);\n  let is_neg_lower = lower_tail === neg; /* both TRUE or FALSE == !xor */\n  if (neg)\n    P = 2 * (log_p ? (lower_tail ? P : -expm1(p)) : R_D_Lval(lower_tail, p));\n  else P = 2 * (log_p ? (lower_tail ? -expm1(p) : P) : R_D_Cval(lower_tail, p));\n  /* 0 <= P <= 1 ; P = 2*min(P', 1 - P')  in all cases */\n\n  if (fabs(ndf - 2) < eps) {\n    /* df ~= 2 */\n    if (P > DBL_MIN) {\n      if (3 * P < DBL_EPSILON)\n        /* P ~= 0 */\n        q = 1 / sqrt(P);\n      else if (P > 0.9)\n        /* P ~= 1 */\n        q = (1 - P) * sqrt(2 / (P * (2 - P))); /* eps/3 <= P <= 0.9 */\n      else q = sqrt(2 / (P * (2 - P)) - 2);\n    } else {\n      /* P << 1, q = 1/sqrt(P) = ... */\n      if (log_p) q = is_neg_lower ? exp(-p / 2) / M_SQRT2 : 1 / sqrt(-expm1(p));\n      else q = ML_POSINF;\n    }\n  } else if (ndf < 1 + eps) {\n    /* df ~= 1  (df < 1 excluded above): Cauchy */\n    if (P === 1) q = 0;\n    else if (P > 0)\n      // some versions of tanpi give Inf, some NaN\n      q = 1 / tanpi(P / 2);\n    else {\n      /* == - tan((P+1) * M_PI_2) -- suffers for P ~= 0 */\n\n      /* P = 0, but maybe = 2*exp(p) ! */\n      if (log_p)\n        /* 1/tan(e) ~ 1/e */\n        q = is_neg_lower ? M_1_PI * exp(-p) : -1 / (M_PI * expm1(p));\n      else q = ML_POSINF;\n    }\n  } else {\n    /*-- usual case;  including, e.g.,  df = 1.1 */\n    let x = 0;\n    let y = 0;\n    let log_P2 = 0 /* -Wall */;\n    let a = 1 / (ndf - 0.5);\n    let b = 48 / (a * a);\n    let c = ((20700 * a / b - 98) * a - 16) * a + 96.36;\n    let d = ((94.5 / (b + c) - 3) / b + 1) * sqrt(a * M_PI_2) * ndf;\n\n    let P_ok1 = P > DBL_MIN || !log_p;\n    let P_ok = P_ok1;\n\n    if (P_ok1) {\n      y = pow(d * P, 2.0 / ndf);\n      P_ok = y >= DBL_EPSILON;\n    }\n    if (!P_ok) {\n      // log.p && P very.small  ||  (d*P)^(2/df) =: y < eps_c\n      log_P2 = is_neg_lower\n        ? R_D_log(log_p, p)\n        : R_D_LExp(log_p, p); /* == log(P / 2) */\n      x = (log(d) + M_LN2 + log_P2) / ndf;\n      y = exp(2 * x);\n    }\n\n    if ((ndf < 2.1 && P > 0.5) || y > 0.05 + a) {\n      /* P > P0(df) */\n      /* Asymptotic inverse expansion about normal */\n      if (P_ok)\n        x = qnorm(\n          0.5 * P,\n          0,\n          1,\n          /*lower_tail*/ false,\n          /*log_p*/ false\n        ); /* log_p && P underflowed */\n      else x = qnorm(log_P2, 0, 1, lower_tail, /*log_p*/ true);\n\n      y = x * x;\n      if (ndf < 5) c += 0.3 * (ndf - 4.5) * (x + 0.6);\n      c = (((0.05 * d * x - 5) * x - 7) * x - 2) * x + b + c;\n      y = (((((0.4 * y + 6.3) * y + 36) * y + 94.5) / c - y - 3) / b + 1) * x;\n      y = expm1(a * y * y);\n      q = sqrt(ndf * y);\n    } else if (!P_ok && x < -M_LN2 * DBL_MANT_DIG) {\n      /* 0.5* log(DBL_EPSILON) */\n      /* y above might have underflown */\n      q = sqrt(ndf) * exp(-x);\n    } else {\n      /* re-use 'y' from above */\n      y =\n        ((1 / (((ndf + 6) / (ndf * y) - 0.089 * d - 0.822) * (ndf + 2) * 3) +\n          0.5 / (ndf + 4)) *\n          y -\n          1) *\n          (ndf + 1) /\n          (ndf + 2) +\n        1 / y;\n      q = sqrt(ndf * y);\n    }\n\n    /* Now apply 2-term Taylor expansion improvement (1-term = Newton):\n     * as by Hill (1981) [ref.above] */\n\n    /* FIXME: This can be far from optimal when log_p = TRUE\n     *      but is still needed, e.g. for qt(-2, df=1.01, log=TRUE).\n     *\tProbably also improvable when  lower_tail = FALSE */\n\n    if (P_ok1) {\n      let it = 0;\n      while (\n        it++ < 10 &&\n        (y = dt(q, ndf, false)) > 0 &&\n        R_FINITE((x = (pt(q, ndf, false, false) - P / 2) / y)) &&\n        fabs(x) > 1e-14 * fabs(q)\n      )\n        /* Newton (=Taylor 1 term):\n         *  q += x;\n         * Taylor 2-term : */\n        q += x * (1 + x * q * (ndf + 1) / (2 * (q * q + ndf)));\n    }\n  }\n  if (neg) q = -q;\n  return q;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/qt.ts","import * as debug from 'debug';\n\nimport { fmod, ME, ML_ERROR } from '../common/_general';\nconst { NaN: ML_NAN, isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\nconst {  PI: M_PI } = Math;\n\n// tan(pi * x)  -- exact when x = k/2  for all integer k\nconst printer_tanpi = debug('tanpi');\nexport function tanpi(x: number): number {\n  if (ISNAN(x)) return x;\n  if (!R_FINITE(x)) {\n    ML_ERROR(ME.ME_DOMAIN, '', printer_tanpi);\n    return ML_NAN;\n  }\n  x = fmod(x, 1); // tan(pi(x + k)) == tan(pi x)  for all integer k\n  // map (-1,1) --> (-1/2, 1/2] :\n  if (x <= -0.5) {\n    x++;\n  } else if (x > 0.5) {\n    x--;\n  }\n  return x === 0 ? 0 : x === 0.5 ? ML_NAN : Math.tan(M_PI * x);\n}\n\nexport function atanpi(x: number) {\n  return Math.atan(x) / Math.PI;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/trigonometry/tanpi.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 18, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998       Ross Ihaka\n *  Copyright (C) 2000--2007 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double ptukey(q, rr, cc, df, lower_tail, log_p);\n *\n *  DESCRIPTION\n *\n *    Computes the probability that the maximum of rr studentized\n *    ranges, each based on cc means and with df degrees of freedom\n *    for the standard error, is less than q.\n *\n *    The algorithm is based on that of the reference.\n *\n *  REFERENCE\n *\n *    Copenhaver, Margaret Diponzio & Holland, Burt S.\n *    Multiple comparisons of simple effects in\n *    the two-way analysis of variance with fixed effects.\n *    Journal of Statistical Computation and Simulation,\n *    Vol.30, pp.1-15, 1988.\n*/\n\nimport * as debug from 'debug';\nimport { wprob } from './wprob';\n\nimport {\n  //M_1_SQRT_2PI,\n  ME,\n  ML_ERR_return_NAN,\n  ML_ERROR,\n  R_DT_0,\n  R_DT_1\n} from '../common/_general';\n\nimport { R_DT_val } from '../common/_general';\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { exp, sqrt, log, LN2: M_LN2 } = Math;\n\nconst printer_ptukey = debug('_ptukey');\n\nexport function ptukey<T>(\n  qq: T,\n  rr: number,\n  cc: number,\n  df: number,\n  lower_tail: boolean = true,\n  log_p: boolean = false,\n // normal: INormal\n): T {\n  return map(qq)(q =>\n    _ptukey(q, rr, cc, df, lower_tail, log_p)\n  ) as any;\n}\n\n/*\n> ptukey\nfunction (q, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE)\n.Call(C_ptukey, q, nranges, nmeans, df, lower.tail, log.p)\n<bytecode: 0x000000001cde3048>\n<environment: namespace:stats>\n\ndouble ptukey(\n\tdouble q, // q\n\tdouble rr, // nranges\n\tdouble cc, // nmeans\n\tdouble df, // df\n  int lower_tail, // lowertail\n\tint log_p //logp\n*/\nexport function _ptukey(\n  q: number,\n  rr: number,\n  cc: number,\n  df: number,\n  lower_tail: boolean,\n  log_p: boolean\n): number {\n  /*  function ptukey() [was qprob() ]:\n    \n        q = value of studentized range\n        rr = no. of rows or groups\n        cc = no. of columns or treatments\n        df = degrees of freedom of error term\n        ir[0] = error flag = 1 if wprob probability > 1\n        ir[1] = error flag = 1 if qprob probability > 1\n    \n        qprob = returned probability integral over [0, q]\n    \n        The program will not terminate if ir[0] or ir[1] are raised.\n    \n        All references in wprob to Abramowitz and Stegun\n        are from the following reference:\n    \n        Abramowitz, Milton and Stegun, Irene A.\n        Handbook of Mathematical Functions.\n        New York:  Dover publications, Inc. (1970).\n    \n        All constants taken from this text are\n        given to 25 significant digits.\n    \n        nlegq = order of legendre quadrature\n        ihalfq = int ((nlegq + 1) / 2)\n        eps = max. allowable value of integral\n        eps1 & eps2 = values below which there is\n                  no contribution to integral.\n    \n        d.f. <= dhaf:\tintegral is divided into ulen1 length intervals.  else\n        d.f. <= dquar:\tintegral is divided into ulen2 length intervals.  else\n        d.f. <= deigh:\tintegral is divided into ulen3 length intervals.  else\n        d.f. <= dlarg:\tintegral is divided into ulen4 length intervals.\n    \n        d.f. > dlarg:\tthe range is used to calculate integral.\n    \n        M_LN2 = log(2)\n    \n        xlegq = legendre 16-point nodes\n        alegq = legendre 16-point coefficients\n    \n        The coefficients and nodes for the legendre quadrature used in\n        qprob and wprob were calculated using the algorithms found in:\n    \n        Stroud, A. H. and Secrest, D.\n        Gaussian Quadrature Formulas.\n        Englewood Cliffs,\n        New Jersey:  Prentice-Hall, Inc, 1966.\n    \n        All values matched the tables (provided in same reference)\n        to 30 significant digits.\n    \n        f(x) = .5 + erf(x / sqrt(2)) / 2      for x > 0\n    \n        f(x) = erfc( -x / sqrt(2)) / 2\t      for x < 0\n    \n        where f(x) is standard normal c. d. f.\n    \n        if degrees of freedom large, approximate integral\n        with range distribution.\n     */\n  const nlegq = 16;\n  const ihalfq = 8;\n\n  /*  const double eps = 1.0; not used if = 1 */\n  const eps1 = -30.0;\n  const eps2 = 1.0e-14;\n  const dhaf = 100.0;\n  const dquar = 800.0;\n  const deigh = 5000.0;\n  const dlarg = 25000.0;\n  const ulen1 = 1.0;\n  const ulen2 = 0.5;\n  const ulen3 = 0.25;\n  const ulen4 = 0.125;\n  const xlegq = [\n    0.98940093499164993259615417345,\n    0.944575023073232576077988415535,\n    0.865631202387831743880467897712,\n    0.755404408355003033895101194847,\n    0.617876244402643748446671764049,\n    0.458016777657227386342419442984,\n    0.28160355077925891323046050146,\n    0.95012509837637440185319335425e-1\n  ];\n  const alegq = [\n    0.27152459411754094851780572456e-1,\n    0.622535239386478928628438369944e-1,\n    0.951585116824927848099251076022e-1,\n    0.124628971255533872052476282192,\n    0.149595988816576732081501730547,\n    0.16915651939500253818931207903,\n    0.182603415044923588866763667969,\n    0.189450610455068496285396723208\n  ];\n  //double\n  let ans: number;\n  let f2: number;\n  let f21: number;\n  let f2lf: number;\n  let ff4: number;\n  let otsum: number;\n  let qsqz: number;\n  let rotsum: number;\n  //let t1: number;\n  let twa1: number;\n  let ulen: number;\n  let wprb: number;\n  //let j: number;\n\n  if (ISNAN(q) || ISNAN(rr) || ISNAN(cc) || ISNAN(df)) {\n    return ML_ERR_return_NAN(printer_ptukey);\n  }\n\n  if (q <= 0) {\n    return R_DT_0(lower_tail, log_p);\n  }\n\n  /* df must be > 1 */\n  /* there must be at least two values */\n\n  if (df < 2 || rr < 1 || cc < 2) return ML_ERR_return_NAN(printer_ptukey);\n\n  if (!R_FINITE(q)) return R_DT_1(lower_tail, log_p);\n\n  if (df > dlarg) return R_DT_val(lower_tail, log_p, wprob(q, rr, cc));\n\n  /* calculate leading constant */\n\n  f2 = df * 0.5;\n  /* lgammafn(u) = log(gamma(u)) */\n  f2lf = f2 * log(df) - df * M_LN2 - lgammafn(f2);\n  f21 = f2 - 1.0;\n\n  /* integral is divided into unit, half-unit, quarter-unit, or */\n  /* eighth-unit length intervals depending on the value of the */\n  /* degrees of freedom. */\n\n  ff4 = df * 0.25;\n  if (df <= dhaf) ulen = ulen1;\n  else if (df <= dquar) ulen = ulen2;\n  else if (df <= deigh) ulen = ulen3;\n  else ulen = ulen4;\n\n  f2lf += log(ulen);\n\n  /* integrate over each subinterval */\n\n  ans = 0.0;\n  otsum = 0.0; // to let typscript linting know it is used , it is within the for loop\n  for (let i = 1; i <= 50; i++) {\n    otsum = 0.0;\n\n    /* legendre quadrature with order = nlegq */\n    /* nodes (stored in xlegq) are symmetric around zero. */\n\n    twa1 = (2 * i - 1) * ulen;\n\n    for (let jj = 1; jj <= nlegq; jj++) {\n      const j = ihalfq < jj ? jj - ihalfq - 1 : jj - 1;\n      const t1 =\n        ihalfq < jj\n          ? f2lf +\n            f21 * log(twa1 + xlegq[j] * ulen) -\n            (xlegq[j] * ulen + twa1) * ff4\n          : f2lf +\n            f21 * log(twa1 - xlegq[j] * ulen) +\n            (xlegq[j] * ulen - twa1) * ff4;\n\n      /* if exp(t1) < 9e-14, then doesn't contribute to integral */\n      if (t1 >= eps1) {\n        if (ihalfq < jj) {\n          qsqz = q * sqrt((xlegq[j] * ulen + twa1) * 0.5);\n        } else {\n          qsqz = q * sqrt((-(xlegq[j] * ulen) + twa1) * 0.5);\n        }\n\n        /* call wprob to find integral of range portion */\n\n        wprb = wprob(qsqz, rr, cc);\n        rotsum = wprb * alegq[j] * exp(t1);\n        otsum += rotsum;\n      }\n      /* end legendre integral for interval i */\n      /* L200: */\n    } //for\n\n    /* if integral for interval i < 1e-14, then stop.\n         * However, in order to avoid small area under left tail,\n         * at least  1 / ulen  intervals are calculated.\n         */\n    if (i * ulen >= 1.0 && otsum <= eps2) break;\n\n    /* end of interval i */\n    /* L330: */\n\n    ans += otsum;\n  } //for\n\n  if (otsum > eps2) {\n    /* not converged */\n    ML_ERROR(ME.ME_PRECISION, 'ptukey', printer_ptukey);\n  }\n  if (ans > 1) ans = 1;\n  return R_DT_val(lower_tail, log_p, ans);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/tukey/ptukey.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { bessel_i } from './besselI';\nimport { bessel_j } from './besselJ';\nimport { bessel_k } from './besselK';\nimport { bessel_y } from './besselY';\n\n\n\nexport const special = Object.freeze({\n    besselJ: bessel_j,\n    besselY: bessel_y,\n    besselK: bessel_k,\n    besselI: bessel_i\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { Inversion, IRNGNormal } from '../rng/normal';\nimport { dnbinom as _dnbinom, dnbinom_mu } from './dnbinom';\nimport { pnbinom as _pnbinom, pnbinom_mu } from './pnbinom';\nimport { qnbinom as _qnbinom, qnbinom_mu } from './qnbinom';\nimport { rnbinom as _rnbinom, rnbinom_mu } from './rnbinom';\n\nconst errText = Object.freeze([\n  'at most specify either argument \"mu\" or  \"prob\", but not both at the same time!',\n  'both arguments \"mu\" and \"prob\" are undefined'\n]);\n\n\n\nfunction select(\n  fs: 'd' | 'p' | 'r' | 'q',\n  mu?: number,\n  prob?: number\n) {\n  const selector = {\n    mu: {\n      d: dnbinom_mu,\n      p: pnbinom_mu,\n      q: qnbinom_mu,\n      r: rnbinom_mu\n    },\n    p: {\n      d: _dnbinom,\n      p: _pnbinom,\n      q: _qnbinom,\n      r: _rnbinom\n    }\n  };\n\n  if (prob !== undefined && mu !== undefined) {\n    throw new Error(errText[0]);\n  }\n  if (prob === undefined && mu === undefined) {\n    throw new Error(errText[1]);\n  }\n  const s = prob === undefined ? 'mu' : 'p';\n  return selector[s][fs] as any;\n}\n\nexport function NegativeBinomial(rng: IRNGNormal = new Inversion()) {\n  function dnbinom(\n    x: number | number[],\n    size: number,\n    prob?: number,\n    mu?: number,\n    giveLog =  false\n  ): number|number[] {\n    const val = mu || prob;\n    return select('d', mu, prob)(x, size, val, giveLog);\n  }\n\n  function pnbinom(\n    q: number | number[],\n    size: number,\n    prob?: number,\n    mu?: number,\n    lowerTail = true,\n    logP = false\n  ): number | number[] {\n    const val = mu || prob;\n    return select('p', mu, prob)(q, size, val, lowerTail, logP);\n  }\n\n  function qnbinom(\n    q: number | number[],\n    size: number,\n    prob?: number,\n    mu?: number,\n    lowerTail = true,\n    logP = false\n  ): number | number[] {\n    const val = mu || prob;\n    return select('q', mu, prob)(q, size, val, lowerTail, logP);\n  }\n\n  function rnbinom(\n    n: number,\n    size: number,\n    prob?: number,\n    mu?: number\n  ): number | number[] {\n    const val = mu || prob;\n    return select('r', mu, prob)(n, size, val, rng);\n  }\n\n  return {\n    dnbinom,\n    pnbinom,\n    qnbinom,\n    rnbinom\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial-negative/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { IRNG } from '../rng/irng';\nimport { MersenneTwister } from '../rng/mersenne-twister';\nimport { dbinom } from './dbinom';\nimport { pbinom } from './pbinom';\nimport { qbinom } from './qbinom';\nimport { rbinom } from './rbinom';\n\nexport function Binomial(rng: IRNG = new MersenneTwister()) {\n  return {\n    dbinom,\n    pbinom,\n    qbinom,\n    rbinom: (N: number, nin: number, pp: number) => rbinom(N, nin, pp, rng)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { dcauchy } from './dcauchy';\nimport { pcauchy } from './pcauchy';\nimport { qcauchy } from './qcauchy';\nimport { rcauchy } from './rcauchy';\n\nimport { MersenneTwister } from '../rng/mersenne-twister';\n\nexport function Cauchy(rng = new MersenneTwister(0)) {\n  return {\n    rcauchy: (n: number, location = 0, scale = 1) =>\n      rcauchy(n, location, scale, rng),\n    dcauchy,\n    pcauchy,\n    qcauchy\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/cauchy/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { chebyshev_eval, chebyshev_init } from './chebyshev';\n\nexport const ChebyshevSeries = {\n    chebyshev_eval,\n    chebyshev_init\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chebyshev/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n//\nimport { Inversion, IRNGNormal } from '../rng/normal';\nimport { dchisq as _dchisq } from './dchisq';\nimport { dnchisq as _dnchisq } from './dnchisq';\nimport { pchisq as _pchisq } from './pchisq';\nimport { pnchisq as _pnchisq } from './pnchisq';\nimport { qchisq as _qchisq } from './qchisq';\nimport { qnchisq as _qnchisq } from './qnchisq';\nimport { rchisq as _rchisq } from './rchisq';\nimport { rnchisq as _rnchisq } from './rnchisq';\n\nexport function ChiSquared(rng: IRNGNormal = new Inversion()) {\n  function rchisq(n: number = 1, df: number, ncp?: number) {\n    return ncp === undefined\n      ? _rchisq(n, df, rng)\n      : _rnchisq(n, df, ncp, rng);\n  }\n\n  function qchisq(\n    p: number | number[],\n    df: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ) {\n    return ncp === undefined\n      ? _qchisq(p, df, lowerTail, logP)\n      : _qnchisq(p, df, ncp, lowerTail, logP);\n  }\n\n  function pchisq(\n    p: number | number[],\n    df: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ) {\n    return ncp === undefined\n      ? _pchisq(p, df, lowerTail, logP)\n      : _pnchisq(p, df, ncp, lowerTail, logP);\n  }\n\n  function dchisq(\n    x: number | number[],\n    df: number,\n    ncp?: number,\n    log: boolean = false\n  ) {\n    return ncp === undefined ? _dchisq(x, df, log) : _dnchisq(x, df, ncp, log);\n  }\n\n  return {\n      dchisq,\n      pchisq,\n      qchisq,\n      rchisq\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/chi-2/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { choose, lchoose } from './choose';\n\nexport const special = {\n  choose,\n  lchoose\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/common/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { dexp as _dexp } from './dexp';\nimport { pexp as _pexp } from './pexp';\nimport { qexp as _qexp } from './qexp';\nimport { rexp as _rexp } from './rexp';\n\nimport { IRNG, rng } from '../rng';\nconst { MersenneTwister } = rng;\n\nexport function Exponential(rng: IRNG = new MersenneTwister(0)) {\n  /*\n  NOTE: scale = 1/rate, the R code looks like\n      > rexp\n      function (n, rate = 1) \n        .Call(C_rexp, n, 1/rate)\n        <bytecode: 0x0000000005f90fd0>\n        <environment: namespace:stats>\n  */\n  return {\n    dexp: (x: number | number[], rate = 1, asLog = false) =>\n      _dexp(x, 1 / rate, asLog),\n\n    pexp: (q: number | number[], rate = 1, lowerTail = true, logP = false) =>\n      _pexp(q, 1 / rate, lowerTail, logP),\n\n    qexp: (p: number | number[], rate = 1, lowerTail = true, logP = false) =>\n      _qexp(p, 1 / rate, lowerTail, logP),\n\n    rexp: (n: number, rate = 1) => _rexp(n, 1 / rate, rng)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n//needed for rf\nimport { rchisq } from '../chi-2/rchisq';\nimport { rnchisq } from '../chi-2/rnchisq';\nimport { seq } from '../r-func';\nimport { arrayrify, multiplexer, possibleScalar } from '../r-func';\nimport { Inversion, IRNGNormal } from '../rng/normal';\n//\nimport { df as _df } from './df';\nimport { dnf } from './dnf';\n//\nimport { pf as _pf } from './pf';\nimport { pnf } from './pnf';\n//\nimport { qf as _qf } from './qf';\nimport { qnf } from './qnf';\nimport { rf as _rf } from './rf';\n\nconst sequence = seq()();\n\nexport function FDist(rng: IRNGNormal = new Inversion()) {\n  function df(\n    x: number | number[],\n    df1: number,\n    df2: number,\n    ncp?: number,\n    log: boolean = false\n  ) {\n    /*\n    function (x, df1, df2, ncp, log = FALSE) \n      {\n    if (missing(ncp)) \n        .Call(C_df, x, df1, df2, log)\n    else .Call(C_dnf, x, df1, df2, ncp, log)\n      }\n    */\n    if (ncp === undefined) {\n      return _df(x, df1, df2, log);\n    }\n    return dnf(x, df1, df2, ncp, log);\n  }\n  function pf(\n    q: number[] | number,\n    df1: number,\n    df2: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP = false\n  ) {\n    /*  if (missing(ncp)) \n        .Call(C_pf, q, df1, df2, lower.tail, log.p)\n    else .Call(C_pnf, q, df1, df2, ncp, lower.tail, log.p)\n*/\n    if (ncp === undefined) {\n      return _pf(q, df1, df2, lowerTail, logP);\n    }\n    return pnf(q, df1, df2, ncp, lowerTail, logP);\n  }\n\n  function qf(\n    p: number | number[],\n    df1: number,\n    df2: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ) {\n    if (ncp === undefined) {\n      return _qf(p, df1, df2, lowerTail, logP);\n    }\n    return qnf(p, df1, df2, ncp, lowerTail, logP);\n  }\n\n  function rf(n: number, df1: number, df2: number, ncp?: number) {\n    /* function (n, df1, df2, ncp) \n{\n    if (missing(ncp)) \n        .Call(C_rf, n, df1, df2)\n    else if (is.na(ncp)) {\n        warning(\"NAs produced\")\n        rep(NaN, n)\n    }\n    else (\n      rchisq(n, df1, ncp = ncp)/df1\n    )\n    /\n    ( rchisq(n, df2) \n    / df2\n    );\n}\n*/\n    if (ncp === undefined) {\n      return _rf(n, df1, df2, rng);\n    }\n\n    if (Number.isNaN(ncp)) {\n      return possibleScalar(sequence(n).fill(NaN));\n    }\n\n    const div = arrayrify((a: number, b: number) => a / b);\n\n    const numerator = div(rnchisq(n, df1, ncp, rng), df1);\n    const denominator = div(rchisq(n, df2, rng), df2);\n\n    return multiplexer(numerator, denominator)((x1, d) => x1 / d);\n  }\n\n  return {\n    df,\n    pf,\n    qf,\n    rf\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { Inversion, IRNGNormal } from '../rng/normal';\n\nimport { dgeom } from './dgeom';\nimport { pgeom } from './pgeom';\nimport { qgeom } from './qgeom';\nimport { rgeom as _rgeom } from './rgeom';\n\nexport function Geometric(rng: IRNGNormal = new Inversion()) {\n  return {\n    dgeom,\n    pgeom,\n    qgeom,\n    rgeom: (N: number, prob: number) => _rgeom(N, prob, rng)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/geometric/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { dhyper } from './dhyper';\nimport { phyper } from './phyper';\nimport { qhyper } from './qhyper';\nimport { rhyper as _rhyper } from './rhyper';\n\nimport { IRNG } from '../rng/irng';\nimport { MersenneTwister } from '../rng/mersenne-twister';\n\n\nexport function HyperGeometric(rng: IRNG = new MersenneTwister()) {\n  //rhyper(nn, m, n, k)\n  function rhyper(N: number, nn1in: number, nn2in: number, kkin: number) {\n    return _rhyper(N, nn1in, nn2in, kkin, rng);\n  }\n\n  return {\n    dhyper,\n    phyper,\n    qhyper,\n    rhyper\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/hypergeometric/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { IRNG } from '../rng/irng';\nimport { MersenneTwister } from '../rng/mersenne-twister';\nimport { dlogis } from './dlogis';\nimport { plogis } from './plogis';\nimport { qlogis } from './qlogis';\nimport { rlogis as _rlogis } from './rlogis';\n\nexport function Logistic(rng: IRNG = new MersenneTwister(0)) {\n  //\n  function rlogis(N: number, location: number = 0, scale: number = 1) {\n    return _rlogis(N, location, scale, rng);\n  }\n\n  return {\n    dlogis,\n    plogis,\n    qlogis,\n    rlogis\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/logis/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { dlnorm } from './dlnorm';\nimport { plnorm } from './plnorm';\nimport { qlnorm } from './qlnorm';\nimport { rlnorm } from './rlnorm';\n\nimport { Inversion, IRNGNormal } from '../rng/normal';\n\nexport function LogNormal(rng: IRNGNormal = new Inversion()) {\n  return {\n    dlnorm,\n    plnorm,\n    qlnorm,\n    rlnorm: (n: number, meanlog: number = 0, sdlog: number = 1): number | number[] =>\n      rlnorm(n, meanlog, sdlog, rng)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/lognormal/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { dmultinom, IdmultinomOptions } from './dmultinom';\nimport { rmultinom as _rmultinom } from './rmultinom';\n//FIXME: convert dmultinom from pure R to ts equivalent\n\nimport { IRNG } from '../rng/irng';\nimport { MersenneTwister } from '../rng/mersenne-twister';\n\nexport { IdmultinomOptions };\n\nexport function Multinomial(rng: IRNG = new MersenneTwister(0)) {\n  function rmultinom(n: number, size: number, prob: number | number[]) {\n    return _rmultinom(n, size, prob, rng);\n  }\n  return {\n    rmultinom,\n    dmultinom\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/multinom/index.ts","\n'use strict';\nimport { dnorm4 } from './dnorm';\nimport { pnorm5 } from './pnorm';\nimport { qnorm as _qnorm } from './qnorm';\nimport { rnorm as _rnorm } from './rnorm';\n\nimport { IRNGNormal, rng as _rng } from '../rng';\nconst { normal: { Inversion } } = _rng;\n\n\n/*export interface INormal {\n  rnorm: (n: number, mu: number, sigma: number) => number | number[];\n  dnorm: <T>(x: T, mu: number, sigma: number, giveLog: boolean) => T;\n  pnorm: <T>(\n    x: T,\n    mu: number,\n    sigma: number,\n    lowerTail: boolean,\n    logP: boolean\n  ) => T;\n  qnorm: <T>(\n    p: T,\n    mu: number,\n    sigma: number,\n    lower_tail: boolean,\n    log_p: boolean\n  ) => T;\n  rng: IRNGNormal;\n}*/\n\nexport function Normal(prng: IRNGNormal = new Inversion()) {\n\n  return {\n    rnorm: (n: number = 1, mu: number = 0, sigma = 1) =>\n      _rnorm(n, mu, sigma, prng)\n    ,\n    dnorm: dnorm4,\n    pnorm: pnorm5,\n    qnorm: _qnorm,\n    rng: prng,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/normal/index.ts","import { dpois } from './dpois';\nimport { ppois } from './ppois';\nimport { qpois } from './qpois';\nimport { rpois } from './rpois';\n\nimport { Inversion, IRNGNormal } from '../rng/normal';\n\n\nexport function Poisson(rng: IRNGNormal = new Inversion()) {\n  return {\n    dpois,\n    ppois,\n    qpois,\n    rpois: (n: number, lambda: number) => rpois(n, lambda, rng)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/poisson/index.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017 --initial\n *  Jan 9, 2018 tested and documented  \n * \n * ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1999-2014  The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double dsignrank(double x, double n, int give_log)\n *    double psignrank(double x, double n, int lower_tail, int log_p)\n *    double qsignrank(double x, double n, int lower_tail, int log_p)\n *    double rsignrank(double n)\n *\n *  DESCRIPTION\n *\n *    dsignrank\t   The density of the Wilcoxon Signed Rank distribution.\n *    psignrank\t   The distribution function of the Wilcoxon Signed Rank\n *\t\t   distribution.\n *    qsignrank\t   The quantile function of the Wilcoxon Signed Rank\n *\t\t   distribution.\n *    rsignrank\t   Random variates from the Wilcoxon Signed Rank\n *\t\t   distribution.\n */\n\nimport { IRNG, rng } from '../rng';\nimport { dsignrank } from './dsign';\nimport { psignrank } from './psign';\nimport { qsignrank } from './qsign';\nimport { rsignrank as _rsignrank } from './rsign';\n\nconst { MersenneTwister } = rng;\n\nexport function SignRank(rng: IRNG = new MersenneTwister(0)) {\n\n  function rsignrank(N: number, n: number) {\n    return _rsignrank(N, n, rng);\n  }\n\n  return {\n    dsignrank,\n    psignrank,\n    qsignrank,\n    rsignrank\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/index.ts","//\nimport { rchisq } from '../chi-2/rchisq';\nimport { rnorm } from '../normal/rnorm';\nimport { arrayrify, flatten } from '../r-func';\nimport { IRNGNormal } from '../rng/normal/inormal-rng';\nimport { Inversion } from '../rng/normal/inversion';\n//\nimport { dnt } from './dnt';\nimport { dt as _dt } from './dt';\nimport { pnt } from './pnt';\nimport { pt as _pt } from './pt';\nimport { qnt } from './qnt';\nimport { qt as _qt } from './qt';\n//\nimport { rt as _rt } from './rt';\n\n\nexport function StudentT(rng: IRNGNormal = new Inversion()) {\n  function dt(x: number | number[], df: number, ncp?: number, asLog = false) {\n    if (ncp === undefined) {\n      return _dt(x, df, asLog);\n    }\n    return dnt(x, df, ncp, asLog);\n  }\n\n  function pt(\n    q: number | number[],\n    df: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP = false\n  ) {\n    if (ncp === undefined) {\n      return _pt(q, df, lowerTail, logP);\n    }\n\n    return pnt(q, df, ncp, lowerTail, logP);\n  }\n\n  function qt(\n    pp: number | number[],\n    df: number,\n    ncp?: number,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ) {\n    if (ncp === undefined) {\n      return _qt(pp, df, lowerTail, logP);\n    }\n    return qnt(pp, df, ncp, lowerTail, logP);\n  }\n\n  function rt(n: number, df: number, ncp?: number) {\n    if (ncp === undefined) {\n      return _rt(n, df, rng);\n    } else if (Number.isNaN(ncp)) {\n      return new Array(n).fill(NaN);\n    } else {\n      // array devision and sqrt\n      const div = arrayrify((a: number, b: number) => a / b);\n      const sqrt = arrayrify(Math.sqrt);\n\n      const norm = flatten(rnorm(n, ncp, 1, rng)); // bleed this first from rng\n      const chisq = flatten(\n        sqrt(\n          div(\n            rchisq(n, df, rng), \n            df\n          )\n        )\n      );\n\n      const result = norm.map((n, i) => n / chisq[i]);\n      return result.length === 1 ? result[0] : result;\n    }\n  }\n\n  return {\n    dt,\n    pt,\n    qt,\n    rt\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/index.ts","\nimport { ptukey as _pt } from './ptukey';\nimport { qtukey as _qt } from './qtukey';\n\n\nexport function Tukey() {\n\n  /*\n  > ptukey\n  function (q, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE)\n  .Call(C_ptukey, q, nranges, nmeans, df, lower.tail, log.p)\n  <bytecode: 0x000000001cde3048>\n  <environment: namespace:stats>\n  \n  double ptukey(\n    double q,  // q\n    double rr, // nranges\n    double cc, // nmeans\n    double df, // df\n    int lower_tail, // lowertail\n    int log_p       // logp\n  */\n\n  function ptukey<T>(\n    q: T,\n    nmeans: number,\n    df: number,\n    nranges: number = 1,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ): T {\n    return _pt(q, nranges, nmeans, df, lowerTail, logP);\n  }\n  //\n  /*\n  /**\n> qtukey\nfunction (p, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE)\n.Call(C_qtukey, p, nranges, nmeans, df, lower.tail, log.p)\n<bytecode: 0x000000001cde4a80>\n<environment: namespace:stats>\n  */\n  function qtukey<T>(\n    q: T,\n    nmeans: number,\n    df: number,\n    nranges: number = 1,\n    lowerTail: boolean = true,\n    logP: boolean = false\n  ): T {\n    return _qt(q, nranges, nmeans, df, lowerTail, logP);\n  }\n\n  return {\n    ptukey,\n    qtukey\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/tukey/index.ts","'use strict';\n\nimport { dunif } from './dunif';\nimport { punif } from './punif';\nimport { qunif } from './qunif';\nimport { runif } from './runif';\n\nimport { IRNG, rng } from '../rng';\nconst { MersenneTwister } = rng;\n\nexport function Uniform(rng: IRNG = new MersenneTwister(0)) {\n  return {\n    dunif,\n    punif,\n    qunif,\n    rng, // class of the rng\n    runif: (n: number = 1, min: number = 0, max: number = 1) =>\n      runif(n, min, max, rng)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/uniform/index.ts","import { dweibull } from './dweibull';\nimport { pweibull } from './pweibull';\nimport { qweibull } from './qweibull';\nimport { rweibull as _rweibull } from './rweibull';\n\nimport { IRNG, rng as _rng } from '../rng';\n\nexport function Weibull(rng: IRNG = new _rng.MersenneTwister(0)) {\n  function rweibull(n: number, shape: number, scale: number = 1) {\n    return _rweibull(n, shape, scale, rng);\n  }\n\n  return {\n    dweibull,\n    pweibull,\n    qweibull,\n    rweibull\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/weibull/index.ts","import { dwilcox } from './dwilcox';\nimport { pwilcox } from './pwilcox';\nimport { qwilcox } from './qwilcox';\nimport { rwilcox as _rwilc }  from './rwilcox';\n//import { WilcoxonCache } from './WilcoxonCache';\n\nimport { IRNG } from '../rng';\nimport { MersenneTwister } from '../rng/mersenne-twister';\n\n\nexport function Wilcoxon(rng: IRNG = new MersenneTwister(0)){\n    function rwilcox(nn: number, m: number, n: number){\n        return _rwilc(nn, m, n, rng);\n    }\n    return {\n        dwilcox,\n        pwilcox,\n        qwilcox,\n        rwilcox\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { Rf_gamma_cody } from '../../gamma/gamma_cody';\nimport { enmten_BESS, ensig_BESS, enten_BESS, exparg_BESS, nsig_BESS, rtnsig_BESS, xlrg_BESS_IJ } from '../bessel-constants';\nimport { IBesselRC } from '../IBesselRC';\n\nconst { sqrt, pow, min, max: fmax, exp, trunc } = Math;\nconst { POSITIVE_INFINITY: ML_POSINF } = Number;\n\nconst printer = debug('I_bessel');\n\nexport function I_bessel(\n    x: number,\n    alpha: number,\n    nb: number,\n    ize: number\n): IBesselRC {\n    /* -------------------------------------------------------------------\n \n     This routine calculates Bessel functions I_(N+ALPHA) (X)\n     for non-negative argument X, and non-negative order N+ALPHA,\n     with or without exponential scaling.\n \n \n     Explanation of variables in the calling sequence\n \n     X     - Non-negative argument for which\n         I's or exponentially scaled I's (I*EXP(-X))\n         are to be calculated.\tIf I's are to be calculated,\n         X must be less than exparg_BESS (IZE=1) or xlrg_BESS_IJ (IZE=2),\n         (see bessel.h).\n     ALPHA - Fractional part of order for which\n         I's or exponentially scaled I's (I*EXP(-X)) are\n         to be calculated.  0 <= ALPHA < 1.0.\n     NB    - Number of functions to be calculated, NB > 0.\n         The first function calculated is of order ALPHA, and the\n         last is of order (NB - 1 + ALPHA).\n     IZE   - Type.\tIZE = 1 if unscaled I's are to be calculated,\n                = 2 if exponentially scaled I's are to be calculated.\n     BI    - Output vector of length NB.\tIf the routine\n         terminates normally (NCALC=NB), the vector BI contains the\n         functions I(ALPHA,X) through I(NB-1+ALPHA,X), or the\n         corresponding exponentially scaled functions.\n     NCALC - Output variable indicating possible errors.\n         Before using the vector BI, the user should check that\n         NCALC=NB, i.e., all orders have been calculated to\n         the desired accuracy.\tSee error returns below.\n \n \n     *******************************************************************\n     *******************************************************************\n \n     Error returns\n \n      In case of an error,\tNCALC != NB, and not all I's are\n      calculated to the desired accuracy.\n \n      NCALC < 0:  An argument is out of range. For example,\n         NB <= 0, IZE is not 1 or 2, or IZE=1 and ABS(X) >= EXPARG_BESS.\n         In this case, the BI-vector is not calculated, and NCALC is\n         set to MIN0(NB,0)-1 so that NCALC != NB.\n \n      NB > NCALC > 0: Not all requested function values could\n         be calculated accurately.\tThis usually occurs because NB is\n         much larger than ABS(X).  In this case, BI[N] is calculated\n         to the desired accuracy for N <= NCALC, but precision\n         is lost for NCALC < N <= NB.  If BI[N] does not vanish\n         for N > NCALC (because it is too small to be represented),\n         and BI[N]/BI[NCALC] = 10**(-K), then only the first NSIG-K\n         significant figures of BI[N] can be trusted.\n \n \n     Intrinsic functions required are:\n \n         DBLE, EXP, gamma_cody, INT, MAX, MIN, REAL, SQRT\n \n \n     Acknowledgement\n \n      This program is based on a program written by David J.\n      Sookne (2) that computes values of the Bessel functions J or\n      I of float argument and long order.  Modifications include\n      the restriction of the computation to the I Bessel function\n      of non-negative float argument, the extension of the computation\n      to arbitrary positive order, the inclusion of optional\n      exponential scaling, and the elimination of most underflow.\n      An earlier version was published in (3).\n \n     References: \"A Note on Backward Recurrence Algorithms,\" Olver,\n              F. W. J., and Sookne, D. J., Math. Comp. 26, 1972,\n              pp 941-947.\n \n             \"Bessel Functions of Real Argument and Integer Order,\"\n              Sookne, D. J., NBS Jour. of Res. B. 77B, 1973, pp\n              125-132.\n \n             \"ALGORITHM 597, Sequence of Modified Bessel Functions\n              of the First Kind,\" Cody, W. J., Trans. Math. Soft.,\n              1983, pp. 242-245.\n \n      Latest modification: May 30, 1989\n \n      Modified by: W. J. Cody and L. Stoltz\n               Applied Mathematics Division\n               Argonne National Laboratory\n               Argonne, IL  60439\n    */\n\n    /*-------------------------------------------------------------------\n      Mathematical constants\n      -------------------------------------------------------------------*/\n    const const__ = 1.585;\n\n    /* Local variables */\n    //int\n    let nend;\n    let intx;\n    let nbmx;\n    let k;\n    let l;\n    let n;\n    let nstart;\n\n    //double\n    let pold;\n    let test;\n    let p;\n    let em;\n    let en;\n    let empal;\n    let emp2al;\n    let halfx;\n    let aa;\n    let bb;\n    let cc;\n    let psave;\n    let plast;\n    let tover;\n    let psavel;\n    let sum;\n    let nu;\n    let twonu;\n\n    //int\n    let ncalc = nb;\n    let bi2 = new Array<number>(nb).fill(0);\n    /*Parameter adjustments */\n    //--bi;\n    nu = alpha;\n    twonu = nu + nu;\n\n    /*-------------------------------------------------------------------\n      Check for X, NB, OR IZE out of range.\n      ------------------------------------------------------------------- */\n    if (nb > 0 && x >= 0. && (0. <= nu && nu < 1.) &&\n        (1 <= ize && ize <= 2)) {\n\n        ncalc = nb;\n        if (ize === 1 && x > exparg_BESS) {\n            //for (k = 1; k <= nb; k++)\n            //\tbi2[k-1] = ML_POSINF; /* the limit *is* = Inf */\n            return { x: ML_POSINF, nb, ncalc };\n        }\n        if (ize === 2 && x > xlrg_BESS_IJ) {\n            //for (k = 1; k <= nb; k++)\n            //\tbi2[k-1] = 0.; /* The limit exp(-x) * I_nu(x) --> 0 : */\n            return { x: 0., nb, ncalc };\n        }\n        intx = trunc(x); /* fine, since x <= xlrg_BESS_IJ <<< LONG_MAX */\n        if (x >= rtnsig_BESS) { /* \"non-small\" x ( >= 1e-4 ) */\n            /* -------------------------------------------------------------------\n               Initialize the forward sweep, the P-sequence of Olver\n               ------------------------------------------------------------------- */\n            nbmx = nb - intx;\n            n = intx + 1;\n            en = (n + n) + twonu;\n            plast = 1.;\n            p = en / x;\n            /* ------------------------------------------------\n               Calculate general significance test\n               ------------------------------------------------ */\n            test = ensig_BESS + ensig_BESS;\n            if (intx * 2 > nsig_BESS * 5) {\n                test = sqrt(test * p);\n            }\n            else {\n                test /= pow(const__, intx);\n            }\n            let gotoL120: boolean = false;\n            if (nbmx >= 3) {\n                /* --------------------------------------------------\n                   Calculate P-sequence until N = NB-1\n                   Check for possible overflow.\n                   ------------------------------------------------ */\n                tover = enten_BESS / ensig_BESS;\n                nstart = intx + 2;\n                nend = nb - 1;\n                for (k = nstart; k <= nend; ++k) {\n                    n = k;\n                    en += 2.;\n                    pold = plast;\n                    plast = p;\n                    p = en * plast / x + pold;\n                    if (p > tover) {\n                        /* ------------------------------------------------\n                           To avoid overflow, divide P-sequence by TOVER.\n                           Calculate P-sequence until ABS(P) > 1.\n                           ---------------------------------------------- */\n                        tover = enten_BESS;\n                        p /= tover;\n                        plast /= tover;\n                        psave = p;\n                        psavel = plast;\n                        nstart = n + 1;\n                        do {\n                            ++n;\n                            en += 2.;\n                            pold = plast;\n                            plast = p;\n                            p = en * plast / x + pold;\n                        } while (p <= 1.);\n\n                        bb = en / x;\n                        /* ------------------------------------------------\n                           Calculate backward test, and find NCALC,\n                           the highest N such that the test is passed.\n                           ------------------------------------------------ */\n                        test = pold * plast / ensig_BESS;\n                        test *= .5 - .5 / (bb * bb);\n                        p = plast * tover;\n                        --n;\n                        en -= 2.;\n                        nend = min(nb, n);\n                        for (l = nstart; l <= nend; ++l) {\n                            ncalc = l - 1;\n                            pold = psavel;\n                            psavel = psave;\n                            psave = en * psavel / x + pold;\n                            if (psave * psavel > test) {\n                                break;\n                            }\n                            ncalc = nend;\n                        }\n                        gotoL120 = true;\n                        break;\n                    }//if\n                }//for\n                if (gotoL120 === false) {\n                    n = nend;\n                    en = (n + n) + twonu;\n                    /*---------------------------------------------------\n                      Calculate special significance test for NBMX > 2.\n                      --------------------------------------------------- */\n                    test = fmax(test, sqrt(plast * ensig_BESS) * sqrt(p + p));\n                }\n            }//if\n            /* --------------------------------------------------------\n               Calculate P-sequence until significance test passed.\n               -------------------------------------------------------- */\n            if (gotoL120 === false) {\n                do {\n                    ++n;\n                    en += 2.;\n                    pold = plast;\n                    plast = p;\n                    p = en * plast / x + pold;\n                } while (p < test);\n            }\n\n            //L120:\n            /* -------------------------------------------------------------------\n             Initialize the backward recursion and the normalization sum.\n             ------------------------------------------------------------------- */\n            ++n;\n            en += 2.;\n            bb = 0.;\n            aa = 1. / p;\n            em = n - 1.;\n            empal = em + nu;\n            emp2al = em - 1. + twonu;\n            sum = aa * empal * emp2al / em;\n            nend = n - nb;\n            let gotoL230 = false;\n            //let gotoL220 = false; //for doc purpose, because L220 follows the for loop immediatly\n            //for loop used to skip over rest of code and simualte \"goto\"\n            for (let cnt = 0; cnt < 1; cnt++) {\n                if (nend < 0) {\n                    /* -----------------------------------------------------\n                       N < NB, so store BI[N] and set higher orders to 0..\n                       ----------------------------------------------------- */\n                    bi2[n - 1] = aa;\n                    nend = -nend;\n                    for (l = 1; l <= nend; ++l) {\n                        bi2[n + l - 1] = 0.;\n                    }\n                }\n                else {\n                    if (nend > 0) {\n                        /* -----------------------------------------------------\n                           Recur backward via difference equation,\n                           calculating (but not storing) BI[N], until N = NB.\n                           --------------------------------------------------- */\n\n                        for (l = 1; l <= nend; ++l) {\n                            --n;\n                            en -= 2.;\n                            cc = bb;\n                            bb = aa;\n                            /* for x ~= 1500,  sum would overflow to 'inf' here,\n                             * and the final bi[] /= sum would give 0 wrongly;\n                             * RE-normalize (aa, sum) here -- no need to undo */\n                            if (nend > 100 && aa > 1e200) {\n                                /* multiply by  2^-900 = 1.18e-271 */\n                                let pow05_to_900 = pow(2, -900);\n                                cc = cc * pow05_to_900;\n                                bb = bb * pow05_to_900;\n                                sum = sum * pow05_to_900;\n                            }\n                            aa = en * bb / x + cc;\n                            em -= 1.;\n                            emp2al -= 1.;\n                            if (n === 1) {\n                                break;\n                            }\n                            if (n === 2) {\n                                emp2al = 1.;\n                            }\n                            empal -= 1.;\n                            sum = (sum + aa * empal) * emp2al / em;\n                        }\n                    }\n                    /* ---------------------------------------------------\n                       Store BI[NB]\n                       --------------------------------------------------- */\n                    bi2[n - 1] = aa;\n                    if (nb <= 1) {\n                        sum = sum + sum + aa;\n                        gotoL230 = true;\n                        break; //for loop used to skip over rest of code and simualte \"goto\"\n                    }\n                    /* -------------------------------------------------\n                       Calculate and Store BI[NB-1]\n                       ------------------------------------------------- */\n                    --n;\n                    en -= 2.;\n                    bi2[n - 1] = en * aa / x + bb;\n                    if (n === 1) {\n                        //gotoL220 = true;\n                        break; //for loop used to skip over rest of code and simualte \"goto\"\n                    }\n                    em -= 1.;\n                    if (n === 2)\n                        emp2al = 1.;\n                    else\n                        emp2al -= 1.;\n\n                    empal -= 1.;\n                    sum = (sum + bi2[n - 1] * empal) * emp2al / em;\n                }// if else\n                nend = n - 2;\n                if (nend > 0) {\n                    /* --------------------------------------------\n                       Calculate via difference equation\n                       and store BI[N], until N = 2.\n                       ------------------------------------------ */\n                    for (l = 1; l <= nend; ++l) {\n                        --n;\n                        en -= 2.;\n                        bi2[n - 1] = en * bi2[n] / x + bi2[n + 1];\n                        em -= 1.;\n                        if (n === 2)\n                            emp2al = 1.;\n                        else\n                            emp2al -= 1.;\n                        empal -= 1.;\n                        sum = (sum + bi2[n - 1] * empal) * emp2al / em;\n                    }//for\n                }//if\n                /* ----------------------------------------------\n                   Calculate BI[1]\n                   -------------------------------------------- */\n                bi2[0] = 2. * empal * bi2[1] / x + bi2[2];\n            }//for loop for \"goto\" simulation\n\n            //L220:\n            if (gotoL230 === false) {\n                sum = sum + sum + bi2[0];\n            }\n\n            //L230:\n            /* ---------------------------------------------------------\n               Normalize.  Divide all BI[N] by sum.\n               --------------------------------------------------------- */\n            if (nu !== 0.)\n                sum *= (Rf_gamma_cody(1. + nu) * pow(x * .5, -nu));\n            if (ize === 1)\n                sum *= exp(-(x));\n            aa = enmten_BESS;\n            if (sum > 1.)\n                aa *= sum;\n            for (n = 1; n <= nb; ++n) {\n                if (bi2[n - 1] < aa)\n                    bi2[n - 1] = 0.;\n                else\n                    bi2[n - 1] /= sum;\n            }\n            const rc = { x: bi2[nb - 1], nb, ncalc };\n            printer('normalize, devide all  Bi[N] by sum, result:%o', rc);\n            return rc;\n        }\n        else { /* small x  < 1e-4 */\n            /* -----------------------------------------------------------\n               Two-term ascending series for small X.\n               -----------------------------------------------------------*/\n            aa = 1.;\n            empal = 1. + nu;\n\n            /* No need to check for underflow */\n            halfx = .5 * x;\n\n            if (nu !== 0.)\n                aa = pow(halfx, nu) / Rf_gamma_cody(empal);\n            if (ize === 2)\n                aa *= exp(-(x));\n            bb = halfx * halfx;\n            bi2[0] = aa + aa * bb / empal;\n            if (x !== 0. && bi2[0] === 0.)\n                ncalc = 0;\n            if (nb > 1) {\n                if (x === 0.) {\n                    for (n = 2; n <= nb; ++n)\n                        bi2[n - 1] = 0.;\n                }\n                else {\n                    /* -------------------------------------------------\n                       Calculate higher-order functions.\n                       ------------------------------------------------- */\n                    cc = halfx;\n                    tover = (enmten_BESS + enmten_BESS) / x;\n                    if (bb !== 0.)\n                        tover = enmten_BESS / bb;\n                    for (n = 2; n <= nb; ++n) {\n                        aa /= empal;\n                        empal += 1.;\n                        aa *= cc;\n                        if (aa <= tover * empal)\n                            bi2[n - 1] = aa = 0.;\n                        else\n                            bi2[n - 1] = aa + aa * bb / empal;\n                        if (bi2[n - 1] === 0. && ncalc > n)\n                            ncalc = n - 1;\n                    }\n                }\n            }\n        }\n    }\n    else { /* argument out of range */\n        ncalc = min(nb, 0) - 1;\n    }\n    const rc = { x: bi2[nb - 1], nb, ncalc };\n    printer('drop off, result:%o', rc);\n    return rc;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselI/IBessel.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ME, ML_ERROR } from '../../common/_general';\nimport { multiplexer } from '../../r-func';\nimport { sinpi } from '../../trigonometry/sinpi';\nimport { boolVector, numVector } from '../../types';\nimport { internal_bessel_k } from '../besselK';\nimport { I_bessel } from './IBessel';\n\n\n\nconst { isNaN: ISNAN } = Number;\nconst { exp, trunc, floor, PI: M_PI } = Math;\n\nconst printer = debug('bessel_i');\n\nexport function bessel_i(_x: numVector, _alpha: numVector, _expo: boolVector): numVector {\n    return multiplexer(_x, _alpha, _expo)((x, alpha, expo) => internal_bessel_i(x, alpha, expo));\n}\n\n/* .Internal(besselI(*)) : */\nexport function internal_bessel_i(x: number, alpha: number, expo: boolean = false): number {\n\n    //int\n    let nb;\n    let ize;\n\n    //double \n    let na;\n\n    /* NaNs propagated correctly */\n    if (ISNAN(x) || ISNAN(alpha)) return x + alpha;\n    if (x < 0) {\n        ML_ERROR(ME.ME_RANGE, 'bessel_i', printer);\n        return NaN;\n    }\n    ize = expo ? 2 : 1;\n    na = floor(alpha);\n    if (alpha < 0) {\n        /* Using Abramowitz & Stegun  9.6.2 & 9.6.6\n         * this may not be quite optimal (CPU and accuracy wise) */\n        return (internal_bessel_i(x, -alpha, expo) +\n            ((alpha === na) ? /* sin(pi * alpha) = 0 */ 0 :\n                internal_bessel_k(x, -alpha, expo) *\n                ((ize === 1) ? 2. : 2. * exp(-2. * x)) / M_PI * sinpi(-alpha)));\n    }\n    nb = 1 + trunc(na); /* nb-1 <= alpha < nb */\n    alpha -= (nb - 1);\n\n\n\n    const rc = I_bessel(x, alpha, nb, ize);\n    if (rc.ncalc !== rc.nb) {/* error input */\n        if (rc.ncalc < 0)\n            printer('bessel_i(%d): ncalc (=%d) != nb (=%d); alpha=%d. Arg. out of range?',\n                x, rc.ncalc, rc.nb, alpha);\n        else\n            printer('bessel_i(%d,nu=%d): precision lost in result\\n',\n                rc.x, alpha + rc.nb - 1);\n    }\n    x = rc.x; // bi[nb - 1];\n\n    return x;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselI/index.ts","\n/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ME, ML_ERROR } from '../../common/_general';\nimport { Rf_gamma_cody } from '../../gamma/gamma_cody';\nimport {\n    enmten_BESS,\n    ensig_BESS,\n    enten_BESS,\n    xlrg_BESS_IJ\n} from '../bessel-constants';\nimport { IBesselRC } from '../IBesselRC';\n\nconst { min, trunc, pow, sqrt, sin, cos, max, abs } = Math;\n\nconst printer = debug('J_bessel');\n\nexport function J_bessel(x: number, alpha: number, nb: number): IBesselRC {\n    /*\n     Calculates Bessel functions J_{n+alpha} (x)\n     for non-negative argument x, and non-negative order n+alpha, n = 0,1,..,nb-1.\n  \n      Explanation of variables in the calling sequence.\n  \n     X     - Non-negative argument for which J's are to be calculated.\n     ALPHA - Fractional part of order for which\n       J's are to be calculated.  0 <= ALPHA < 1.\n     NB    - Number of functions to be calculated, NB >= 1.\n       The first function calculated is of order ALPHA, and the\n       last is of order (NB - 1 + ALPHA).\n     B     - Output vector of length NB.  If RJBESL\n       terminates normally (NCALC=NB), the vector B contains the\n       functions J/ALPHA/(X) through J/NB-1+ALPHA/(X).\n     NCALC - Output variable indicating possible errors.\n       Before using the vector B, the user should check that\n       NCALC=NB, i.e., all orders have been calculated to\n       the desired accuracy.\tSee the following\n  \n       ****************************************************************\n  \n     Error return codes\n  \n      In case of an error,  NCALC != NB, and not all J's are\n      calculated to the desired accuracy.\n  \n      NCALC < 0:\tAn argument is out of range. For example,\n         NBES <= 0, ALPHA < 0 or > 1, or X is too large.\n         In this case, b[1] is set to zero, the remainder of the\n         B-vector is not calculated, and NCALC is set to\n         MIN(NB,0)-1 so that NCALC != NB.\n  \n      NB > NCALC > 0: Not all requested function values could\n         be calculated accurately.  This usually occurs because NB is\n         much larger than ABS(X).\t In this case, b[N] is calculated\n         to the desired accuracy for N <= NCALC, but precision\n         is lost for NCALC < N <= NB.  If b[N] does not vanish\n         for N > NCALC (because it is too small to be represented),\n         and b[N]/b[NCALC] = 10^(-K), then only the first NSIG - K\n         significant figures of b[N] can be trusted.\n  \n  \n      Acknowledgement\n  \n      This program is based on a program written by David J. Sookne\n      (2) that computes values of the Bessel functions J or I of float\n      argument and long order.  Modifications include the restriction\n      of the computation to the J Bessel function of non-negative float\n      argument, the extension of the computation to arbitrary positive\n      order, and the elimination of most underflow.\n  \n      References:\n  \n      Olver, F.W.J., and Sookne, D.J. (1972)\n      \"A Note on Backward Recurrence Algorithms\";\n      Math. Comp. 26, 941-947.\n  \n      Sookne, D.J. (1973)\n      \"Bessel Functions of Real Argument and Integer Order\";\n      NBS Jour. of Res. B. 77B, 125-132.\n  \n      Latest modification: March 19, 1990\n  \n      Author: W. J. Cody\n        Applied Mathematics Division\n        Argonne National Laboratory\n        Argonne, IL  60439\n     *******************************************************************\n     */\n\n    /* ---------------------------------------------------------------------\n      Mathematical constants\n \n     PI2\t  = 2 / PI\n     TWOPI1 = first few significant digits of 2 * PI\n     TWOPI2 = (2*PI - TWOPI1) to working precision, i.e.,\n        TWOPI1 + TWOPI2 = 2 * PI to extra precision.\n     --------------------------------------------------------------------- */\n    const pi2 = .636619772367581343075535;\n    const twopi1 = 6.28125;\n    const twopi2 = .001935307179586476925286767;\n\n    /*---------------------------------------------------------------------\n     *  Factorial(N)\n     *--------------------------------------------------------------------- */\n    const fact: number[] = [1., 1., 2., 6., 24., 120., 720., 5040., 40320.,\n        362880., 3628800., 39916800., 479001600., 6227020800., 87178291200.,\n        1.307674368e12, 2.0922789888e13, 3.55687428096e14, 6.402373705728e15,\n        1.21645100408832e17, 2.43290200817664e18, 5.109094217170944e19,\n        1.12400072777760768e21, 2.585201673888497664e22,\n        6.2044840173323943936e23];\n\n    /* Local variables */\n    //const int lim = nb;\n    let b2 = new Array(nb).fill(0);\n\n    //START ints\n    let i_nend;\n    let nbmx;\n    let i;\n    let j;\n    let l;\n    let i_m;\n    let n;\n    let nstart;\n    //END ints \n\n    //START double\n    let capp;\n    let capq;\n    let pold;\n    let vcos;\n    let test;\n    let vsin;\n\n    let p;\n    let s;\n    let t;\n    let z;\n    let alpem;\n    let halfx;\n    let aa;\n    let bb;\n    let cc;\n    let psave;\n    let plast;\n    let tover;\n    let t1;\n    let alp2em;\n    let em;\n    let en;\n    let xc;\n    let xk;\n    let xm;\n    let psavel;\n    let gnu;\n    let xin;\n    let sum;\n    //END DOUBLE\n\n    //int\n    let ncalc;\n    let gotoL190 = false;\n\n    /* Parameter adjustment */\n    //--b;\n\n    let nu = alpha;\n    let twonu = nu + nu;\n\n    /*-------------------------------------------------------------------\n      Check for out of range arguments.\n      -------------------------------------------------------------------*/\n\n    if (\n        !(nb > 0 && x >= 0. && 0. <= nu && nu < 1.)\n    ) {\n        /* Error return -- X, NB, or ALPHA is out of range : */\n        b2[0] = 0.;\n        ncalc = min(nb, 0) - 1;\n        return { x, nb, ncalc };\n    }\n\n\n    ncalc = nb;\n    if (x > xlrg_BESS_IJ) {\n        ML_ERROR(ME.ME_RANGE, 'J_bessel', printer);\n        /* indeed, the limit is 0,\n         * but the cutoff happens too early */\n        return { x: 0, nb, ncalc };\n    }\n    let intxj = trunc(x);\n\n    /*===================================================================\n      Branch into  3 cases :\n      1) use 2-term ascending series for small X\n      2) use asymptotic form for large X when NB is not too large\n      3) use recursion otherwise\n      ===================================================================*/\n\n    if (x < 1 / 10000) {\n        printer('x < 0.0001 , x=%d, nb=%d', x, nb);\n        /* ---------------------------------------------------------------\n           Two-term ascending series for small X.\n           --------------------------------------------------------------- */\n        alpem = 1. + nu;\n\n        halfx = (x > enmten_BESS) ? .5 * x : 0.;\n        aa = (nu !== 0.) ? pow(halfx, nu) / (nu * Rf_gamma_cody(nu)) : 1.;\n        bb = (x + 1. > 1.) ? -halfx * halfx : 0.;\n        b2[0] = aa + aa * bb / alpem;\n        if (x !== 0. && b2[0] === 0.)\n            ncalc = 0;\n\n        if (nb !== 1) {\n            if (x <= 0.) {\n                for (n = 2; n <= nb; ++n)\n                    b2[n - 1] = 0.;\n            }\n            else {\n                /* ----------------------------------------------\n                   Calculate higher order functions.\n                   ---------------------------------------------- */\n                if (bb === 0.)\n                    tover = (enmten_BESS + enmten_BESS) / x;\n                else\n                    tover = enmten_BESS / bb;\n                cc = halfx;\n                for (n = 2; n <= nb; ++n) {\n                    aa /= alpem;\n                    alpem += 1.;\n                    aa *= cc;\n                    if (aa <= tover * alpem)\n                        aa = 0.;\n\n                    b2[n - 1] = aa + aa * bb / alpem;\n                    if (b2[n - 1] === 0. && ncalc > n)\n                        ncalc = n - 1;\n                }\n            }\n        }\n    }\n    else if (x > 25. && nb <= intxj + 1) {\n        printer('x > 25 and nb < int(x+1) :x=%d, nb=%d', x, nb);\n        /* ------------------------------------------------------------\n           Asymptotic series for X > 25 (and not too large nb)\n           ------------------------------------------------------------ */\n        xc = sqrt(pi2 / x);\n        xin = 1 / (64 * x * x);\n        if (x >= 130.) i_m = 4;\n        else if (x >= 35.) i_m = 8;\n        else i_m = 11;\n        xm = 4. * i_m;\n        /* ------------------------------------------------\n           Argument reduction for SIN and COS routines.\n           ------------------------------------------------ */\n        t = trunc(x / (twopi1 + twopi2) + .5);\n        z = (x - t * twopi1) - t * twopi2 - (nu + .5) / pi2;\n        vsin = sin(z);\n        vcos = cos(z);\n        gnu = twonu;\n        for (i = 1; i <= 2; ++i) {\n            s = (xm - 1. - gnu) * (xm - 1. + gnu) * xin * .5;\n            t = (gnu - (xm - 3.)) * (gnu + (xm - 3.));\n            t1 = (gnu - (xm + 1.)) * (gnu + (xm + 1.));\n            let k = i_m + i_m;\n            capp = s * t / fact[k];\n            capq = s * t1 / fact[k + 1];\n            xk = xm;\n            for (; k >= 4; k -= 2) {/* k + 2(j-2) == 2m */\n                xk -= 4.;\n                s = (xk - 1. - gnu) * (xk - 1. + gnu);\n                t1 = t;\n                t = (gnu - (xk - 3.)) * (gnu + (xk - 3.));\n                capp = (capp + 1. / fact[k - 2]) * s * t * xin;\n                capq = (capq + 1. / fact[k - 1]) * s * t1 * xin;\n\n            }\n            capp += 1.;\n            capq = (capq + 1.) * (gnu * gnu - 1.) * (.125 / x);\n            b2[i - 1] = xc * (capp * vcos - capq * vsin);\n            if (nb === 1) {\n                //return (BesselRC) { 0, nb, ncalc };\n                return { x: b2[nb - 1], nb, ncalc };\n            }\n\n        /* vsin <--> vcos */ t = vsin; vsin = -vcos; vcos = t;\n            gnu += 2.;\n        }\n        /* -----------------------------------------------\n           If  NB > 2, compute J(X,ORDER+I)\tfor I = 2, NB-1\n           ----------------------------------------------- */\n        if (nb > 2)\n            for (gnu = twonu + 2., j = 3; j <= nb; j++ , gnu += 2.)\n                b2[j - 1] = gnu * b2[j - 1 - 1] / x - b2[j - 2 - 1];\n    }\n    else {\n        printer('rest: x=%d, nb=%d\\t', x, nb);\n        /* rtnsig_BESS <= x && ( x <= 25 || intx+1 < *nb ) :\n           --------------------------------------------------------\n           Use recurrence to generate results.\n           First initialize the calculation of P*S.\n           -------------------------------------------------------- */\n        nbmx = nb - intxj;\n        n = intxj + 1;\n        en = (n + n) + twonu;\n        plast = 1.;\n        p = en / x;\n        /* ---------------------------------------------------\n           Calculate general significance test.\n           --------------------------------------------------- */\n        test = ensig_BESS + ensig_BESS;\n        if (nbmx >= 3) {\n            /* ------------------------------------------------------------\n               Calculate P*S until N = NB-1.  Check for possible overflow.\n               ---------------------------------------------------------- */\n            tover = enten_BESS / ensig_BESS;\n            nstart = intxj + 2;\n            i_nend = nb - 1;\n            en = (nstart + nstart) - 2. + twonu;\n            for (let k = nstart; k <= i_nend; ++k) {\n                n = k;\n                en += 2.;\n                pold = plast;\n                plast = p;\n                p = en * plast / x - pold;\n                if (p > tover) {\n                    /* -------------------------------------------\n                       To avoid overflow, divide P*S by TOVER.\n                       Calculate P*S until ABS(P) > 1.\n                       -------------------------------------------*/\n                    tover = enten_BESS;\n                    p /= tover;\n                    plast /= tover;\n                    psave = p;\n                    psavel = plast;\n                    nstart = n + 1;\n                    do {\n                        ++n;\n                        en += 2.;\n                        pold = plast;\n                        plast = p;\n                        p = en * plast / x - pold;\n                    } while (p <= 1.);\n\n                    bb = en / x;\n                    /* -----------------------------------------------\n                       Calculate backward test and find NCALC,\n                       the highest N such that the test is passed.\n                       ----------------------------------------------- */\n                    test = pold * plast * (.5 - .5 / (bb * bb));\n                    test /= ensig_BESS;\n                    p = plast * tover;\n                    --n;\n                    en -= 2.;\n                    i_nend = min(nb, n);\n                    for (l = nstart; l <= i_nend; ++l) {\n                        pold = psavel;\n                        psavel = psave;\n                        psave = en * psavel / x - pold;\n                        if (psave * psavel > test) {\n                            ncalc = l - 1;\n                            break;\n                        }\n                        ncalc = l;\n                    }\n                    gotoL190 = true;\n                    break;\n                }//if\n            }//for\n            n = i_nend;\n            en = (n + n) + twonu;\n            /* -----------------------------------------------------\n               Calculate special significance test for NBMX > 2.\n               -----------------------------------------------------*/\n            test = max(test, sqrt(plast * ensig_BESS) * sqrt(p + p));\n        }\n        /* ------------------------------------------------\n           Calculate P*S until significance test passes. */\n        if (!gotoL190) {\n            do {\n                ++n;\n                en += 2.;\n                pold = plast;\n                plast = p;\n                p = en * plast / x - pold;\n            } while (p < test);\n        }\n        /*---------------------------------------------------------------\n        Initialize the backward recursion and the normalization sum.\n        --------------------------------------------------------------- */\n        ++n;\n        en += 2.;\n        bb = 0.;\n        aa = 1. / p;\n        em = i_m = n >> 1; //integer devide by 2 with sign preservation \n        i_m = (n << 1) - (i_m << 2); /* = 2 n - 4 (n/2)\n               = 0 for even, 2 for odd n */\n        if (i_m === 0)\n            sum = 0.;\n        else {\n            alpem = em - 1. + nu;\n            alp2em = em + em + nu;\n            sum = aa * alpem * alp2em / em;\n        }\n        i_nend = n - nb;\n        /* if (nend > 0) */\n        /* --------------------------------------------------------\n           Recur backward via difference equation, calculating\n           (but not storing) b[N], until N = NB.\n           -------------------------------------------------------- */\n        for (l = 1; l <= i_nend; ++l) {\n            --n;\n            en -= 2.;\n            cc = bb;\n            bb = aa;\n            aa = en * bb / x - cc;\n            i_m = i_m ? 0 : 2; /* m = 2 - m failed on gcc4-20041019 */\n            if (i_m !== 0) {\n                em -= 1.;\n                alp2em = em + em + nu;\n                if (n === 1)\n                    break;\n\n                alpem = em - 1. + nu;\n                if (alpem === 0.)\n                    alpem = 1.;\n                sum = (sum + aa * alp2em) * alpem / em;\n            }\n        }\n        /*--------------------------------------------------\n          Store b[NB].\n          --------------------------------------------------*/\n        b2[n - 1] = aa;\n        //one loop to get rid of \"gotos\"\n        let gotoL240 = false;\n        let gotoL250 = false;\n        for (let cnt = 1; cnt > 0; cnt--) {\n            if (i_nend >= 0) {\n                if (nb <= 1) {\n                    if (nu + 1. === 1.)\n                        alp2em = 1.;\n                    else\n                        alp2em = nu;\n                    sum += b2[0] * alp2em;\n                    gotoL250 = true;\n                    break;\n                }\n                else {/*-- nb >= 2 : ---------------------------\n            Calculate and store b[NB-1].\n            ----------------------------------------*/\n                    --n;\n                    en -= 2.;\n                    b2[n - 1] = en * aa / x - bb;\n                    if (n === 1) {\n                        gotoL240 = true;\n                        break;\n                    }\n\n                    i_m = i_m ? 0 : 2; /* m = 2 - m failed on gcc4-20041019 */\n                    if (i_m !== 0) {\n                        em -= 1.;\n                        alp2em = em + em + nu;\n                        alpem = em - 1. + nu;\n                        if (alpem === 0.)\n                            alpem = 1.;\n                        sum = (sum + b2[n - 1] * alp2em) * alpem / em;\n                    }//if\n                }//if else\n            }// if\n        }//while the break\n\n        /* if (n - 2 != 0) */\n        /* --------------------------------------------------------\n           Calculate via difference equation and store b[N],\n           until N = 2.\n           -------------------------------------------------------- */\n        if (gotoL250 === false && gotoL240 === false) {\n            for (n = n - 1; n >= 2; n--) {\n                en -= 2.;\n                b2[n - 1] = en * b2[n + 1 - 1] / x - b2[n + 2 - 1];\n                i_m = i_m ? 0 : 2; /* m = 2 - m failed on gcc4-20041019 */\n                if (i_m !== 0) {\n                    em -= 1.;\n                    alp2em = em + em + nu;\n                    alpem = em - 1. + nu;\n                    if (alpem === 0.)\n                        alpem = 1.;\n                    sum = (sum + b2[n - 1] * alp2em) * alpem / em;\n                }\n            }\n            /* ---------------------------------------\n               Calculate b[1].\n               -----------------------------------------*/\n            b2[0] = 2. * (nu + 1.) * b2[1] / x - b2[2];\n        }\n        //L240:\n        if (gotoL250 === false) {\n            em -= 1.;\n            alp2em = em + em + nu;\n            if (alp2em === 0.)\n                alp2em = 1.;\n            sum += b2[0] * alp2em;\n        }\n        //L250:\n        /* ---------------------------------------------------\n           Normalize.  Divide all b[N] by sum.\n           ---------------------------------------------------*/\n        /*\t    if (nu + 1. != 1.) poor test */\n        if (abs(nu) > 1e-15)\n            sum *= (Rf_gamma_cody(nu) * pow(.5 * x, -nu));\n\n        aa = enmten_BESS;\n        if (sum > 1.)\n            aa *= sum;\n        for (n = 1; n <= nb; ++n) {\n            if (abs(b2[n - 1]) < aa)\n                b2[n - 1] = 0.;\n            else\n                b2[n - 1] /= sum;\n        }//for\n    }//if\n    return { x: b2[nb - 1], nb, ncalc };\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselJ/Jbessel.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ME, ML_ERROR } from '../../common/_general';\nimport { sqxmin_BESS_K, xmax_BESS_K } from '../bessel-constants';\nimport { IBesselRC } from '../IBesselRC';\n\nconst M_SQRT_2dPI = 0.797884560802865355879892119869;\nconst { min, log, exp, abs: fabs, sinh, trunc, sqrt, max } = Math;\nconst { MAX_VALUE: DBL_MAX, EPSILON: DBL_EPSILON, MIN_VALUE: DBL_MIN } = Number;\nconst printer = debug('K_bessel');\nconst ML_POSINF = Infinity;\n\nexport function K_bessel(\n    x: number,\n    alpha: number,\n    nb: number,\n    ize: number\n): IBesselRC {\n    /*-------------------------------------------------------------------\n  \n      This routine calculates modified Bessel functions\n      of the third kind, K_(N+ALPHA) (X), for non-negative\n      argument X, and non-negative order N+ALPHA, with or without\n      exponential scaling.\n  \n      Explanation of variables in the calling sequence\n  \n     X     - Non-negative argument for which\n       K's or exponentially scaled K's (K*EXP(X))\n       are to be calculated.\tIf K's are to be calculated,\n       X must not be greater than XMAX_BESS_K.\n     ALPHA - Fractional part of order for which\n       K's or exponentially scaled K's (K*EXP(X)) are\n       to be calculated.  0 <= ALPHA < 1.0.\n     NB    - Number of functions to be calculated, NB > 0.\n       The first function calculated is of order ALPHA, and the\n       last is of order (NB - 1 + ALPHA).\n     IZE   - Type.\tIZE = 1 if unscaled K's are to be calculated,\n          = 2 if exponentially scaled K's are to be calculated.\n     BK    - Output vector of length NB.\tIf the\n       routine terminates normally (NCALC=NB), the vector BK\n       contains the functions K(ALPHA,X), ... , K(NB-1+ALPHA,X),\n       or the corresponding exponentially scaled functions.\n       If (0 < NCALC < NB), BK(I) contains correct function\n       values for I <= NCALC, and contains the ratios\n       K(ALPHA+I-1,X)/K(ALPHA+I-2,X) for the rest of the array.\n     NCALC - Output variable indicating possible errors.\n       Before using the vector BK, the user should check that\n       NCALC=NB, i.e., all orders have been calculated to\n       the desired accuracy.\tSee error returns below.\n  \n  \n     *******************************************************************\n  \n     Error returns\n  \n      In case of an error, NCALC != NB, and not all K's are\n      calculated to the desired accuracy.\n  \n      NCALC < -1:  An argument is out of range. For example,\n      NB <= 0, IZE is not 1 or 2, or IZE=1 and ABS(X) >= XMAX_BESS_K.\n      In this case, the B-vector is not calculated,\n      and NCALC is set to MIN0(NB,0)-2\t so that NCALC != NB.\n      NCALC = -1:  Either  K(ALPHA,X) >= XINF  or\n      K(ALPHA+NB-1,X)/K(ALPHA+NB-2,X) >= XINF.\t In this case,\n      the B-vector is not calculated.\tNote that again\n      NCALC != NB.\n  \n      0 < NCALC < NB: Not all requested function values could\n      be calculated accurately.  BK(I) contains correct function\n      values for I <= NCALC, and contains the ratios\n      K(ALPHA+I-1,X)/K(ALPHA+I-2,X) for the rest of the array.\n  \n  \n     Intrinsic functions required are:\n  \n       ABS, AINT, EXP, INT, LOG, MAX, MIN, SINH, SQRT\n  \n  \n     Acknowledgement\n  \n      This program is based on a program written by J. B. Campbell\n      (2) that computes values of the Bessel functions K of float\n      argument and float order.  Modifications include the addition\n      of non-scaled functions, parameterization of machine\n      dependencies, and the use of more accurate approximations\n      for SINH and SIN.\n  \n     References: \"On Temme's Algorithm for the Modified Bessel\n          Functions of the Third Kind,\" Campbell, J. B.,\n          TOMS 6(4), Dec. 1980, pp. 581-586.\n  \n         \"A FORTRAN IV Subroutine for the Modified Bessel\n          Functions of the Third Kind of Real Order and Real\n          Argument,\" Campbell, J. B., Report NRC/ERB-925,\n          National Research Council, Canada.\n  \n      Latest modification: May 30, 1989\n  \n      Modified by: W. J. Cody and L. Stoltz\n           Applied Mathematics Division\n           Argonne National Laboratory\n           Argonne, IL  60439\n  \n     -------------------------------------------------------------------\n    */\n    /*---------------------------------------------------------------------\n     * Mathematical constants\n     *\tA = LOG(2) - Euler's constant\n     *\tD = SQRT(2/PI)\n     ---------------------------------------------------------------------*/\n    const a = .11593151565841244881;\n\n    /*---------------------------------------------------------------------\n      P, Q - Approximation for LOG(GAMMA(1+ALPHA))/ALPHA + Euler's constant\n      Coefficients converted from hex to decimal and modified\n      by W. J. Cody, 2/26/82 */\n    const p = [.805629875690432845, 20.4045500205365151,\n        157.705605106676174, 536.671116469207504, 900.382759291288778,\n        730.923886650660393, 229.299301509425145, .822467033424113231];\n    const q = [29.4601986247850434, 277.577868510221208,\n        1206.70325591027438, 2762.91444159791519, 3443.74050506564618,\n        2210.63190113378647, 572.267338359892221];\n    /* R, S - Approximation for (1-ALPHA*PI/SIN(ALPHA*PI))/(2.D0*ALPHA) */\n    const r = [- .48672575865218401848, 13.079485869097804016,\n    -101.96490580880537526, 347.65409106507813131,\n        3.495898124521934782e-4];\n\n    const s = [- 25.579105509976461286, 212.57260432226544008,\n    -610.69018684944109624, 422.69668805777760407];\n    /* T    - Approximation for SINH(Y)/Y */\n    const t = [1.6125990452916363814e-10,\n        2.5051878502858255354e-8, 2.7557319615147964774e-6,\n        1.9841269840928373686e-4, .0083333333333334751799,\n        .16666666666666666446];\n    /*---------------------------------------------------------------------*/\n    const estm = [52.0583, 5.7607, 2.7782, 14.4303, 185.3004, 9.3715];\n    const estf = [41.8341, 7.1075, 6.4306, 42.511, 1.35633, 84.5096, 20.];\n\n    /* Local variables */\n    //int\n    let iend;\n    let i;\n    let j;\n    let k;\n    let m;\n    let ii;\n    let mplus1;\n\n    //double\n    let x2by4;\n    let twox;\n    let c;\n    let blpha;\n    let ratio;\n    let wminf;\n    let d1;\n    let d2;\n    let d3;\n    let f0;\n    let f1;\n    let f2;\n    let p0;\n    let q0;\n    let t1;\n    let t2;\n    let twonu;\n    let dm;\n    let ex;\n    let bk1;\n    let bk2;\n    let nu;\n\n    let bk = new Array<number>(nb).fill(0);\n\n\n\n    ii = 0; /* -Wall */\n\n    ex = x;\n    nu = alpha;\n    let ncalc = min(nb, 0) - 2;\n\n    if (nb > 0 && (0. <= nu && nu < 1.) && (1 <= ize && ize <= 2)) {\n        for (let cnt = 0; cnt < 1; cnt++) {\n            if (ex <= 0 || (ize === 1 && ex > xmax_BESS_K)) {\n                if (ex <= 0) {\n                    if (ex < 0) ML_ERROR(ME.ME_RANGE, 'K_bessel', printer);\n                    // for (i = 0; i < nb; i++)\n                    bk[0] = ML_POSINF;\n                }\n                else /* would only have underflow */\n                    //for (i = 0; i < nb; i++)\n                    bk[0] = 0.;\n                ncalc = nb;\n                return { x: bk[0], nb, ncalc };\n            }\n            k = 0;\n            if (nu < sqxmin_BESS_K) {\n                nu = 0.;\n            }\n            else if (nu > .5) {\n                k = 1;\n                nu -= 1.;\n            }\n            twonu = nu + nu;\n            iend = nb + k - 1;\n            c = nu * nu;\n            d3 = -c;\n            if (ex <= 1.) {\n                /* ------------------------------------------------------------\n                   Calculation of P0 = GAMMA(1+ALPHA) * (2/X)**ALPHA\n                      Q0 = GAMMA(1-ALPHA) * (X/2)**ALPHA\n                   ------------------------------------------------------------ */\n                d1 = 0.; d2 = p[0];\n                t1 = 1.; t2 = q[0];\n                for (i = 2; i <= 7; i += 2) {\n                    d1 = c * d1 + p[i - 1];\n                    d2 = c * d2 + p[i];\n                    t1 = c * t1 + q[i - 1];\n                    t2 = c * t2 + q[i];\n                }\n                d1 = nu * d1;\n                t1 = nu * t1;\n                f1 = log(ex);\n                f0 = a + nu * (p[7] - nu * (d1 + d2) / (t1 + t2)) - f1;\n                q0 = exp(-nu * (a - nu * (p[7] + nu * (d1 - d2) / (t1 - t2)) - f1));\n                f1 = nu * f0;\n                p0 = exp(f1);\n                /* -----------------------------------------------------------\n                   Calculation of F0 =\n                   ----------------------------------------------------------- */\n                d1 = r[4];\n                t1 = 1.;\n                for (i = 0; i < 4; ++i) {\n                    d1 = c * d1 + r[i];\n                    t1 = c * t1 + s[i];\n                }\n                /* d2 := sinh(f1)/ nu = sinh(f1)/(f1/f0)\n                 *\t   = f0 * sinh(f1)/f1 */\n                if (fabs(f1) <= .5) {\n                    f1 *= f1;\n                    d2 = 0.;\n                    for (i = 0; i < 6; ++i) {\n                        d2 = f1 * d2 + t[i];\n                    }\n                    d2 = f0 + f0 * f1 * d2;\n                }\n                else {\n                    d2 = sinh(f1) / nu;\n                }\n                f0 = d2 - nu * d1 / (t1 * p0);\n                if (ex <= 1e-10) {\n                    /* ---------------------------------------------------------\n                       X <= 1.0E-10\n                       Calculation of K(ALPHA,X) and X*K(ALPHA+1,X)/K(ALPHA,X)\n                       --------------------------------------------------------- */\n                    bk[0] = f0 + ex * f0;\n                    if (ize === 1) {\n                        bk[0] -= ex * bk[0];\n                    }\n                    ratio = p0 / f0;\n                    c = ex * DBL_MAX;\n                    if (k !== 0) {\n                        /* ---------------------------------------------------\n                           Calculation of K(ALPHA,X)\n                           and  X*K(ALPHA+1,X)/K(ALPHA,X),\tALPHA >= 1/2\n                           --------------------------------------------------- */\n                        ncalc = -1;\n                        if (bk[0] >= c / ratio) {\n                            return { x: bk[nb - 1], nb, ncalc };\n                        }\n                        bk[0] = ratio * bk[0] / ex;\n                        twonu += 2.;\n                        ratio = twonu;\n                    }\n                    ncalc = 1;\n                    if (nb === 1)\n                        return { x: bk[nb - 1], nb, ncalc };\n\n                    /* -----------------------------------------------------\n                       Calculate  K(ALPHA+L,X)/K(ALPHA+L-1,X),\n                       L = 1, 2, ... , NB-1\n                       ----------------------------------------------------- */\n                    ncalc = -1;\n                    for (i = 1; i < nb; ++i) {\n                        if (ratio >= c)\n                            return { x: bk[nb - 1], nb, ncalc };\n\n                        bk[i] = ratio / ex;\n                        twonu += 2.;\n                        ratio = twonu;\n                    }\n                    ncalc = 1;\n                    break; //goto L240\n                }\n                else {\n                    /* ------------------------------------------------------\n                       10^-10 < X <= 1.0\n                       ------------------------------------------------------ */\n                    c = 1.;\n                    x2by4 = ex * ex / 4.;\n                    p0 = .5 * p0;\n                    q0 = .5 * q0;\n                    d1 = -1.;\n                    d2 = 0.;\n                    bk1 = 0.;\n                    bk2 = 0.;\n                    f1 = f0;\n                    f2 = p0;\n                    do {\n                        d1 += 2.;\n                        d2 += 1.;\n                        d3 = d1 + d3;\n                        c = x2by4 * c / d2;\n                        f0 = (d2 * f0 + p0 + q0) / d3;\n                        p0 /= d2 - nu;\n                        q0 /= d2 + nu;\n                        t1 = c * f0;\n                        t2 = c * (p0 - d2 * f0);\n                        bk1 += t1;\n                        bk2 += t2;\n                    } while (fabs(t1 / (f1 + bk1)) > DBL_EPSILON ||\n                        fabs(t2 / (f2 + bk2)) > DBL_EPSILON);\n                    bk1 = f1 + bk1;\n                    bk2 = 2. * (f2 + bk2) / ex;\n                    if (ize === 2) {\n                        d1 = exp(ex);\n                        bk1 *= d1;\n                        bk2 *= d1;\n                    }\n                    wminf = estf[0] * ex + estf[1];\n                }\n            }\n            else if (DBL_EPSILON * ex > 1.) {\n                /* -------------------------------------------------\n                   X > 1./EPS\n                   ------------------------------------------------- */\n                ncalc = nb;\n                bk1 = 1. / (M_SQRT_2dPI * sqrt(ex));\n                //for (i = 0; i < nb; ++i)\n                //  bk[i] = bk1;\n                return { x: bk1, nb, ncalc };\n\n            }\n            else {\n                /* -------------------------------------------------------\n                   X > 1.0\n                   ------------------------------------------------------- */\n                twox = ex + ex;\n                blpha = 0.;\n                ratio = 0.;\n                if (ex <= 4.) {\n                    /* ----------------------------------------------------------\n                       Calculation of K(ALPHA+1,X)/K(ALPHA,X),  1.0 <= X <= 4.0\n                       ----------------------------------------------------------*/\n                    d2 = trunc(estm[0] / ex + estm[1]);\n                    m = trunc(d2);\n                    d1 = d2 + d2;\n                    d2 -= .5;\n                    d2 *= d2;\n                    for (i = 2; i <= m; ++i) {\n                        d1 -= 2.;\n                        d2 -= d1;\n                        ratio = (d3 + d2) / (twox + d1 - ratio);\n                    }\n                    /* -----------------------------------------------------------\n                       Calculation of I(|ALPHA|,X) and I(|ALPHA|+1,X) by backward\n                       recurrence and K(ALPHA,X) from the wronskian\n                       -----------------------------------------------------------*/\n                    d2 = trunc(estm[2] * ex + estm[3]);\n                    m = trunc(d2);\n                    c = fabs(nu);\n                    d3 = c + c;\n                    d1 = d3 - 1.;\n                    f1 = DBL_MIN;\n                    f0 = (2. * (c + d2) / ex + .5 * ex / (c + d2 + 1.)) * DBL_MIN;\n                    for (i = 3; i <= m; ++i) {\n                        d2 -= 1.;\n                        f2 = (d3 + d2 + d2) * f0;\n                        blpha = (1. + d1 / d2) * (f2 + blpha);\n                        f2 = f2 / ex + f1;\n                        f1 = f0;\n                        f0 = f2;\n                    }\n                    f1 = (d3 + 2.) * f0 / ex + f1;\n                    d1 = 0.;\n                    t1 = 1.;\n                    for (i = 1; i <= 7; ++i) {\n                        d1 = c * d1 + p[i - 1];\n                        t1 = c * t1 + q[i - 1];\n                    }\n                    p0 = exp(c * (a + c * (p[7] - c * d1 / t1) - log(ex))) / ex;\n                    f2 = (c + .5 - ratio) * f1 / ex;\n                    bk1 = p0 + (d3 * f0 - f2 + f0 + blpha) / (f2 + f1 + f0) * p0;\n                    if (ize === 1) {\n                        bk1 *= exp(-ex);\n                    }\n                    wminf = estf[2] * ex + estf[3];\n                }\n                else {\n                    /* ---------------------------------------------------------\n                       Calculation of K(ALPHA,X) and K(ALPHA+1,X)/K(ALPHA,X), by\n                       backward recurrence, for  X > 4.0\n                       ----------------------------------------------------------*/\n                    dm = trunc(estm[4] / ex + estm[5]);\n                    m = trunc(dm);\n                    d2 = dm - .5;\n                    d2 *= d2;\n                    d1 = dm + dm;\n                    for (i = 2; i <= m; ++i) {\n                        dm -= 1.;\n                        d1 -= 2.;\n                        d2 -= d1;\n                        ratio = (d3 + d2) / (twox + d1 - ratio);\n                        blpha = (ratio + ratio * blpha) / dm;\n                    }\n                    bk1 = 1. / ((M_SQRT_2dPI + M_SQRT_2dPI * blpha) * sqrt(ex));\n                    if (ize === 1)\n                        bk1 *= exp(-ex);\n                    wminf = estf[4] * (ex - fabs(ex - estf[6])) + estf[5];\n                }\n                /* ---------------------------------------------------------\n                   Calculation of K(ALPHA+1,X)\n                   from K(ALPHA,X) and  K(ALPHA+1,X)/K(ALPHA,X)\n                   --------------------------------------------------------- */\n                bk2 = bk1 + bk1 * (nu + .5 - ratio) / ex;\n            }\n            /*--------------------------------------------------------------------\n              Calculation of 'NCALC', K(ALPHA+I,X),\tI  =  0, 1, ... , NCALC-1,\n              &\t  K(ALPHA+I,X)/K(ALPHA+I-1,X),\tI = NCALC, NCALC+1, ... , NB-1\n              -------------------------------------------------------------------*/\n            ncalc = nb;\n            bk[0] = bk1;\n            if (iend === 0)\n                return { x: bk[nb - 1], nb, ncalc };\n\n            j = 1 - k;\n            if (j >= 0)\n                bk[j] = bk2;\n\n            if (iend === 1)\n                return { x: bk[nb - 1], nb, ncalc };\n\n            m = min(trunc(wminf - nu), iend);\n            for (i = 2; i <= m; ++i) {\n                t1 = bk1;\n                bk1 = bk2;\n                twonu += 2.;\n                if (ex < 1.) {\n                    if (bk1 >= DBL_MAX / twonu * ex)\n                        break;\n                }\n                else {\n                    if (bk1 / ex >= DBL_MAX / twonu)\n                        break;\n                }\n                bk2 = twonu / ex * bk1 + t1;\n                ii = i;\n                ++j;\n                if (j >= 0) {\n                    bk[j] = bk2;\n                }\n            }\n\n            m = ii;\n            if (m === iend) {\n                return { x: bk[nb - 1], nb, ncalc };\n            }\n            ratio = bk2 / bk1;\n            mplus1 = m + 1;\n            ncalc = -1;\n            for (i = mplus1; i <= iend; ++i) {\n                twonu += 2.;\n                ratio = twonu / ex + 1. / ratio;\n                ++j;\n                if (j >= 1) {\n                    bk[j] = ratio;\n                }\n                else {\n                    if (bk2 >= DBL_MAX / ratio)\n                        return { x: bk[nb - 1], nb, ncalc };\n\n                    bk2 *= ratio;\n                }\n            }\n            ncalc = max(1, mplus1 - k);\n            if (ncalc === 1)\n                bk[0] = bk2;\n            if (nb === 1) {\n                return { x: bk2, nb, ncalc };\n            }\n        } //for loop \"goto\" guard\n        //gotoL420:\n        for (i = ncalc; i < nb; ++i) { /* i ==  ncalc */\n            bk[i] *= bk[i - 1];\n            (ncalc)++;\n        }\n    }\n    return { x: bk[nb - 1], nb, ncalc };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselK/Kbessel.ts","\n/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { cospi } from '../../trigonometry/cospi';\nimport { sinpi } from '../../trigonometry/sinpi';\nimport { M_eps_sinc, thresh_BESS_Y, xlrg_BESS_Y } from '../bessel-constants';\nimport { IBesselRC } from '../IBesselRC';\n\nconst M_SQRT_2dPI = 0.797884560802865355879892119869;\nconst M_1_PI = 0.3183098861837907;\nconst M_PI_2 = 1.5707963267948966;\n\n\nconst { min, trunc, sqrt, sin, cos, log, abs, pow, PI: M_PI } = Math;\nconst {\n    MIN_VALUE: DBL_MIN,\n    EPSILON: DBL_EPSILON,\n    NEGATIVE_INFINITY: ML_NEGINF,\n    MAX_VALUE: DBL_MAX\n} = Number;\n\nconst printer = debug('Y_bessel');\n\nexport function Y_bessel(x: number, alpha: number, nb: number): IBesselRC {\n    /* ----------------------------------------------------------------------\n \n      This routine calculates Bessel functions Y_(N+ALPHA) (X)\n     v for non-negative argument X, and non-negative order N+ALPHA.\n \n \n      Explanation of variables in the calling sequence\n \n      X     - Non-negative argument for which\n          Y's are to be calculated.\n      ALPHA - Fractional part of order for which\n          Y's are to be calculated.  0 <= ALPHA < 1.0.\n      NB    - Number of functions to be calculated, NB > 0.\n          The first function calculated is of order ALPHA, and the\n          last is of order (NB - 1 + ALPHA).\n      BY    - Output vector of length NB.\tIf the\n          routine terminates normally (NCALC=NB), the vector BY\n          contains the functions Y(ALPHA,X), ... , Y(NB-1+ALPHA,X),\n          If (0 < NCALC < NB), BY(I) contains correct function\n          values for I <= NCALC, and contains the ratios\n          Y(ALPHA+I-1,X)/Y(ALPHA+I-2,X) for the rest of the array.\n      NCALC - Output variable indicating possible errors.\n          Before using the vector BY, the user should check that\n          NCALC=NB, i.e., all orders have been calculated to\n          the desired accuracy.\tSee error returns below.\n \n \n      *******************************************************************\n \n      Error returns\n \n       In case of an error, NCALC != NB, and not all Y's are\n       calculated to the desired accuracy.\n \n       NCALC < -1:  An argument is out of range. For example,\n         NB <= 0, IZE is not 1 or 2, or IZE=1 and ABS(X) >=\n         XMAX.  In this case, BY[0] = 0.0, the remainder of the\n         BY-vector is not calculated, and NCALC is set to\n         MIN0(NB,0)-2  so that NCALC != NB.\n       NCALC = -1:  Y(ALPHA,X) >= XINF.  The requested function\n         values are set to 0.0.\n       1 < NCALC < NB: Not all requested function values could\n         be calculated accurately.  BY(I) contains correct function\n         values for I <= NCALC, and and the remaining NB-NCALC\n         array elements contain 0.0.\n \n \n      Intrinsic functions required are:\n \n          DBLE, EXP, INT, MAX, MIN, REAL, SQRT\n \n \n      Acknowledgement\n \n         This program draws heavily on Temme's Algol program for Y(a,x)\n         and Y(a+1,x) and on Campbell's programs for Y_nu(x).\tTemme's\n         scheme is used for  x < THRESH, and Campbell's scheme is used\n         in the asymptotic region.  Segments of code from both sources\n         have been translated into Fortran 77, merged, and heavily modified.\n         Modifications include parameterization of machine dependencies,\n         use of a new approximation for ln(gamma(x)), and built-in\n         protection against over/underflow.\n \n      References: \"Bessel functions J_nu(x) and Y_nu(x) of float\n               order and float argument,\" Campbell, J. B.,\n               Comp. Phy. Comm. 18, 1979, pp. 133-142.\n \n              \"On the numerical evaluation of the ordinary\n               Bessel function of the second kind,\" Temme,\n               N. M., J. Comput. Phys. 21, 1976, pp. 343-350.\n \n       Latest modification: March 19, 1990\n \n       Modified by: W. J. Cody\n                Applied Mathematics Division\n                Argonne National Laboratory\n                Argonne, IL  60439\n      ----------------------------------------------------------------------*/\n\n\n    /* ----------------------------------------------------------------------\n      Mathematical constants\n        FIVPI = 5*PI\n        PIM5 = 5*PI - 15\n     ----------------------------------------------------------------------*/\n    const fivpi = 15.707963267948966192;\n    const pim5 = .70796326794896619231;\n\n    /*----------------------------------------------------------------------\n          Coefficients for Chebyshev polynomial expansion of\n          1/gamma(1-x), abs(x) <= .5\n          ----------------------------------------------------------------------*/\n    const ch = [-6.7735241822398840964e-24,\n    -6.1455180116049879894e-23, 2.9017595056104745456e-21,\n        1.3639417919073099464e-19, 2.3826220476859635824e-18,\n    -9.0642907957550702534e-18, -1.4943667065169001769e-15,\n    -3.3919078305362211264e-14, -1.7023776642512729175e-13,\n        9.1609750938768647911e-12, 2.4230957900482704055e-10,\n        1.7451364971382984243e-9, -3.3126119768180852711e-8,\n    -8.6592079961391259661e-7, -4.9717367041957398581e-6,\n        7.6309597585908126618e-5, .0012719271366545622927,\n        .0017063050710955562222, -.07685284084478667369,\n    -.28387654227602353814, .92187029365045265648];\n\n    /* Local variables */\n\n    //ints\n    let i: number;\n    let k: number;\n    let na: number;\n    let ncalc: number;\n\n    //doubles\n    let alfa;\n    let div;\n    let ddiv;\n    let even;\n    let gamma;\n    let term;\n    let cosmu;\n    let sinmu;\n\n    let b;\n    let c;\n    let d;\n    let e;\n    let f;\n    let g;\n    let h;\n    let p;\n    let q;\n    let r;\n    let s;\n    let d1;\n    let d2;\n    let q0;\n    let pa;\n    let pa1;\n    let qa;\n    let qa1;\n    let en;\n    let ya;\n    let ya1;\n    let twobyx;\n    let den;\n    let odd;\n    let aye;\n    let dmu;\n    let x2;\n    let xna;\n    let en1 = ya = ya1 = 0;\t\t/* -Wall */\n\n    let ex = x;\n    let nu = alpha;\n    let by = new Array(nb).fill(0);\n    if (\n        !(nb > 0 && 0. <= nu && nu < 1.)\n    ) {\n        printer('violaton: abort nb=%d, nu=%d', nb, nu);\n        by[0] = 0.;\n        ncalc = min(nb, 0) - 1;\n        return { x: 0, nb, ncalc };\n    }\n\n    if (ex < DBL_MIN || ex > xlrg_BESS_Y) {\n        /* Warning is not really appropriate, give\n             * proper limit:\n             * ML_ERROR(ME_RANGE, \"Y_bessel\"); */\n        printer('range issue: x < DBL_MIN but still bigger then 1e8 x=(%d)', ex);\n        ncalc = nb;\n        if (ex > xlrg_BESS_Y) by[0] = 0.; /*was ML_POSINF */\n        else if (ex < DBL_MIN) by[0] = ML_NEGINF;\n        return { x: by[0], nb, ncalc };\n    }\n    xna = trunc(nu + .5);\n    na = trunc(xna);\n    if (na === 1) {/* <==>  .5 <= *alpha < 1\t <==>  -5. <= nu < 0 */\n        nu -= xna;\n    }\n    if (nu === -.5) {\n        p = M_SQRT_2dPI / sqrt(ex);\n        ya = p * sin(ex);\n        ya1 = -p * cos(ex);\n    }\n    else if (ex < 3.) {\n        /* -------------------------------------------------------------\n\t\t   Use Temme's scheme for small X\n\t\t   ------------------------------------------------------------- */\n        b = ex * .5;\n        d = -log(b);\n        f = nu * d;\n        e = pow(b, -nu);\n        if (abs(nu) < M_eps_sinc)\n            c = M_1_PI;\n        else\n            c = nu / sinpi(nu);\n\n        /* ------------------------------------------------------------\n\t\t   Computation of sinh(f)/f\n\t\t   ------------------------------------------------------------ */\n        if (abs(f) < 1.) {\n            x2 = f * f;\n            en = 19.;\n            s = 1.;\n            for (i = 1; i <= 9; ++i) {\n                s = s * x2 / en / (en - 1.) + 1.;\n                en -= 2.;\n            }\n        }\n        else {\n            s = (e - 1. / e) * .5 / f;\n        }\n        /* --------------------------------------------------------\n\t\t   Computation of 1/gamma(1-a) using Chebyshev polynomials */\n        x2 = nu * nu * 8.;\n        aye = ch[0];\n        even = 0.;\n        alfa = ch[1];\n        odd = 0.;\n        for (i = 3; i <= 19; i += 2) {\n            even = -(aye + aye + even);\n            aye = -even * x2 - aye + ch[i - 1];\n            odd = -(alfa + alfa + odd);\n            alfa = -odd * x2 - alfa + ch[i];\n        }\n        even = (even * .5 + aye) * x2 - aye + ch[20];\n        odd = (odd + alfa) * 2.;\n        gamma = odd * nu + even;\n        /* End of computation of 1/gamma(1-a)\n\t\t   ----------------------------------------------------------- */\n        g = e * gamma;\n        e = (e + 1. / e) * .5;\n        f = 2. * c * (odd * e + even * s * d);\n        e = nu * nu;\n        p = g * c;\n        q = M_1_PI / g;\n        c = nu * M_PI_2;\n        if (abs(c) < M_eps_sinc)\n            r = 1.;\n        else\n            r = sinpi(nu / 2) / c;\n\n        r = M_PI * c * r * r;\n        c = 1.;\n        d = -b * b;\n        h = 0.;\n        ya = f + r * q;\n        ya1 = p;\n        en = 1.;\n\n        while (abs(g / (1. + abs(ya))) +\n            abs(h / (1. + abs(ya1))) > DBL_EPSILON) {\n            f = (f * en + p + q) / (en * en - e);\n            c *= (d / en);\n            p /= en - nu;\n            q /= en + nu;\n            g = c * (f + r * q);\n            h = c * p - en * g;\n            ya += g;\n            ya1 += h;\n            en += 1.;\n        }\n        ya = -ya;\n        ya1 = -ya1 / b;\n    }\n    else if (ex < thresh_BESS_Y) {\n        /* --------------------------------------------------------------\n\t\t   Use Temme's scheme for moderate X :  3 <= x < 16\n\t\t   -------------------------------------------------------------- */\n        c = (.5 - nu) * (.5 + nu);\n        b = ex + ex;\n        e = ex * M_1_PI * cospi(nu) / DBL_EPSILON;\n        e *= e;\n        p = 1.;\n        q = -ex;\n        r = 1. + ex * ex;\n        s = r;\n        en = 2.;\n        while (r * en * en < e) {\n            en1 = en + 1.;\n            d = (en - 1. + c / en) / s;\n            p = (en + en - p * d) / en1;\n            q = (-b + q * d) / en1;\n            s = p * p + q * q;\n            r *= s;\n            en = en1;\n        }\n        f = p / s;\n        p = f;\n        g = -q / s;\n        q = g;\n\n        for (; ;) {\n            //L220:\n            en -= 1.;\n            if (en > 0.) {\n                r = en1 * (2. - p) - 2.;\n                s = b + en1 * q;\n                d = (en - 1. + c / en) / (r * r + s * s);\n                p = d * r;\n                q = d * s;\n                e = f + 1.;\n                f = p * e - g * q;\n                g = q * e + p * g;\n                en1 = en;\n                continue;\n                //goto L220;\n            }\n            break;\n        }\n        f = 1. + f;\n        d = f * f + g * g;\n        pa = f / d;\n        qa = -g / d;\n        d = nu + .5 - p;\n        q += ex;\n        pa1 = (pa * q - qa * d) / ex;\n        qa1 = (qa * q + pa * d) / ex;\n        b = ex - M_PI_2 * (nu + .5);\n        c = cos(b);\n        s = sin(b);\n        d = M_SQRT_2dPI / sqrt(ex);\n        ya = d * (pa * s + qa * c);\n        ya1 = d * (qa1 * s - pa1 * c);\n    }\n    else { /* x > thresh_BESS_Y */\n        /* ----------------------------------------------------------\n           Use Campbell's asymptotic scheme.\n           ---------------------------------------------------------- */\n        na = 0;\n        d1 = trunc(ex / fivpi);\n        i = trunc(d1);\n        dmu = ex - 15. * d1 - d1 * pim5 - (alpha + .5) * M_PI_2;\n        if (i - (i / 2 << 1) === 0) {\n            cosmu = cos(dmu);\n            sinmu = sin(dmu);\n        }\n        else {\n            cosmu = -cos(dmu);\n            sinmu = -sin(dmu);\n        }\n        ddiv = 8. * ex;\n        dmu = alpha;\n        den = sqrt(ex);\n        for (k = 1; k <= 2; ++k) {\n            p = cosmu;\n            cosmu = sinmu;\n            sinmu = -p;\n            d1 = (2. * dmu - 1.) * (2. * dmu + 1.);\n            d2 = 0.;\n            div = ddiv;\n            p = 0.;\n            q = 0.;\n            q0 = d1 / div;\n            term = q0;\n            for (i = 2; i <= 20; ++i) {\n                d2 += 8.;\n                d1 -= d2;\n                div += ddiv;\n                term = -term * d1 / div;\n                p += term;\n                d2 += 8.;\n                d1 -= d2;\n                div += ddiv;\n                term *= (d1 / div);\n                q += term;\n                if (abs(term) <= DBL_EPSILON) {\n                    break;\n                }\n            }\n            p += 1.;\n            q += q0;\n            if (k === 1)\n                ya = M_SQRT_2dPI * (p * cosmu - q * sinmu) / den;\n            else\n                ya1 = M_SQRT_2dPI * (p * cosmu - q * sinmu) / den;\n            dmu += 1.;\n        }\n    }\n    if (na === 1) {\n        h = 2. * (nu + 1.) / ex;\n        if (h > 1.) {\n            if (abs(ya1) > DBL_MAX / h) {\n                h = 0.;\n                ya = 0.;\n            }\n        }\n        h = h * ya1 - ya;\n        ya = ya1;\n        ya1 = h;\n    }\n    /* ---------------------------------------------------------------\n\t   Now have first one or two Y's\n\t   --------------------------------------------------------------- */\n    by[0] = ya;\n    ncalc = 1;\n    if (nb > 1) {\n        by[1] = ya1;\n        if (ya1 !== 0.) {\n            aye = 1. + alpha;\n            twobyx = 2. / ex;\n            ncalc = 2;\n            for (i = 2; i < nb; ++i) {\n                if (twobyx < 1.) {\n                    if (abs(by[i - 1]) * twobyx >= DBL_MAX / aye)\n                        break;\n                    //goto L450;\n                }\n                else {\n                    if (abs(by[i - 1]) >= DBL_MAX / aye / twobyx)\n                        break;\n                    //goto L450;\n                }\n                by[i] = twobyx * aye * by[i - 1] - by[i - 2];\n                aye += 1.;\n                ++(ncalc);\n            }//for\n        }//if\n    }//if\n    //L450:\n    // for (i = ncalc; i < nb; ++i)\n    //   by[i] = ML_NEGINF; /* was 0 */\n    return { x: by[ncalc - 1], nb, ncalc };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/bessel/besselY/Ybessel.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ME, ML_ERR_return_NAN, ML_ERROR } from '../common/_general';\nimport { gammafn } from '../gamma/gamma_fn';\nimport { multiplexer } from '../r-func';\nimport { internal_lbeta } from './lbeta';\n\n//const xmin =  - 170.5674972726612;\nconst xmax = 171.61447887182298;\nconst lnsml = -708.39641853226412;\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer_beta = debug('beta');\n\nexport function beta(_a: number | number[], _b: number | number[]): number | number[] {\n  return multiplexer(_a, _b)((a, b) => internal_beta(a, b));\n}\n\nexport function internal_beta(a: number, b: number): number {\n\n\n  if (ISNAN(a) || ISNAN(b)) return a + b;\n\n  if (a < 0 || b < 0) return ML_ERR_return_NAN(printer_beta);\n  else if (a === 0 || b === 0) return ML_POSINF;\n  else if (!R_FINITE(a) || !R_FINITE(b)) return 0;\n\n  if (a + b < xmax) {\n    //\n    // ~= 171.61 for IEEE\n    //\treturn gammafn(a) * gammafn(b) / gammafn(a+b);\n    // All the terms are positive, and all can be large for large\n    //   or small arguments.  They are never much less than one.\n    //   gammafn(x) can still overflow for x ~ 1e-308,\n    //   but the result would too.\n    //\n    return 1 / gammafn(a + b) * gammafn(a) * gammafn(b);\n  } else {\n    let val: number = internal_lbeta(a, b);\n    // underflow to 0 is not harmful per se;  exp(-999) also gives no warning\n    //#ifndef IEEE_754\n    if (val < lnsml) {\n      // a and/or b so big that beta underflows\n      ML_ERROR(ME.ME_UNDERFLOW, 'beta', printer_beta);\n      // return ML_UNDERFLOW; pointless giving incorrect value\n    }\n    //#endif\n    return Math.exp(val);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/beta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { DBL_MAX_EXP, ML_ERR_return_NAN } from '../common/_general';\nimport { IRNGNormal } from '../rng/normal';\n\nconst { LN2: M_LN2, log, min: fmin2, max: fmax2, exp, sqrt } = Math;\nconst { MAX_VALUE: DBL_MAX, isFinite: R_FINITE } = Number;\nconst printer = debug('rbeta');\n\nexport const expmax = DBL_MAX_EXP * M_LN2; /* = log(DBL_MAX) */\n\nexport function rbeta(\n  n: number,\n  aa: number,\n  bb: number,\n  rng: IRNGNormal\n): number | number[] {\n  const result = new Array(n).fill(0).map(() => {\n    if (aa < 0 || bb < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (!R_FINITE(aa) && !R_FINITE(bb))\n      // a = b = Inf : all mass at 1/2\n      return 0.5;\n    if (aa === 0 && bb === 0)\n      // point mass 1/2 at each of {0,1} :\n      return rng.unif_rand() < 0.5 ? 0 : 1;\n    // now, at least one of a, b is finite and positive\n    if (!R_FINITE(aa) || bb === 0) return 1.0;\n    if (!R_FINITE(bb) || aa === 0) return 0.0;\n\n    let a;\n    let b;\n    let alpha;\n    let r;\n    let s;\n    let t;\n    let u1 = 0;\n    let u2;\n    let v = 0;\n    let w = 0;\n    let y;\n    let z;\n    let qsame;\n    /* FIXME:  Keep Globals (properly) for threading */\n    /* Uses these GLOBALS to save time when many rv's are generated : */\n    let beta = 0;\n    let gamma = 0;\n    let delta;\n    let k1 = 0;\n    let k2 = 0;\n    let olda = -1.0;\n    let oldb = -1.0;\n\n    /* Test if we need new \"initializing\" */\n    qsame = olda === aa && oldb === bb;\n    if (!qsame) {\n      olda = aa;\n      oldb = bb;\n    }\n\n    a = fmin2(aa, bb);\n    b = fmax2(aa, bb); /* a <= b */\n    alpha = a + b;\n\n    function v_w_from__u1_bet(AA: number) {\n      v = beta * log(u1 / (1.0 - u1));\n      if (v <= expmax) {\n        w = AA * exp(v);\n        if (!R_FINITE(w)) {\n          w = DBL_MAX;\n        }\n      } else {\n        w = DBL_MAX;\n      }\n    }\n\n    if (a <= 1.0) {\n      /* --- Algorithm BC --- */\n\n      /* changed notation, now also a <= b (was reversed) */\n\n      if (!qsame) {\n        /* initialize */\n        beta = 1.0 / a;\n        delta = 1.0 + b - a;\n        k1 = delta * (0.0138889 + 0.0416667 * a) / (b * beta - 0.777778);\n        k2 = 0.25 + (0.5 + 0.25 / delta) * a;\n      }\n      /* FIXME: \"do { } while()\", but not trivially because of \"continue\"s:*/\n      for (; ;) {\n        u1 = rng.unif_rand() as number;\n        u2 = rng.unif_rand() as number;\n        if (u1 < 0.5) {\n          y = u1 * u2;\n          z = u1 * y;\n          if (0.25 * u2 + z - y >= k1) continue;\n        } else {\n          z = u1 * u1 * u2;\n          if (z <= 0.25) {\n            v_w_from__u1_bet(b);\n            break;\n          }\n          if (z >= k2) continue;\n        }\n\n        v_w_from__u1_bet(b);\n\n        if (alpha * (log(alpha / (a + w)) + v) - 1.3862944 >= log(z)) break;\n      }\n      return aa === a ? a / (a + w) : w / (a + w);\n    } else {\n      /* Algorithm BB */\n\n      if (!qsame) {\n        /* initialize */\n        beta = sqrt((alpha - 2.0) / (2.0 * a * b - alpha));\n        gamma = a + 1.0 / beta;\n      }\n      do {\n        u1 = rng.unif_rand() as number;\n        u2 = rng.unif_rand() as number;\n\n        v_w_from__u1_bet(a);\n\n        z = u1 * u1 * u2;\n        r = gamma * v - 1.3862944;\n        s = a + r - w;\n        if (s + 2.609438 >= 5.0 * z) break;\n        t = log(z);\n        if (s > t) break;\n      } while (r + alpha * log(alpha / (b + w)) < t);\n\n      return aa !== a ? b / (b + w) : w / (b + w);\n    }\n  });\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/beta/rbeta.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport {\n  ML_ERR_return_NAN,\n  R_D__0,\n  R_D__1,\n  R_D_exp,\n  R_D_nonint_check\n} from '../common/_general';\n\nimport { dbinom_raw } from '../binomial/dbinom';\nimport { lgammafn } from '../gamma/lgamma_fn';\n\nconst printer = debug('dnbinom');\nconst { log, round: R_forceint, log1p } = Math;\nconst { isFinite: R_FINITE, isNaN: ISNAN } = Number;\n\nexport function dnbinom<T>(\n  xx: T,\n  size: number,\n  prob: number,\n  give_log: boolean\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n\n  const result = fx.map(x => {\n    let ans: number;\n    let p: number;\n\n    if (ISNAN(x) || ISNAN(size) || ISNAN(prob)) {\n      return x + size + prob;\n    }\n\n    if (prob <= 0 || prob > 1 || size < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    let rc = R_D_nonint_check(give_log, x, printer);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (x < 0 || !R_FINITE(x)) {\n      return R_D__0(give_log);\n    }\n    /* limiting case as size approaches zero is point mass at zero */\n    if (x === 0 && size === 0) {\n      return R_D__1(give_log);\n    }\n\n    x = R_forceint(x);\n\n    ans = dbinom_raw(size, x + size, prob, 1 - prob, give_log);\n\n    p = size / (size + x);\n\n    return give_log ? log(p) + ans : p * ans;\n  });\n\n  return result.length === 1 ? result[0] : (result as any);\n}\n\nconst printer_dnbinom_mu = debug('dnbinom_mu');\n\nexport function dnbinom_mu<T>(\n  xx: T,\n  size: number,\n  mu: number,\n  give_log: boolean\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n\n  const result = fx.map(x => {\n    /* originally, just set  prob :=  size / (size + mu)  and called dbinom_raw(),\n     * but that suffers from cancellation when   mu << size  */\n    let ans: number;\n    let p: number;\n\n    if (ISNAN(x) || ISNAN(size) || ISNAN(mu)) {\n      return x + size + mu;\n    }\n\n    if (mu < 0 || size < 0) {\n      return ML_ERR_return_NAN(printer_dnbinom_mu);\n    }\n\n    let rc = R_D_nonint_check(give_log, x, printer_dnbinom_mu);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (x < 0 || !R_FINITE(x)) {\n      return R_D__0(give_log);\n    }\n\n    /* limiting case as size approaches zero is point mass at zero,\n     * even if mu is kept constant. limit distribution does not\n     * have mean mu, though.\n     */\n    if (x === 0 && size === 0) {\n      return R_D__1(give_log);\n    }\n\n    x = R_forceint(x);\n    if (x === 0) {\n      /* be accurate, both for n << mu, and n >> mu :*/\n      // old code   size * (size < mu ? log(size / (size + mu)) : log1p(- mu / (size + mu))));\n      let llogx: number;\n      if (size < mu) {\n        llogx = log(size / (size + mu));\n      } else {\n        llogx = log1p(-mu / (size + mu));\n      }\n      return R_D_exp(give_log, size * llogx);\n    }\n    if (x < 1e-10 * size) {\n      /* don't use dbinom_raw() but MM's formula: */\n      /* FIXME --- 1e-8 shows problem; rather use algdiv() from ./toms708.c */\n      p = size < mu ? log(size / (1 + size / mu)) : log(mu / (1 + mu / size));\n      return R_D_exp(\n        give_log,\n        x * p - mu - lgammafn(x + 1) + log1p(x * (x - 1) / (2 * size))\n      );\n    }\n\n    /* else: no unnecessary cancellation inside dbinom_raw, when\n     * x_ = size and n_ = x+size are so close that n_ - x_ loses accuracy\n     */\n\n    ans = dbinom_raw(\n      size,\n      x + size,\n      size / (size + mu),\n      mu / (size + mu),\n      give_log\n    );\n    p = size / (size + x);\n\n    return give_log ? log(p) + ans : p * ans;\n  });\n  return result.length === 0 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial-negative/dnbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport {\n  ML_ERR_return_NAN,\n  R_DT_0,\n  R_DT_1,\n  R_Q_P01_boundaries\n} from '../common/_general';\n\nimport { NumberW } from '../common/toms708';\n\nimport { R_DT_qIv } from '../exp/expm1';\nimport { qnorm } from '../normal/qnorm';\nimport { map } from '../r-func';\nimport { pnbinom } from './pnbinom';\n\nconst {\n  isNaN: ISNAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  EPSILON: DBL_EPSILON\n} = Number;\n\nconst { max: fmax2, sqrt, floor, round: R_forceint } = Math;\n\nconst printer_do_search = debug('do_search');\n\nfunction do_search(\n  y: number,\n  z: NumberW,\n  p: number,\n  n: number,\n  pr: number,\n  incr: number\n): number {\n  printer_do_search(\n    'start: y:%d, z:%o, p:%d, n:%d, pr:%d, incr:%d',\n    y,\n    z,\n    p,\n    n,\n    pr,\n    incr\n  );\n  if (z.val >= p) {\n    //* search to the left\n    while (true) {\n      if (\n        y === 0 ||\n        (z.val = pnbinom(\n          y - incr,\n          n,\n          pr,\n          true, ///log_p,\n          false\n        )) < p\n      ) {\n        printer_do_search('exit1');\n        return y;\n      }\n      y = fmax2(0, y - incr);\n    } //while\n  } else {\n    // search to the right\n\n    while (true) {\n      y = y + incr;\n      if (\n        (z.val = pnbinom(\n          y,\n          n,\n          pr, //l._t.\n          true,\n          false\n        )) >= p\n      ) {\n        printer_do_search('exit2');\n        return y;\n      }\n    } //while\n  } //if\n}\n\nconst printer_qnbinom = debug('qnbinom');\n\nexport function qnbinom<T>(\n  pp: T,\n  size: number,\n  prob: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n  return map(pp)(p => {\n    let P;\n    let Q;\n    let mu;\n    let sigma;\n    let gamma;\n    let y;\n\n    const z = new NumberW(0);\n\n    if (ISNAN(p) || ISNAN(size) || ISNAN(prob)) {\n      return NaN;\n    }\n\n    /* this happens if specified via mu, size, since\n       prob == size/(size+mu)\n    */\n    if (prob === 0 && size === 0) return 0;\n\n    if (prob <= 0 || prob > 1 || size < 0) {\n      return ML_ERR_return_NAN(printer_qnbinom);\n    }\n\n    if (prob === 1 || size === 0) return 0;\n\n    let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n    Q = 1.0 / prob;\n    P = (1.0 - prob) * Q;\n    mu = size * P;\n    sigma = sqrt(size * P * Q);\n    gamma = (Q + P) / sigma;\n\n    /* Note : \"same\" code in qpois.c, qbinom.c, qnbinom.c --\n     * FIXME: This is far from optimal [cancellation for p ~= 1, etc]: */\n    if (!lower_tail || log_p) {\n      p = R_DT_qIv(\n        lower_tail,\n        log_p,\n        p\n      ); /* need check again (cancellation!): */\n      if (p === R_DT_0(lower_tail, log_p)) return 0;\n      if (p === R_DT_1(lower_tail, log_p)) return ML_POSINF;\n    }\n    /* temporary hack --- FIXME --- */\n    if (p + 1.01 * DBL_EPSILON >= 1) return ML_POSINF;\n\n    /* y := approx.value (Cornish-Fisher expansion) :  */\n    z.val = qnorm(p, 0, 1, /*lower_tail*/ true, /*log_p*/ false);\n    y = R_forceint(mu + sigma * (z.val + gamma * (z.val * z.val - 1) / 6));\n\n    z.val = pnbinom(y, size, prob, /*lower_tail*/ true, /*log_p*/ false);\n\n    /* fuzz to ensure left continuity: */\n    p *= 1 - 64 * DBL_EPSILON;\n\n    /* If the C-F value is not too large a simple search is OK */\n    if (y < 1e5) return do_search(y, z, p, size, prob, 1);\n    /* Otherwise be a bit cleverer in the search */\n    {\n      let incr = floor(y * 0.001);\n      let oldincr;\n      do {\n        oldincr = incr;\n        y = do_search(y, z, p, size, prob, incr);\n        incr = fmax2(1, floor(incr / 100));\n      } while (oldincr > 1 && incr > y * 1e-15);\n      return y;\n    }\n  }) as any;\n}\n\nexport function qnbinom_mu<T>(\n  pp: T,\n  size: number,\n  mu: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n  return qnbinom(pp, size, /* prob = */ size / (size + mu), lower_tail, log_p);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial-negative/qnbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\n\nimport { rgamma } from '../gamma/rgamma';\nimport { rpois } from '../poisson/rpois';\nimport { IRNGNormal } from '../rng/normal/inormal-rng';\n\nconst { isFinite: R_FINITE } = Number;\n\nconst printer_rnbinom = debug('rnbinom');\n\nexport function rnbinom(\n  n: number,\n  size: number,\n  prob: number,\n  rng: IRNGNormal\n): number| number[] {\n  printer_rnbinom('n:%d, size:%d, prob:%d', n, size, prob);\n  const result = new Array(n).fill(0).map(() => {\n    if (\n      !R_FINITE(size) ||\n      !R_FINITE(prob) ||\n      size <= 0 ||\n      prob <= 0 ||\n      prob > 1\n    ) {\n      /* prob = 1 is ok, PR#1218 */\n      return ML_ERR_return_NAN(printer_rnbinom);\n    }\n    return prob === 1\n      ? 0\n      : (rpois(\n          1,\n          rgamma(1, size, (1 - prob) / prob, rng) as number,\n          rng\n        ) as number);\n  });\n  return result.length === 1 ? result[0] : result;\n}\n\nconst printer_rnbinom_mu = debug('rnbinom_mu');\n\nexport function rnbinom_mu(n: number= 1, size: number, mu: number, rng: IRNGNormal): number| number[] {\n\n  const result = new Array(n).fill(0).map(() => {\n\n  if (!R_FINITE(size) || !R_FINITE(mu) || size <= 0 || mu < 0) {\n    return ML_ERR_return_NAN(printer_rnbinom_mu);\n  }\n  return mu === 0\n    ? 0\n    : (rpois(\n        1,\n        rgamma(1, size, mu / size, rng) as number,\n        rng\n      ) as number);\n\n});\nreturn result.length === 1 ? result[0] :result ;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/binomial-negative/rnbinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\n\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN } = Number;\nconst { PI: M_PI, log } = Math;\nconst printer = debug('dcauchy');\n\nexport function dcauchy<T>(\n  xx: T,\n  location = 0,\n  scale = 1,\n  giveLog = false\n): T {\n  return map(xx)(x => {\n    let y: number;\n    /* NaNs propagated correctly */\n    if (ISNAN(x) || ISNAN(location) || ISNAN(scale)) {\n      return x + location + scale;\n    }\n\n    if (scale <= 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    y = (x - location) / scale;\n    return giveLog\n      ? -log(M_PI * scale * (1 + y * y))\n      : 1 / (M_PI * scale * (1 + y * y));\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/cauchy/dcauchy.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_D_val, R_DT_0, R_DT_1 } from '../common/_general';\n\nimport { R_D_Clog } from '../common/_general';\nimport { map  } from '../r-func';\nimport { atanpi } from '../trigonometry';\n\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { abs: fabs } = Math;\n\nconst printer = debug('pcauchy');\n\nexport function pcauchy<T>(\n  xx: T,\n  location = 0,\n  scale = 1,\n  lowerTail = true,\n  logP = false\n): T {\n  \n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(location) || ISNAN(scale))\n      return x + location + scale;\n\n    if (scale <= 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    x = (x - location) / scale;\n    if (ISNAN(x)) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (!R_FINITE(x)) {\n      if (x < 0) return R_DT_0(lowerTail, logP);\n      else return R_DT_1(lowerTail, logP);\n    }\n\n    if (!lowerTail) x = -x;\n    /* for large x, the standard formula suffers from cancellation.\n     * This is from Morten Welinder thanks to  Ian Smith's  atan(1/x) : */\n\n    if (fabs(x) > 1) {\n      let y = atanpi(1 / x);\n      return x > 0 ? R_D_Clog(logP, y) : R_D_val(logP, -y);\n    } else {\n      return R_D_val(logP, 0.5 + atanpi(x));\n    }\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/cauchy/pcauchy.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_Q_P01_check } from '../common/_general';\n\nimport { map } from '../r-func';\nimport { tanpi } from '../trigonometry/tanpi';\n\nconst { expm1, exp } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\nconst { ML_POSINF, ML_NEGINF } = {\n  ML_POSINF: Infinity,\n  ML_NEGINF: -Infinity\n};\n\nconst printer = debug('qcauchy');\n\nexport function qcauchy<T>(\n  pp: T,\n  location = 0,\n  scale = 1,\n  lowerTail = true,\n  logP = false\n): T {\n  return map(pp)(p => {\n    if (ISNAN(p) || ISNAN(location) || ISNAN(scale)) return NaN;\n    let lower_tail = lowerTail;\n\n    let rc = R_Q_P01_check(logP, p);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (scale <= 0 || !R_FINITE(scale)) {\n      if (scale === 0) return location;\n      /* else */ return ML_ERR_return_NAN(printer);\n    }\n\n    const my_INF = location + (lower_tail ? scale : -scale) * ML_POSINF;\n    if (logP) {\n      if (p > -1) {\n        /* when ep := exp(p),\n       * tan(pi*ep)= -tan(pi*(-ep))= -tan(pi*(-ep)+pi) = -tan(pi*(1-ep)) =\n       *\t\t = -tan(pi*(-expm1(p))\n       * for p ~ 0, exp(p) ~ 1, tan(~0) may be better than tan(~pi).\n       */\n        if (p === 0)\n          /* needed, since 1/tan(-0) = -Inf  for some arch. */\n          return my_INF;\n        lower_tail = !lower_tail;\n        p = -expm1(p);\n      } else p = exp(p);\n    } else {\n      if (p > 0.5) {\n        if (p === 1) return my_INF;\n        p = 1 - p;\n        lower_tail = !lower_tail;\n      }\n    }\n\n    if (p === 0.5) return location; // avoid 1/Inf below\n    if (p === 0) return location + (lower_tail ? scale : -scale) * ML_NEGINF; // p = 1. is handled above\n    return location + (lower_tail ? -scale : scale) / tanpi(p);\n    /*\t-1/tan(pi * p) = -cot(pi * p) = tan(pi * (p - 1/2))  */\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/cauchy/qcauchy.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { IRNG } from '../rng';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { PI: M_PI } = Math;\nconst printer = debug('rcauchy');\n\nexport function rcauchy(\n  n: number,\n  location = 0,\n  scale = 1,\n  rng: IRNG\n): number | number[] {\n  const result = new Array(n).fill(0).map(() => {\n    if (ISNAN(location) || !R_FINITE(scale) || scale < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (scale === 0 || !R_FINITE(location)) return location;\n    else return location + scale * Math.tan(M_PI * (rng.unif_rand() as number));\n  });\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/cauchy/rcauchy.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { NumberW } from './NumberW';\n\nconst { trunc, log, abs, min, pow } = Math;\nconst printer_bratio = debug('Toms708.bratio');\n/**\n * Computes the incomplete beta function\n * <p>\n * This translation was made with the aid of the Fortran-to-Java (f2j) system,\n * developed at the University of Tennessee.\n *<p>\n * @author Armido Didonato, Alfred Morris (F77 version)\n * @author John V. Burkhardt\n * @author James Curran (j.curran@auckland.ac.nz) (Java version)\n * @author Jacob Bogers (jkfbogers@gmai.com) Javascript version\n *\n */\n\nexport class Toms708 {\n  /**\n   * Computes the incomplete beta function\n   * <p>\n   * This translation was made with the aid of the Fortran-to-Java (f2j) system,\n   * developed at the University of Tennessee.\n   *<p>\n   * @author Armido Didonato, Alfred Morris (F77 version)\n   * @author John V. Burkhardt\n   * @author James Curran (j.curran@auckland.ac.nz) (Java version)\n   * @author Jacob Bogers (jkfbogers@gmail.com) Javascript version\n   *\n   */\n\n  public static alnrel(a: number) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc ALNREL evaluates the function LN(1 + A).\n    // c\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const p3 = -0.178874546012214e-1;\n    const p2 = 0.405303492862024;\n    const p1 = -0.129418923021993e1;\n    const q3 = -0.845104217945565e-1;\n    const q2 = 0.747811014037616;\n    const q1 = -0.162752256355323e1;\n    //\n\n    let t = 0.0;\n    let w = 0.0;\n    let x = 0.0;\n    let t2 = 0.0;\n    if (Math.abs(a) > 0.375) {\n      x = 1 + a;\n      return log(x);\n    }\n    t = a / (a + 2.0);\n    t2 = t * t;\n    w =\n      (((p3 * t2 + p2) * t2 + p1) * t2 + 1.0) /\n      (((q3 * t2 + q2) * t2 + q1) * t2 + 1.0);\n    return 2.0 * t * w;\n    //\n  }\n\n  public static algdiv(a: number, b: number) {\n    //\n    // c*********************************************************************72\n    // C\n    // cc ALGDIV computes LN(GAMMA(B)/GAMMA(A+B)) when 8 <= B.\n    // C\n    // C\n    // C     IN THIS ALGORITHM, DEL(X) IS THE FUNCTION DEFINED BY\n    // C     LN(GAMMA(X))  = (X - 0.5)*LN(X) - X + 0.5*LN(2*PI) + DEL(X).\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const c5 = -0.165322962780713e-2;\n    const c4 = 0.837308034031215e-3;\n    const c3 = -0.59520293135187e-3;\n    const c2 = 0.79365066682539e-3;\n    const c1 = -0.277777777760991e-2;\n    const c0 = 0.833333333333333e-1;\n    //\n\n    let s11 = 0.0;\n    let c = 0.0;\n    let d = 0.0;\n    let h = 0.0;\n    let t = 0.0;\n    let u = 0.0;\n    let v = 0.0;\n    let w = 0.0;\n    let x = 0.0;\n    let s3 = 0.0;\n    let s5 = 0.0;\n    let s7 = 0.0;\n    let x2 = 0.0;\n    let s9 = 0.0;\n\n    if (a <= b) {\n      h = a / b;\n      c = h / (1.0 + h);\n      x = 1.0 / (1.0 + h);\n      d = b + (a - 0.5);\n    } else {\n      h = b / a;\n      c = 1.0 / (1.0 + h);\n      x = h / (1.0 + h);\n      d = a + (b - 0.5);\n    }\n\n    // C\n    // C  SET SN  = (1 - X**N)/(1 - X)\n    // C\n    x2 = x * x;\n    s3 = 1.0 + x + x2;\n    s5 = 1.0 + x + x2 * s3;\n    s7 = 1.0 + x + x2 * s5;\n    s9 = 1.0 + x + x2 * s7;\n    s11 = 1.0 + x + x2 * s9;\n    // C\n    // C  SET W  = DEL(B) - DEL(A + B)\n    // C\n    t = Math.pow(1.0 / b, 2);\n    w =\n      ((((c5 * s11 * t + c4 * s9) * t + c3 * s7) * t + c2 * s5) * t + c1 * s3) *\n      t +\n      c0;\n    w *= c / b;\n    // C\n    // C  Combine the results\n    // c\n    u = d * Toms708.alnrel(a / b);\n    v = a * (log(b) - 1.0);\n\n    if (u <= v) return w - u - v;\n\n    return w - v - u;\n  }\n\n  public static apser(a: number, b: number, x: number, eps: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc APSER evaluates I(1-X)(B,A) for A very small.\n    // c\n    // C     APSER YIELDS THE INCOMPLETE BETA RATIO I(SUB(1-X))(B,A) FOR\n    // C     A <= MIN(EPS,EPS*B), B*X <= 1, AND X <= 0.5. USED WHEN\n    // C     A IS VERY SMALL. USE ONLY IF ABOVE INEQUALITIES ARE SATISFIED.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const g = 0.577215664901533;\n    //\n\n    let j = 0.0;\n    let bx = 0.0;\n    let c = 0.0;\n    let s = 0.0;\n    let t = 0.0;\n    let tol = 0.0;\n    let aj = 0.0;\n    bx = b * x;\n    t = x - bx;\n\n    if (b * eps > 2e-2) {\n      c = log(bx) + g + t;\n    } else {\n      c = log(x) + Toms708.psi(b) + g + t;\n    }\n\n    tol = 5.0 * eps * Math.abs(c);\n    j = 1.0;\n    s = 0.0;\n\n    do {\n      j++;\n      t *= x - bx / j;\n      aj = t / j;\n      s += aj;\n    } while (Math.abs(aj) > tol);\n    //\n    return -(a * (c + s));\n  }\n\n  public static basym(\n    a: number,\n    b: number,\n    lambda: number,\n    eps: number\n  ): number {\n    /*c*********************************************************************72\n    c\n    cc BASYM performs an asymptotic expansion for IX(A,B) for large A and B.\n    c\n    C     LAMBDA  = (A + B)*Y - B  AND EPS IS THE TOLERANCE USED.\n    C     IT IS ASSUMED THAT LAMBDA IS NONNEGATIVE AND THAT\n    C     A AND B ARE GREATER THAN OR EQUAL TO 15.\n    C\n    c  Reference:\n    c\n    c    Armido Didonato, Alfred Morris,\n    c    Algorithm 708: \n    c    Significant Digit Computation of the Incomplete Beta Function Ratios,\n    c    ACM Transactions on Mathematical Software,\n    c    Volume 18, Number 3, 1992, pages 360-373.\n    c*/\n    //double J0, J1, LAMBDA;\n\n    let a0 = new Array<number>(21).fill(0);\n    let b0 = new Array<number>(21).fill(0);\n    let c = new Array<number>(21).fill(0);\n    let d = new Array<number>(21).fill(0);\n\n    // C\n    // C  NUM IS THE MAXIMUM VALUE THAT N CAN TAKE IN THE DO LOOP\n    // C  ENDING AT ST<<<<ATEMENT 50. IT IS REQUIRED THAT NUM BE EVEN.\n    // C  THE ARRAYS A0, B0, C, D HAVE DIMENSION NUM + 1.\n    // C\n    let num = 20;\n    // C\n    // C  E0  = 2/SQRT(PI)\n    // C  E1  = 2**(-3/2)\n    // C\n    const e0 = 1.12837916709551;\n    const e1 = 0.353553390593274;\n\n    let h;\n    let r0;\n    let r1;\n    let w0;\n\n    if (a <= b) {\n      h = a / b;\n      r0 = 1.0 / (1.0 + h);\n      r1 = (b - a) / b;\n      w0 = 1.0 / Math.sqrt(a * (1.0 + h));\n    } else {\n      h = b / a;\n      r0 = 1.0 / (1.0 + h);\n      r1 = (b - a) / a;\n      w0 = 1.0 / Math.sqrt(b * (1.0 + h));\n    }\n\n    let f = a * Toms708.rlog1(-lambda / a) + b * Toms708.rlog1(lambda / b);\n    let t = Math.exp(-f);\n    if (t === 0.0) return 0;\n\n    let z0 = Math.sqrt(f);\n    let z = 0.5 * (z0 / e1);\n    let z2 = f + f;\n\n    a0[0] = 2.0 / 3.0 * r1;\n    c[0] = -0.5 * a0[0];\n    d[0] = -c[0];\n    let j0 = 0.5 / e0 * Toms708.erfc1(1, z0);\n    let j1 = e1;\n    let sum = j0 + d[0] * w0 * j1;\n\n    let s = 1.0;\n    let h2 = h * h;\n    let hn = 1.0;\n    let w = w0;\n    let znm1 = z;\n    let zn = z2;\n\n    for (let n = 2; n <= num; n += 2) {\n      hn = h2 * hn;\n      a0[n] = 2.0 * r0 * (1.0 + h * hn) / (n + 2.0);\n      let np1 = n + 1;\n      s = s + hn;\n      a0[np1] = 2.0 * r1 * s / (n + 3.0);\n\n      for (let i = n; i <= np1; i++) {\n        let r = -0.5 * (i + 1.0);\n        b0[1] = r * a0[1];\n\n        for (let m = 2; m <= i; m++) {\n          let bsum = 0.0;\n          let mm1 = m - 1;\n\n          for (let j = 1; j <= mm1; j++) {\n            let mmj = m - j;\n            bsum = bsum + (j * r - mmj) * a0[j] * b0[mmj];\n          }\n\n          b0[m] = r * a0[m] + bsum / m;\n        }\n\n        c[i] = b0[i] / (i + 1.0);\n\n        let dsum = 0.0;\n        let im1 = i - 1;\n\n        for (let j = 1; j <= im1; j++) {\n          let imj = i - j;\n          dsum = dsum + d[imj] * c[j];\n        }\n\n        d[i] = -(dsum + c[i]);\n      }\n\n      j0 = e1 * znm1 + (n - 1.0) * j0;\n      j1 = e1 * zn + n * j1;\n      znm1 = z2 * znm1;\n      zn = z2 * zn;\n      w = w0 * w;\n      let t0 = d[n] * w * j0;\n      w = w0 * w;\n      let t1 = d[np1] * w * j1;\n      sum = sum + (t0 + t1);\n      if (Math.abs(t0) + Math.abs(t1) <= eps * sum) break;\n    }\n\n    let u = Math.exp(-Toms708.bcorr(a, b));\n    return e0 * t * u * sum;\n  }\n\n  public static bcorr(a0: number, b0: number): number {\n    //\n    // c*********************************************************************72\n    // C\n    // cc BCORR evaluates a correction term for LN(GAMMA(A)).\n    // c\n    // C     EVALUATION OF  DEL(A0) + DEL(B0) - DEL(A0 + B0)  WHERE\n    // C     LN(GAMMA(A)) = (A - 0.5)*LN(A) - A + 0.5*LN(2*PI) + DEL(A).\n    // C     IT IS ASSUMED THAT A0 .GE. 8 AND B0 .GE. 8.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const c5 = -0.165322962780713e-2;\n    const c4 = 0.837308034031215e-3;\n    const c3 = -0.59520293135187e-3;\n    const c2 = 0.79365066682539e-3;\n    const c1 = -0.277777777760991e-2;\n    const c0 = 0.833333333333333e-1;\n    //\n\n    let s11 = 0.0;\n    let a = 0.0;\n    let b = 0.0;\n    let c = 0.0;\n    let h = 0.0;\n    let t = 0.0;\n    let w = 0.0;\n    let x = 0.0;\n    let s3 = 0.0;\n    let s5 = 0.0;\n    let s7 = 0.0;\n    let x2 = 0.0;\n    let s9 = 0.0;\n\n    a = Math.min(a0, b0);\n    b = Math.max(a0, b0);\n\n    //\n    h = a / b;\n    c = h / (1.0 + h);\n    x = 1.0 / (1.0 + h);\n    x2 = x * x;\n\n    // C\n    // C  SET SN = (1 - X**N)/(1 - X)\n    // C\n    s3 = 1.0 + (x + x2);\n    s5 = 1.0 + (x + x2 * s3);\n    s7 = 1.0 + (x + x2 * s5);\n    s9 = 1.0 + (x + x2 * s7);\n    s11 = 1.0 + (x + x2 * s9);\n\n    // C\n    // C  SET W = DEL(B) - DEL(A + B)\n    // C\n    t = Math.pow(1.0 / b, 2);\n    w =\n      ((((c5 * s11 * t + c4 * s9) * t + c3 * s7) * t + c2 * s5) * t + c1 * s3) *\n      t +\n      c0;\n    w = w * (c / b);\n\n    // C\n    // C  COMPUTE  DEL(A) + W\n    // C\n    t = Math.pow(1.0 / a, 2);\n    return (((((c5 * t + c4) * t + c3) * t + c2) * t + c1) * t + c0) / a + w;\n    //\n  }\n\n  public static beta_cdf_values(\n    nData: NumberW,\n    a: NumberW,\n    b: NumberW,\n    x: NumberW,\n    fx: NumberW\n  ): void {\n    // C*********************************************************************72\n    // C\n    // Cc BETA_CDF_VALUES returns some values of the Beta  // CDF.\n    // C\n    // C  Discussion:\n    // C\n    // C    The incomplete Beta function may be written\n    // C\n    // C      BETA_INC(A,B,X) = Integral (0 to X) T**(A-1) * (1-T)**(B-1) dT\n    // C                      / Integral (0 to 1) T**(A-1) * (1-T)**(B-1) dT\n    // C\n    // C    Thus,\n    // C\n    // C      BETA_INC(A,B,0.0) = 0.0\n    // C      BETA_INC(A,B,1.0) = 1.0\n    // C\n    // C    The incomplete Beta function is also sometimes  // Called the\n    // C    \"modified\" Beta function, or the \"normalized\" Beta function\n    // C    or the Beta  // CDF (cumulative density function.\n    // C\n    // C    In Mathematica, the function  // Can be evaluated by:\n    // C\n    // C      BETA[X,A,B] / BETA[A,B]\n    // C\n    // C    The function  // Can also be evaluated by using the Statistics package:\n    // C\n    // C      Needs[\"Statistics`ContinuousDistributions`\"]\n    // C      dist = BetaDistribution [ a, b ]\n    // C       // CDF [ dist, x ]\n    // C\n    // C  Modified:\n    // C\n    // C    04 January 2006\n    // C\n    // C  Author:\n    // C\n    // C    John Burkardt\n    // C\n    // C  Reference:\n    // C\n    // C    Milton Abramowitz and Irene Stegun,\n    // C    Handbook of Mathematical Functions,\n    // C    US Department of  // Commerce, 1964.\n    // C\n    // C    Karl Pearson,\n    // C    Tables of the Incomplete Beta Function,\n    // C     // Cambridge University Press, 1968.\n    // C\n    // C    Stephen Wolfram,\n    // C    The Mathematica Book,\n    // C    Fourth Edition,\n    // C    Wolfram Media /  // Cambridge University Press, 1999.\n    // C\n    // C  Parameters:\n    // C\n    // C    Input/output, integer N_DATA.  The user sets N_DATA to 0 before the\n    // C    first  // Call.  On each  // Call, the routine increments N_DATA by 1, and\n    // C    returns the  // Corresponding data; when there is no more data, the\n    // C    output value of N_DATA will be 0 again.\n    // C\n    // C    Output, real A, B, the parameters of the function.\n    // C\n    // C    Output, real X, the argument of the function.\n    // C\n    // C    Output, real FX, the value of the function.\n    // C\n    // C      implicit none\n\n    const nMax = 42;\n\n    const aVec = [\n      0.5,\n      0.5,\n      0.5,\n      1.0,\n      1.0,\n      1.0,\n      1.0,\n      1.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      5.5,\n      10.0,\n      10.0,\n      10.0,\n      10.0,\n      20.0,\n      20.0,\n      20.0,\n      20.0,\n      20.0,\n      30.0,\n      30.0,\n      40.0,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.2e1,\n      0.3e1,\n      0.4e1,\n      0.5e1\n    ];\n\n    const bVec = [\n      0.5,\n      0.5,\n      0.5,\n      0.5,\n      0.5,\n      0.5,\n      0.5,\n      1.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      2.0,\n      5.0,\n      0.5,\n      5.0,\n      5.0,\n      10.0,\n      5.0,\n      10.0,\n      10.0,\n      20.0,\n      20.0,\n      10.0,\n      10.0,\n      20.0,\n      0.5,\n      0.5,\n      0.5,\n      0.5,\n      0.2e1,\n      0.3e1,\n      0.4e1,\n      0.5e1,\n      0.2e1,\n      0.2e1,\n      0.2e1,\n      0.2e1\n    ];\n\n    const fxVec = [\n      0.6376856085851985e-1,\n      0.2048327646991335,\n      0.1e1,\n      0.0,\n      0.5012562893380045e-2,\n      0.513167019494862e-1,\n      0.2928932188134525,\n      0.5,\n      0.28e-1,\n      0.104,\n      0.216,\n      0.352,\n      0.5,\n      0.648,\n      0.784,\n      0.896,\n      0.972,\n      0.4361908850559777,\n      0.1516409096347099,\n      0.8978271484375e-1,\n      0.1e1,\n      0.5,\n      0.4598773297575791,\n      0.2146816102371739,\n      0.9507364826957875,\n      0.5,\n      0.8979413687105918,\n      0.2241297491808366,\n      0.7586405487192086,\n      0.7001783247477069,\n      0.513167019494862e-1,\n      0.1055728090000841,\n      0.1633399734659245,\n      0.2254033307585166,\n      0.36,\n      0.488,\n      0.5904,\n      0.67232,\n      0.216,\n      0.837e-1,\n      0.3078e-1,\n      0.10935e-1\n    ];\n\n    const xVec = [\n      0.01,\n      0.1,\n      1.0,\n      0.0,\n      0.01,\n      0.1,\n      0.5,\n      0.5,\n      0.1,\n      0.2,\n      0.3,\n      0.4,\n      0.5,\n      0.6,\n      0.7,\n      0.8,\n      0.9,\n      0.5,\n      0.9,\n      0.5,\n      1.0,\n      0.5,\n      0.8,\n      0.6,\n      0.8,\n      0.5,\n      0.6,\n      0.7,\n      0.8,\n      0.7,\n      0.1,\n      0.2,\n      0.3,\n      0.4,\n      0.2,\n      0.2,\n      0.2,\n      0.2,\n      0.3,\n      0.3,\n      0.3,\n      0.3\n    ];\n\n    if (nData.val < 0) nData.val = 0;\n\n    nData.val++;\n\n    if (nData.val > nMax) {\n      nData.val = 0;\n\n      a.val = b.val = x.val = fx.val = 0.0;\n    } else {\n      a.val = aVec[nData.val - 1];\n      b.val = bVec[nData.val - 1];\n      x.val = xVec[nData.val - 1];\n      fx.val = fxVec[nData.val - 1];\n    }\n  }\n\n  public static betaln(a0: number, b0: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc BETALN evaluates the logarithm of the Beta function.\n    // C\n    // C     E = 0.5*LN(2*PI)\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const e = 0.918938533204673;\n\n    let a = 0.0;\n    let b = 0.0;\n    let c = 0.0;\n    let h = 0.0;\n    let i = 0;\n    let n = 0;\n    let u = 0.0;\n    let v = 0.0;\n    let w = 0.0;\n    let z = 0.0;\n\n    a = Math.min(a0, b0);\n    b = Math.max(a0, b0);\n\n    if (a < 1) {\n      // C\n      // C  PROCEDURE WHEN A .LT. 1\n      // C\n      if (b < 8.0) return Toms708.gamln(a) + Toms708.algdiv(a, b);\n      else return Toms708.gamln(a) + Toms708.gamln(b) - Toms708.gamln(a + b);\n    } else if (a >= 1 && a < 8) {\n      // C\n      // C  PROCEDURE WHEN 1 <= A .LT. 8\n      // C\n      if (a < 2 && b < 2) {\n        return Toms708.gamln(a) + Toms708.gamln(b) - Toms708.gsumln(a, b);\n      } else if (b > 2) {\n        w = 0.0;\n        if (b < 8.0) {\n          // C\n          // C  REDUCTION OF B WHEN B .LT. 8\n          // C\n          n = trunc(b - 1.0);\n          z = 1.0;\n\n          for (i = 1; i <= n; i++) {\n            b--;\n            z *= b / (a + b);\n          }\n\n          return (\n            w +\n            log(z) +\n            (Toms708.gamln(a) + Toms708.gamln(b) - Toms708.gsumln(a, b))\n          );\n        } else return Toms708.gamln(a) + Toms708.algdiv(a, b);\n      } else if (a > 2) {\n        if (b > 1000.0) {\n          // C\n          // C  REDUCTION OF A WHEN B .GT. 1000\n          // C\n          n = trunc(a - 1.0);\n          w = 1.0;\n\n          for (i = 1; i <= n; i++) {\n            a--;\n            w = w * (a / (1.0 + a / b));\n          }\n\n          return (\n            log(w) - n * log(b) + (Toms708.gamln(a) + Toms708.algdiv(a, b))\n          );\n        }\n\n        // C\n        // C  REDUCTION OF A WHEN B <= 1000\n        // C\n\n        n = trunc(a - 1.0);\n        w = 1.0;\n\n        for (i = 1; i <= n; i++) {\n          a--;\n          h = a / b;\n          w *= h / (1.0 + h);\n        }\n\n        w = log(w);\n        if (b < 8.0) {\n          // C\n          // C  REDUCTION OF B WHEN B .LT. 8\n          // C\n          n = trunc(b - 1.0);\n          z = 1.0;\n\n          for (i = 1; i <= n; i++) {\n            b--;\n            z *= b / (a + b);\n          }\n\n          return (\n            w +\n            log(z) +\n            (Toms708.gamln(a) + Toms708.gamln(b) - Toms708.gsumln(a, b))\n          );\n        } else return w + Toms708.gamln(a) + Toms708.algdiv(a, b);\n      }\n    } //else\n    // C\n    // C  PROCEDURE WHEN A .GE. 8\n    // C\n    w = Toms708.bcorr(a, b);\n    h = a / b;\n    c = h / (1.0 + h);\n    u = -((a - 0.5) * log(c));\n    v = b * Toms708.alnrel(h);\n\n    if (u > v) return -0.5 * log(b) + e + w - u - v;\n    else return -0.5 * log(b) + e + w - v - u;\n  }\n\n  public static bfrac(\n    a: number,\n    b: number,\n    x: number,\n    y: number,\n    lambda: number,\n    eps: number\n  ) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc BFRAC: continued fraction expansion for IX(A,B) when A and B are grea\n    // c\n    // C     IT IS ASSUMED THAT  LAMBDA = (A + B)*Y - B.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n\n    let n = 0.0;\n    let yp1 = 0.0;\n    let alpha = 0.0;\n    let c = 0.0;\n    let e = 0.0;\n    let p = 0.0;\n    let r = 0.0;\n    let s = 0.0;\n    let t = 0.0;\n    let w = 0.0;\n    let c0 = 0.0;\n    let c1 = 0.0;\n    let anp1 = 0.0;\n    let bnp1 = 0.0;\n    let r0 = 0.0;\n    let beta = 0.0;\n    let an = 0.0;\n    let bn = 0.0;\n\n    let dResult = Toms708.brcomp(a, b, x, y);\n\n    if (dResult === 0.0) return 0;\n    //\n    c = 1.0 + lambda;\n    c0 = b / a;\n    c1 = 1.0 + 1.0 / a;\n    yp1 = y + 1.0;\n    //\n    n = 0.0;\n    p = 1.0;\n    s = a + 1.0;\n    an = 0.0;\n    bn = 1.0;\n    anp1 = 1.0;\n    bnp1 = c / c1;\n    r = c1 / c;\n\n    // C\n    // C  CONTINUED FRACTION CALCULATION\n    // C\n\n    while (true) {\n      n++;\n      t = n / a;\n      w = n * (b - n) * x;\n      e = a / s;\n      alpha = p * (p + c0) * e * e * (w * x);\n      e = (1.0 + t) / (c1 + t + t);\n      beta = n + w / s + e * (c + n * yp1);\n      p = 1.0 + t;\n      s = s + 2.0;\n      // C\n      // C  UPDATE AN, BN, ANP1, AND BNP1\n      // C\n      t = alpha * an + beta * anp1;\n      an = anp1;\n      anp1 = t;\n      t = alpha * bn + beta * bnp1;\n      bn = bnp1;\n      bnp1 = t;\n      //\n      r0 = r;\n      r = anp1 / bnp1;\n      if (Math.abs(r - r0) <= eps * r) break;\n\n      // C\n      // C  RESCALE AN, BN, ANP1, AND BNP1\n      // C\n      an = an / bnp1;\n      bn = bn / bnp1;\n      anp1 = r;\n      bnp1 = 1.0;\n    }\n    // C\n    // C  Termination\n    // c\n    dResult *= r;\n\n    return dResult;\n  }\n\n  public static bgrat(\n    a: number,\n    b: number,\n    x: number,\n    y: number,\n    w: NumberW,\n    eps: number,\n    ierr: NumberW\n  ) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc BGRAT uses asymptotic expansion for IX(A,B) when B < A.\n    // c\n    // C     ASYMPTOTIC EXPANSION FOR IX(A,B) WHEN A IS LARGER THAN B.\n    // C     THE RESULT OF THE EXPANSION IS ADDED TO W. IT IS ASSUMED\n    // C     THAT A .GE. 15 AND B <= 1.  EPS IS THE TOLERANCE USED.\n    // C     IERR IS A VARIABLE THAT REPORTS THE STATUS OF THE RESULTS.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n\n    let j = 0.0;\n    let l = 0.0;\n    let lnx = 0.0;\n    let nu = 0.0;\n    let n2 = 0.0;\n    let c = new Array<number>(30);\n    let d = new Array<number>(30);\n    let bm1 = 0.0;\n    let nm1 = 0;\n    let i = 0;\n    let n = 0;\n    //double p = 0.0;\n    let q = 0.0;\n    let r = 0.0;\n    let s = 0.0;\n    let t = 0.0;\n    let u = 0.0;\n    let v = 0.0;\n    let z = 0.0;\n    let sum = 0.0;\n    let bp2n = 0.0;\n    let t2 = 0.0;\n    let coef = 0.0;\n    let dj = 0.0;\n    let cn = 0.0;\n\n    bm1 = b - 0.5 - 0.5;\n    nu = a + 0.5 * bm1;\n\n    if (y <= 0.375) {\n      lnx = Toms708.alnrel(-y);\n    } else {\n      lnx = log(x);\n    }\n\n    z = -(nu * lnx);\n\n    if (b * z !== 0.0) {\n      // C\n      // C  COMPUTATION OF THE EXPANSION\n      // C  SET R = EXP(-Z)*Z**B/GAMMA(B)\n      // C\n      r = b * (1.0 + Toms708.gam1(b)) * Math.exp(b * log(z));\n      r *= Math.exp(a * lnx) * Math.exp(0.5 * bm1 * lnx);\n      u = Toms708.algdiv(b, a) + b * log(nu);\n      u = r * Math.exp(-u);\n\n      if (u === 0.0) {\n        ierr.val = 1;\n        return;\n      }\n\n      let p1 = new NumberW(0);\n      let q1 = new NumberW(0);\n      Toms708.grat1(b, z, r, p1, q1, eps);\n\n      // p = p1.val; // not necessary since p is never used\n      q = q1.val;\n      //\n      v = 0.25 * Math.pow(1.0 / nu, 2);\n      t2 = 0.25 * lnx * lnx;\n      l = w.val / u;\n      j = q / r;\n      sum = j;\n      t = 1.0;\n      cn = 1.0;\n      n2 = 0.0;\n\n      for (n = 1; n <= 30; n++) {\n        bp2n = b + n2;\n        j = (bp2n * (bp2n + 1.0) * j + (z + bp2n + 1.0) * t) * v;\n        n2 = n2 + 2.0;\n        t *= t2;\n        cn /= n2 * (n2 + 1.0);\n        c[n - 1] = cn;\n        s = 0.0;\n\n        if (n !== 1) {\n          nm1 = n - 1;\n          coef = b - n;\n          for (i = 1; i <= nm1; i++) {\n            s += coef * c[i - 1] * d[n - i - 1];\n            coef += b;\n          }\n        }\n\n        d[n - 1] = bm1 * cn + s / n;\n        dj = d[n - 1] * j;\n        sum += dj;\n\n        if (sum <= 0.0) {\n          ierr.val = 1;\n          return;\n        }\n\n        if (Math.abs(dj) <= eps * (sum + l)) {\n          break;\n        }\n      }\n      // C\n      // C  ADD THE RESULTS TO W\n      // C\n\n      ierr.val = 0;\n      w.val += u * sum;\n      return;\n    } else {\n      // C\n      // C  The expansion cannot be computed\n      // c\n      ierr.val = 1;\n      return;\n    }\n  }\n\n  public static brcomp(a: number, b: number, x: number, y: number) {\n    // C*********************************************************************72\n    // C\n    // Cc BRCOMP evaluates X**A*Y**B/BETA(A,B).\n    // C\n    // C  Reference:\n    // C\n    // C    Armido Didonato, Alfred Morris,\n    // C    Algorithm 708:\n    // C    Significant Digit // Computation of the Incomplete Beta Function Ratios,\n    // C    ACM Transactions on Mathematical Software,\n    // C    Volume 18, Number 3, 1992, pages 360-373.\n    // C\n    // C\n    // C  // CONST = 1/SQRT(2*PI)\n    // C\n    const Const = 0.398942280401433;\n\n    if (x === 0.0 || y === 0.0) return 0;\n\n    let b0;\n    let a0 = Math.min(a, b);\n    let lnx;\n    let lny;\n    let c;\n\n    if (a0 < 8.0) {\n      if (x <= 0.375) {\n        lnx = log(x);\n        lny = Toms708.alnrel(-x);\n      } else {\n        if (y <= 0.375) {\n          lnx = Toms708.alnrel(-y);\n          lny = log(y);\n        } else {\n          lnx = log(x);\n          lny = log(y);\n        }\n\n        let z = a * lnx + b * lny;\n\n        if (a0 >= 1.0) {\n          z -= Toms708.betaln(a, b);\n          return Math.exp(z);\n        }\n        // C;\n        // C  procedure for a < 1 or b < 1\n        // C\n        b0 = Math.max(a, b);\n\n        if (b0 < 8.0) {\n          if (b0 <= 1.0) {\n            // C\n            // C  algorithm for b0 <= 1\n            // C\n            let dResult = Math.exp(z);\n            if (dResult === 0.0) return 0;\n\n            let apb = a + b;\n            if (apb <= 1.0) {\n              z = 1.0 + Toms708.gam1(apb);\n            } else {\n              let u = a + b - 1.0;\n              z = (1.0 + Toms708.gam1(u)) / apb;\n            }\n            c = (1.0 + Toms708.gam1(a)) * (1.0 + Toms708.gam1(b)) / z;\n            dResult *= a0 * c / (1.0 + a0 / b0);\n            return dResult;\n          }\n        } else {\n          let u = Toms708.gamln1(a0);\n          let n = b0 - 1.0;\n          if (n >= 1) {\n            c = 1.0;\n            for (let i = 1; i <= n; i++) {\n              b0--;\n              c *= b0 / (a0 + b0);\n            }\n            u = log(c) + u;\n          }\n          z -= u;\n          b0--;\n          let apb = a0 + b0;\n          let t;\n\n          if (apb <= 1.0) {\n            t = 1.0 + Toms708.gam1(apb);\n          } else {\n            u = a0 + b0 - 1.0;\n            t = (1.0 + Toms708.gam1(u)) / apb;\n          }\n          return a0 * Math.exp(z) * (1.0 + Toms708.gam1(b0)) / t;\n        }\n        // C\n        // C  algorithm for b0 >= 8\n        // C\n        let u = Toms708.gamln1(a0) + Toms708.algdiv(a0, b0);\n        return a0 * Math.exp(z - u);\n      }\n    }\n    // C\n    // C  procedure for a >= 8 and b >= 8\n    // C\n    let x0;\n    let y0;\n    let lambda;\n    let e;\n    let h;\n    let u;\n    let v;\n    if (a <= b) {\n      h = a / b;\n      x0 = h / (1.0 + h);\n      y0 = 1.0 / (1.0 + h);\n      lambda = a - (a + b) * x;\n    } else {\n      h = b / a;\n      x0 = 1.0 / (1.0 + h);\n      y0 = h / (1.0 + h);\n      lambda = (a + b) * y - b;\n    }\n    e = -lambda / a;\n    if (Math.abs(e) <= 0.6) {\n      u = Toms708.rlog1(e);\n    } else {\n      u = e - log(x / x0);\n    }\n\n    e = lambda / b;\n\n    if (Math.abs(e) > 0.6) {\n      v = Toms708.rlog1(e);\n    } else {\n      v = e - log(y / y0);\n    }\n\n    let z = Math.exp(-(a * u + b * v));\n    return Const * Math.sqrt(b * x0) * z * Math.exp(-Toms708.bcorr(a, b));\n  }\n\n  public static brcmp1(mu: number, a: number, b: number, x: number, y: number) {\n    // C*********************************************************************\n    // C\n    // C BRCMP1 evaluates EXP(MU) * (X**A*Y**B/BETA(A,B)).\n    // C\n    // C  Reference:\n    // C\n    // C    Armido Didonato, Alfred Morris,\n    // C    Algorithm 708:\n    // C    Significant Digit Computation of the Incomplete Beta Function Ratios,\n    // C    ACM Transactions on Mathematical Software,\n    // C    Volume 18, Number 3, 1992, pages 360-373.\n    // C\n\n    // C  const = 1/sqrt(2*pi)\n    // C\n    const invSqrtPi = 0.398942280401433;\n    let c;\n    let u;\n    let apb;\n\n    let a0 = Math.min(a, b);\n\n    if (a0 < 8.0) {\n      let lnx;\n      let lny;\n\n      if (x <= 0.375) {\n        lnx = log(x);\n        lny = Toms708.alnrel(-x);\n      } else {\n        if (y <= 0.375) {\n          lnx = Toms708.alnrel(-y);\n          lny = log(y);\n        } else {\n          lnx = log(x);\n          lny = log(y);\n        }\n      }\n\n      let z = a * lnx + b * lny;\n      if (a0 <= 1.0) {\n        z -= Toms708.betaln(a, b);\n        return Toms708.esum(mu, z);\n      }\n      // C\n      // C  procedure for a < 1 or b < 1\n      // C\n      let b0 = Math.max(a, b);\n      if (b0 >= 8.0) {\n        u = Toms708.gamln1(a0) + Toms708.algdiv(a0, b0);\n        return a0 * Toms708.esum(mu, z - u);\n      }\n\n      if (b0 <= 1.0) {\n        // C\n        // C  algorithm for b0 <= 1\n        // C\n        let dResult = Toms708.esum(mu, z);\n\n        if (dResult === 0.0) return 0;\n\n        apb = a + b;\n\n        if (apb <= 1.0) {\n          z = 1.0 + Toms708.gam1(apb);\n        } else {\n          u = a + b - 1.0;\n          z = (1.0 + Toms708.gam1(u)) / apb;\n        }\n\n        c = (1.0 + Toms708.gam1(a)) * (1.0 + Toms708.gam1(b)) / z;\n        dResult *= a0 * c / (1.0 + a0 / b0);\n        return dResult;\n      }\n      // C\n      // C  algorithm for 1 < b0 < 8\n      // C\n\n      u = Toms708.gamln1(a0);\n      let n = trunc(b0 - 1.0);\n\n      if (n >= 1) {\n        c = 1.0;\n        for (let i = 1; i <= n; i++) {\n          b0 -= 1.0;\n          c = c * (b0 / (a0 + b0));\n        }\n        u = log(c) + u;\n      }\n\n      z -= u;\n      b0 -= 1.0;\n      apb = a0 + b0;\n      let t;\n\n      if (apb <= 1.0) {\n        t = 1.0 + Toms708.gam1(apb);\n      } else {\n        u = a0 + b0 - 1.0;\n        t = (1.0 + Toms708.gam1(u)) / apb;\n      }\n      return a0 * Toms708.esum(mu, z) * (1.0 + Toms708.gam1(b0)) / t;\n    }\n    // C\n    // C  procedure for a= 8 and b >= 8\n    // C\n\n    let h;\n    let x0;\n    let y0;\n    let lambda;\n\n    if (a <= b) {\n      h = a / b;\n      x0 = h / (1.0 + h);\n      y0 = 1.0 / (1.0 + h);\n      lambda = a - (a + b) * x;\n    } else {\n      h = b / a;\n      x0 = 1.0 / (1.0 + h);\n      y0 = h / (1.0 + h);\n      lambda = (a + b) * y - b;\n    }\n\n    let e = -lambda / a;\n\n    if (Math.abs(e) <= 0.6) {\n      u = Toms708.rlog1(e);\n    } else {\n      u = e - log(x / x0);\n    }\n\n    e = lambda / b;\n    let v;\n\n    if (Math.abs(e) <= 0.6) {\n      v = Toms708.rlog1(e);\n    } else {\n      v = e - log(y / y0);\n    }\n\n    let z = Toms708.esum(mu, -(a * u + b * v));\n    return invSqrtPi * Math.sqrt(b * x0) * z * Math.exp(-Toms708.bcorr(a, b));\n  }\n\n  public static bpser(a: number, b: number, x: number, eps: number) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc BPSER evaluates IX(A,B) when B <= 1 or B*X <= 0.7.\n    // c\n    // C     POWER SERIES EXPANSION FOR EVALUATING IX(A,B) WHEN B <= 1\n    // C     OR B*X <= 0.7.  EPS IS THE TOLERANCE USED.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n\n    let n = 0.0;\n    let apb = 0.0;\n    let c = 0.0;\n    let i = 0;\n    let m = 0;\n    let t = 0.0;\n    let u = 0.0;\n    let w = 0.0;\n    let z = 0.0;\n    let tol = 0.0;\n    let sum = 0.0;\n    let a0 = 0.0;\n    let b0 = 0.0;\n    let dResult = 0;\n\n    if (x === 0.0) {\n      return 0;\n    }\n    // C\n    // C  COMPUTE THE FACTOR X**A/(A*BETA(A,B))\n    // C\n    a0 = Math.min(a, b);\n    if (a0 >= 1.0) {\n      z = a * log(x) - Toms708.betaln(a, b);\n      dResult = Math.exp(z) / a;\n    } else {\n      b0 = Math.max(a, b);\n      if (b0 < 8.0) {\n        if (b0 <= 1.0) {\n          // C\n          // C  PROCEDURE FOR A0 .LT. 1 AND B0 <= 1\n          // C\n          dResult = Math.pow(x, a);\n          if (dResult === 0.0) {\n            return 0;\n          }\n          //\n          apb = a + b;\n          if (apb <= 1.0) {\n            z = 1.0 + Toms708.gam1(apb);\n          } else {\n            u = a + b - 1.0;\n            z = (1.0 + Toms708.gam1(u)) / apb;\n          } //\n          c = (1.0 + Toms708.gam1(a)) * (1.0 + Toms708.gam1(b)) / z;\n          dResult *= c * (b / apb);\n        } else {\n          // C\n          // C  PROCEDURE FOR A0 .LT. 1 AND 1 .LT. B0 .LT. 8\n          // C\n          //label40:\n          //\tDummy.label(\"Bpser\",40);\n          u = Toms708.gamln1(a0);\n          m = trunc(b0 - 1.0);\n\n          if (m >= 1) {\n            c = 1.0;\n            for (i = 1; i <= m; i++) {\n              b0--;\n              c *= b0 / (a0 + b0);\n            }\n            u = log(c) + u;\n          }\n\n          z = a * log(x) - u;\n          b0--;\n          apb = a0 + b0;\n\n          if (apb <= 1.0) {\n            t = 1.0 + Toms708.gam1(apb);\n          } else {\n            u = a0 + b0 - 1.0;\n            t = (1.0 + Toms708.gam1(u)) / apb;\n          }\n          dResult = Math.exp(z) * (a0 / a) * (1.0 + Toms708.gam1(b0)) / t;\n        }\n      } else {\n        // b0>8\n        // C\n        // C  PROCEDURE FOR A0 .LT. 1 AND B0 .GE. 8\n        // C\n        u = Toms708.gamln1(a0) + Toms708.algdiv(a0, b0);\n        z = a * log(x) - u;\n        dResult = a0 / a * Math.exp(z);\n      }\n    }\n    if (dResult === 0.0 || a <= 0.1 * eps) {\n      return dResult;\n    }\n    // C\n    // C  Compute the series\n    // c\n    sum = 0.0;\n    n = 0.0;\n    c = 1.0;\n    tol = eps / a;\n\n    do {\n      n++;\n      c *= (0.5 + (0.5 - b / n)) * x;\n      w = c / (a + n);\n      sum += w;\n    } while (Math.abs(w) > tol);\n\n    dResult *= 1.0 + a * sum;\n    return dResult;\n  }\n\n\n\n  public static bratio(\n    a: number,\n    b: number,\n    x: number,\n    y: number,\n    w: NumberW,\n    w1: NumberW,\n    ierr: NumberW\n  ) {\n    //\n    // c*********************************************************************72\n    // C\n    // cc BRATIO evaluates the incomplete Beta function IX(A,B).\n    // c\n    // c  Discussion:\n    // c\n    // C     IT IS ASSUMED THAT A AND B ARE NONNEGATIVE, AND THAT X <= 1\n    // C     AND Y = 1 - X.  BRATIO ASSIGNS W AND W1 THE VALUES\n    // C\n    // C                      W  = IX(A,B)\n    // C                      W1 = 1 - IX(A,B)\n    // C\n    // C     IERR IS A VARIABLE THAT REPORTS THE STATUS OF THE RESULTS.\n    // C     IF NO INPUT ERRORS ARE DETECTED THEN IERR IS SET TO 0 AND\n    // C     W AND W1 ARE COMPUTED. OTHERWISE, IF AN ERROR IS DETECTED,\n    // C     THEN W AND W1 ARE ASSIGNED THE VALUE 0 AND IERR IS SET TO\n    // C     ONE OF THE FOLLOWING VALUES ...\n    // C\n    // C        IERR = 1  IF A OR B IS NEGATIVE\n    // C        IERR = 2  IF A = B = 0\n    // C        IERR = 3  IF X .LT. 0 OR X .GT. 1\n    // C        IERR = 4  IF Y .LT. 0 OR Y .GT. 1\n    // C        IERR = 5  IF X + Y .NE. 1\n    // C        IERR = 6  IF X = A = 0\n    // C        IERR = 7  IF Y = B = 0\n    // C\n    // C     WRITTEN BY ALFRED H. MORRIS, JR.\n    // C        NAVAL SURFACE WARFARE CENTER\n    // C        DAHLGREN, VIRGINIA\n    // C     REVISED ... NOV 1991\n    // c\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    // c\n    // C  EPS IS A MACHINE DEPENDENT CONSTANT. EPS IS THE SMALLEST\n    // C  FLOATING POINT NUMBER FOR WHICH 1.0 + EPS .GT. 1.0\n    // C\n\n    let lambda = 0.0;\n    let ind = 0;\n    let n = 0;\n    let t = 0.0;\n    let eps = 0.0;\n    let z = 0.0;\n    let a0 = 0.0;\n    let b0 = 0.0;\n    let x0 = 0.0;\n    let y0 = 0.0;\n    eps = Toms708.spmpar(1);\n    printer_bratio('eps is: %d', eps);\n    w.val = 0.0;\n    w1.val = 0.0;\n\n    if (a < 0.0 || b < 0.0) {\n      ierr.val = 1;\n      return;\n    }\n\n    if (a === 0.0 && b === 0.0) {\n      ierr.val = 2;\n      return;\n    }\n\n    if (x < 0.0 || x > 1.0) {\n      ierr.val = 3;\n      return;\n    }\n\n    if (y < 0.0 || y > 1.0) {\n      ierr.val = 4;\n      return;\n    }\n\n    z = x + y - 0.5 - 0.5;\n    if (abs(z) > 3.0 * eps) {\n      ierr.val = 5;\n      return;\n    }\n\n    //\n    ierr.val = 0;\n    if (x === 0.0) {\n      if (a === 0.0) {\n        ierr.val = 6;\n        return;\n      } else {\n        w.val = 0.0;\n        w1.val = 1.0;\n        return;\n      }\n    }\n\n    if (y === 0.0) {\n      if (b === 0.0) {\n        ierr.val = 7;\n        return;\n      } else {\n        w.val = 1.0;\n        w1.val = 0.0;\n        return;\n      }\n    }\n\n    if (a === 0.0) {\n      w.val = 1.0;\n      w1.val = 0.0;\n      return;\n    }\n\n    if (b === 0.0) {\n      w.val = 0.0;\n      w1.val = 1.0;\n      return;\n    }\n\n    //\n    eps = Math.max(eps, 1e-15);\n    if (Math.max(a, b) < 1.0e-3 * eps) {\n      w.val = b / (a + b);\n      w1.val = a / (a + b);\n      return;\n    }\n    //\n    ind = 0;\n    a0 = a;\n    b0 = b;\n    x0 = x;\n    y0 = y;\n\n    if (min(a0, b0) <= 1.0) {\n      // C\n      // C  PROCEDURE FOR A0 <= 1 OR B0 <= 1\n      // C\n      if (x <= 0.5) {\n        ind = 1;\n        a0 = b;\n        b0 = a;\n        x0 = y;\n        y0 = x;\n      }\n      //\n\n      if (b0 < min(eps, eps * a0)) {\n        w.val = Toms708.fpser(a0, b0, x0, eps);\n        w1.val = 0.5 + (0.5 - w.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n      if (a0 < min(eps, eps * b0) && b0 * x0 <= 1.0) {\n        w1.val = Toms708.apser(a0, b0, x0, eps);\n        w.val = 0.5 + (0.5 - w1.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      if (Math.max(a0, b0) <= 1.0) {\n        if (a0 >= Math.min(0.2, b0) || Math.pow(x0, a0) <= 0.9) {\n          w.val = Toms708.bpser(a0, b0, x0, eps);\n          w1.val = 0.5 + (0.5 - w.val);\n\n          if (ind === 0) {\n            return;\n          } else {\n            t = w.val;\n            w.val = w1.val;\n            w1.val = t;\n            return;\n          }\n        }\n\n        if (x0 >= 0.3) {\n          w1.val = Toms708.bpser(b0, a0, y0, eps);\n          w.val = 0.5 + (0.5 - w1.val);\n\n          if (ind === 0) {\n            return;\n          } else {\n            t = w.val;\n            w.val = w1.val;\n            w1.val = t;\n            return;\n          }\n        }\n\n        n = 20;\n        w1.val = Toms708.bup(b0, a0, y0, x0, n, eps);\n        b0 += n;\n\n        let ierr1 = new NumberW(0);\n\n        Toms708.bgrat(b0, a0, y0, x0, w1, 15.0 * eps, ierr1);\n        w.val = 0.5 + (0.5 - w1.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n\n        //\n      }\n\n      if (b0 <= 1.0) {\n        w.val = Toms708.bpser(a0, b0, x0, eps);\n        w1.val = 0.5 + (0.5 - w.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      if (x0 >= 0.3) {\n        w1.val = Toms708.bpser(b0, a0, y0, eps);\n        w.val = 0.5 + (0.5 - w1.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      if (x0 < 0.1) {\n        if (pow(x0 * b0, a0) <= 0.7) {\n          w.val = Toms708.bpser(a0, b0, x0, eps);\n          w1.val = 0.5 + (0.5 - w.val);\n\n          if (ind === 0) {\n            return;\n          } else {\n            t = w.val;\n            w.val = w1.val;\n            w1.val = t;\n            return;\n          }\n        }\n      }\n\n      if (b0 > 15.0) {\n        let ierr1 = new NumberW(0);\n\n        Toms708.bgrat(b0, a0, y0, x0, w1, 15.0 * eps, ierr1);\n        w.val = 0.5 + (0.5 - w1.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      n = 20;\n      w1.val = Toms708.bup(b0, a0, y0, x0, n, eps);\n      b0 += n;\n\n      let ierr1 = new NumberW(0);\n\n      Toms708.bgrat(b0, a0, y0, x0, w1, 15.0 * eps, ierr1);\n      w.val = 0.5 + (0.5 - w1.val);\n\n      if (ind === 0) {\n        return;\n      } else {\n        t = w.val;\n        w.val = w1.val;\n        w1.val = t;\n        return;\n      }\n    }\n\n    // C\n    // C  PROCEDURE FOR A0 .GT. 1 AND B0 .GT. 1\n    // C\n\n    if (a <= b) {\n      lambda = a - (a + b) * x;\n    } else {\n      lambda = (a + b) * y - b;\n    }\n\n    if (lambda < 0.0) {\n      ind = 1;\n      a0 = b;\n      b0 = a;\n      x0 = y;\n      y0 = x;\n      lambda = abs(lambda);\n    }\n\n    if (b0 < 40.0 && b0 * x0 <= 0.7) {\n      w.val = Toms708.bpser(a0, b0, x0, eps);\n      w1.val = 0.5 + (0.5 - w.val);\n\n      if (ind === 0) {\n        return;\n      } else {\n        t = w.val;\n        w.val = w1.val;\n        w1.val = t;\n        return;\n      }\n    }\n\n    if (b0 < 40.0) {\n      n = Math.trunc(b0);\n      b0 -= n;\n\n      if (b0 === 0.0) {\n        n--;\n        b0 = 1.0;\n      }\n\n      w.val = Toms708.bup(b0, a0, y0, x0, n, eps);\n\n      if (x0 <= 0.7) {\n        w.val += Toms708.bpser(a0, b0, x0, eps);\n        w1.val = 0.5 + (0.5 - w.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n      if (a0 <= 15.0) {\n        n = 20;\n        w.val += Toms708.bup(a0, b0, x0, y0, n, eps);\n        a0 += n;\n      }\n\n      let ierr1 = new NumberW(0);\n\n      Toms708.bgrat(a0, b0, x0, y0, w, 15.0 * eps, ierr1);\n      w1.val = 0.5 + (0.5 - w.val);\n\n      if (ind === 0) {\n        return;\n      } else {\n        t = w.val;\n        w.val = w1.val;\n        w1.val = t;\n        return;\n      }\n    }\n\n    if (a0 <= b0) {\n      if (a0 <= 100.0) {\n        w.val = Toms708.bfrac(a0, b0, x0, y0, lambda, 15.0 * eps);\n        w1.val = 0.5 + (0.5 - w.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      if (lambda > 0.03 * a0) {\n        w.val = Toms708.bfrac(a0, b0, x0, y0, lambda, 15.0 * eps);\n        w1.val = 0.5 + (0.5 - w.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      w.val = Toms708.basym(a0, b0, lambda, 100.0 * eps);\n      w1.val = 0.5 + (0.5 - w.val);\n\n      if (ind === 0) {\n        return;\n      } else {\n        t = w.val;\n        w.val = w1.val;\n        w1.val = t;\n        return;\n      }\n    } else {\n      if (b0 <= 100.0 || lambda > 0.03 * b0) {\n        w.val = Toms708.bfrac(a0, b0, x0, y0, lambda, 15.0 * eps);\n        w1.val = 0.5 + (0.5 - w.val);\n\n        if (ind === 0) {\n          return;\n        } else {\n          t = w.val;\n          w.val = w1.val;\n          w1.val = t;\n          return;\n        }\n      }\n\n      w.val = Toms708.basym(a0, b0, lambda, 100.0 * eps);\n      w1.val = 0.5 + (0.5 - w.val);\n\n      if (ind === 0) {\n        return;\n      } else {\n        t = w.val;\n        w.val = w1.val;\n        w1.val = t;\n        return;\n      }\n    }\n  }\n\n  static bup(\n    a: number,\n    b: number,\n    x: number,\n    y: number,\n    n: number,\n    eps: number\n  ) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc BUP evaluates IX(A,B) - IX(A + N,B), where N is a positive integer.\n    // c\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360 - 373.\n    // c\n    // C     EPS IS THE TOLERANCE USED.\n    // C\n    // C\n    // C  OBTAIN THE SCALING FACTOR EXP(-MU) AND EXP(MU)*(X**A*Y**B/BETA(A,B))/\n    // C\n\n    let dResult;\n\n    let mu = 0;\n    let d = 1.0;\n    let t = 0;\n    let r = 0;\n    let w = 0;\n\n    let k;\n    let l;\n    let apb = a + b;\n    let ap1 = a + 1.0;\n\n    if (n !== 1 && a > 1.0) {\n      if (apb >= 1.1 * ap1) {\n        mu = trunc(Math.abs(Toms708.exparg(1)));\n        k = trunc(Toms708.exparg(0));\n\n        if (k < mu) {\n          mu = k;\n        }\n\n        t = mu;\n        d = Math.exp(-t);\n      }\n    }\n\n    dResult = Toms708.brcmp1(mu, a, b, x, y) / a;\n\n    if (n === 1 || dResult === 0.0) {\n      return dResult;\n    }\n\n    let nm1 = n - 1;\n    w = d;\n\n    // C\n    // C  LET K BE THE INDEX OF THE MAXIMUM TERM\n    // C\n\n    k = 0;\n    if (b <= 1.0) {\n      let kp1 = k + 1;\n\n      for (let i = kp1; i <= nm1; i++) {\n        l = i - 1;\n        d = (apb + l) / (ap1 + l) * x * d;\n        w += d;\n\n        if (d <= eps * w) break;\n      }\n\n      return dResult * w;\n    }\n\n    if (y > 1.0e-4) {\n      r = (b - 1.0) * x / y - a;\n\n      if (r < 1.0) {\n        let kp1 = k + 1;\n\n        for (let i = kp1; i <= nm1; i++) {\n          l = i - 1;\n          d = (apb + l) / (ap1 + l) * x * d;\n          w += d;\n\n          if (d <= eps * w) break;\n        }\n\n        return dResult * w;\n      }\n      k = nm1;\n      t = nm1;\n\n      if (r < t) {\n        k = trunc(r);\n      }\n    } else {\n      k = nm1;\n    }\n\n    // C\n    // C  ADD THE INCREASING TERMS OF THE SERIES\n    // C\n    for (let i = 1; i <= k; i++) {\n      l = i - 1;\n      d = (apb + l) / (ap1 + l) * x * d;\n      w += d;\n    }\n\n    if (k === nm1) {\n      return dResult * w;\n    }\n\n    // C\n    // C  ADD THE REMAINING TERMS OF THE SERIES\n    // C\n\n    let kp1 = k + 1;\n\n    for (let i = kp1; i <= nm1; i++) {\n      l = i - 1;\n      d = (apb + l) / (ap1 + l) * x * d;\n      w += d;\n\n      if (d <= eps * w) break;\n    }\n\n    return dResult * w;\n  }\n\n  public static erf(x: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc ERF evaluates the error function.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    //\n    const c = 0.564189583547756;\n    //\n    const a = [\n      0.77105849500132e-4,\n      -0.133733772997339e-2,\n      0.323076579225834e-1,\n      0.479137145607681e-1,\n      0.128379167095513\n    ];\n\n    const b = [0.301048631703895e-2, 0.538971687740286e-1, 0.375795757275549]; //\n\n    const p = [\n      -1.36864857382717e-7,\n      5.64195517478974e-1,\n      7.21175825088309,\n      4.31622272220567e1,\n      1.5298928504694e2,\n      3.39320816734344e2,\n      4.51918953711873e2,\n      3.00459261020162e2\n    ];\n\n    const q = [\n      1.0,\n      1.27827273196294e1,\n      7.70001529352295e1,\n      2.77585444743988e2,\n      6.38980264465631e2,\n      9.3135409485061e2,\n      7.90950925327898e2,\n      3.00459260956983e2\n    ]; //\n\n    const r = [\n      2.10144126479064,\n      2.62370141675169e1,\n      2.13688200555087e1,\n      4.6580782871847,\n      2.82094791773523e-1\n    ];\n\n    const s = [\n      9.4153775055546e1,\n      1.8711481179959e2,\n      9.90191814623914e1,\n      1.80124575948747e1\n    ]; //\n\n    let ax = 0.0;\n    let bot = 0.0;\n    let t = 0.0;\n    let top = 0.0;\n    let x2 = 0.0;\n\n    ax = Math.abs(x);\n    if (ax <= 0.5) {\n      t = x * x;\n      top = (((a[0] * t + a[1]) * t + a[2]) * t + a[3]) * t + a[4] + 1.0;\n      bot = ((b[0] * t + b[1]) * t + b[2]) * t + 1.0;\n      return x * (top / bot);\n      //\n    } else {\n      if (ax <= 4.0) {\n        top =\n          ((((((p[0] * ax + p[1]) * ax + p[2]) * ax + p[3]) * ax + p[4]) * ax +\n            p[5]) *\n            ax +\n            p[6]) *\n          ax +\n          p[7];\n        bot =\n          ((((((q[0] * ax + q[1]) * ax + q[2]) * ax + q[3]) * ax + q[4]) * ax +\n            q[5]) *\n            ax +\n            q[6]) *\n          ax +\n          q[7];\n\n        return x < 0\n          ? -(0.5 + (0.5 - Math.exp(-x * x) * top / bot))\n          : 0.5 + (0.5 - Math.exp(-x * x) * top / bot);\n      } else {\n        if (ax < 5.8) {\n          x2 = x * x;\n          t = 1.0 / x2;\n          top = (((r[0] * t + r[1]) * t + r[2]) * t + r[3]) * t + r[4];\n          bot = (((s[0] * t + s[2]) * t + s[3]) * t + s[3]) * t + 1.0;\n          let dResult = (c - top / (x2 * bot)) / ax;\n          dResult = 0.5 + (0.5 - Math.exp(-x2) * dResult);\n\n          return x < 0 ? -dResult : dResult;\n        } else {\n          return Toms708.sign(1.0, x);\n        }\n      }\n    }\n  }\n\n  public static erfc1(ind: number, x: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc ERFC1 evaluates the complementary error function.\n    // C\n    // C          ERFC1(IND,X) = ERFC(X)            IF IND = 0\n    // C          ERFC1(IND,X) = EXP(X*X)*ERFC(X)   OTHERWISE\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    //\n    const c = 0.564189583547756;\n    //\n    const a = [\n      0.77105849500132e-4,\n      -0.133733772997339e-2,\n      0.323076579225834e-1,\n      0.479137145607681e-1,\n      0.128379167095513\n    ];\n\n    const b = [0.301048631703895e-2, 0.538971687740286e-1, 0.375795757275549];\n\n    const p = [\n      -1.36864857382717e-7,\n      5.64195517478974e-1,\n      7.21175825088309,\n      4.31622272220567e1,\n      1.5298928504694e2,\n      3.39320816734344e2,\n      4.51918953711873e2,\n      3.00459261020162e2\n    ];\n\n    const q = [\n      1.0,\n      1.27827273196294e1,\n      7.70001529352295e1,\n      2.77585444743988e2,\n      6.38980264465631e2,\n      9.3135409485061e2,\n      7.90950925327898e2,\n      3.00459260956983e2\n    ];\n    //\n    const r = [\n      2.10144126479064,\n      2.62370141675169e1,\n      2.13688200555087e1,\n      4.6580782871847,\n      2.82094791773523e-1\n    ];\n\n    const s = [\n      9.4153775055546e1,\n      1.8711481179959e2,\n      9.90191814623914e1,\n      1.80124575948747e1\n    ];\n\n    // C\n    // C  ABS(X) <= 0.5\n    // C\n\n    let dResult = 0.0;\n    let w = 0.0;\n    let ax = 0.0;\n    let e = 0.0;\n    let bot = 0.0;\n    let t = 0.0;\n    let top = 0.0;\n    ax = Math.abs(x);\n\n    if (ax < 0.5) {\n      t = x * x;\n      top = (((a[0] * t + a[1]) * t + a[2]) * t + a[3]) * t + a[4] + 1.0;\n      bot = ((b[0] * t + b[1]) * t + b[2]) * t + 1.0;\n      dResult = 0.5 + (0.5 - x * (top / bot));\n\n      if (ind !== 0) dResult *= Math.exp(t);\n\n      return dResult;\n    } else if (ax <= 4 && ax >= 0.5) {\n      // I don't think the and is necessary - being safe JMC\n      // C\n      // C  0.5 .LT. ABS(X) <= 4\n      // C\n      top =\n        ((((((p[0] * ax + p[1]) * ax + p[2]) * ax + p[3]) * ax + p[4]) * ax +\n          p[5]) *\n          ax +\n          p[6]) *\n        ax +\n        p[7];\n      bot =\n        ((((((q[0] * ax + q[2]) * ax + q[2]) * ax + q[3]) * ax + q[5]) * ax +\n          q[5]) *\n          ax +\n          q[6]) *\n        ax +\n        q[7];\n      dResult = top / bot;\n    } else {\n      // C\n      // C  ABS(X) .GT. 4\n      // C\n      if (x <= -5.6) {\n        // C\n        // C  LIMIT VALUE FOR LARGE NEGATIVE X\n        // C\n        if (ind !== 0) return 2.0 * Math.exp(x * x);\n        else return 2.0;\n      }\n\n      if (ind !== 0) {\n        t = Math.pow(1.0 / x, 2);\n        top = (((r[0] * t + r[1]) * t + r[2]) * t + r[3]) * t + r[4];\n        bot = (((s[0] * t + s[2]) * t + s[3]) * t + s[3]) * t + 1.0;\n        dResult = (c - t * top / bot) / ax;\n      } else {\n        if (x > 100.0 || x * x > -Toms708.exparg(1)) {\n          // C\n          // C  LIMIT VALUE FOR LARGE POSITIVE X WHEN IND = 0\n          // C\n          return 0;\n        }\n      }\n    }\n\n    // C\n    // C  FINAL ASSEMBLY\n    // C\n    if (ind !== 0) {\n      if (x < 0.0) dResult = 2.0 * Math.exp(x * x) - dResult;\n      return dResult;\n    }\n\n    w = x * x;\n    t = w;\n    e = w - t;\n    dResult *= (0.5 + (0.5 - e)) * Math.exp(-t);\n\n    if (x < 0.0) dResult = 2.0 - dResult;\n\n    return dResult;\n  }\n\n  public static esum(mu: number, x: number) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc ESUM evaluates EXP(MU + X).\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360 - 373.\n    // c\n    //\n    let w = 0.0;\n\n    if (x <= 0.0) {\n      if (mu < 0) {\n        w = mu;\n        return Math.exp(w) * Math.exp(x);\n      }\n\n      w = mu + x;\n\n      if (w > 0.0) {\n        w = mu;\n        return Math.exp(w) * Math.exp(x);\n      }\n      return Math.exp(w);\n    }\n\n    if (mu > 0) {\n      w = mu;\n      return Math.exp(w) * Math.exp(x);\n    }\n\n    w = mu + x;\n    if (w < 0.0) {\n      w = mu;\n      return Math.exp(w) * Math.exp(x);\n    }\n\n    return Math.exp(w);\n  }\n\n  public static erf_values(nData: NumberW, x: NumberW, fx: NumberW): void {\n    // C*********************************************************************72\n    // C\n    // C ERF_VALUES returns some values of the ERF or \"error\" function for testing.\n    // C\n    // CModified:\n    // C\n    // C17 April 2001\n    // C\n    // CAuthor:\n    // C\n    // CJohn Burkardt\n    // C\n    // CParameters:\n    // C\n    // CInput/output, integer N_DATA.\n    // COn input, if N_DATA is 0, the first test data is returned, and\n    // CN_DATA is set to the index of the test data.  On each subsequent\n    // Call, N_DATA is incremented and that test data is returned.  When\n    // Cthere is no more test data, N_DATA is set to 0.\n    // C\n    // COutput, real X, the argument of the function.\n    // C\n    // COutput, real FX, the value of the function.\n    // C\n    //\n\n    const nmax = 21;\n\n    const bvec = [\n      0.0,\n      0.112462916,\n      0.2227025892,\n      0.3286267595,\n      0.428392355,\n      0.5204998778,\n      0.6038560908,\n      0.6778011938,\n      0.7421009647,\n      0.7969082124,\n      0.8427007929,\n      0.8802050696,\n      0.9103139782,\n      0.9340079449,\n      0.9522851198,\n      0.9661051465,\n      0.9763483833,\n      0.9837904586,\n      0.9890905016,\n      0.9927904292,\n      0.995322265\n    ];\n\n    let xvec = [\n      0.0,\n      0.1,\n      0.2,\n      0.3,\n      0.4,\n      0.5,\n      0.6,\n      0.7,\n      0.8,\n      0.9,\n      1.0,\n      1.1,\n      1.2,\n      1.3,\n      1.4,\n      1.5,\n      1.6,\n      1.7,\n      1.8,\n      1.9,\n      2.0\n    ];\n\n    if (nData.val < 0) nData.val = 0;\n\n    nData.val++;\n\n    if (nmax < nData.val) {\n      nData.val = 0;\n      x.val = 0.0;\n      fx.val = 0.0;\n    } else {\n      x.val = xvec[nData.val - 1];\n      fx.val = bvec[nData.val - 1];\n    }\n  }\n\n  public static exparg(l: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc EXPARG returns the largest value for which EXP can be computed.\n    // c\n    // C     IF L = 0 THEN  EXPARG(L) = THE LARGEST POSITIVE W FOR WHICH\n    // C     EXP(W) CAN BE COMPUTED.\n    // C\n    // C     IF L IS NONZERO THEN  EXPARG(L) = THE LARGEST NEGATIVE W FOR\n    // C     WHICH THE COMPUTED VALUE OF EXP(W) IS NONZERO.\n    // C\n    // C     NOTE... ONLY AN APPROXIMATE VALUE FOR EXPARG(L) IS NEEDED.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n\n    let lnb = 0.0;\n    let m = 0;\n    let b = Toms708.ipmpar(4);\n\n    switch (b) {\n      case 2:\n        lnb = 0.69314718055995;\n        break;\n      case 8:\n        lnb = 2.0794415416798;\n        break;\n      case 16:\n        lnb = 2.7725887222398;\n        break;\n      default:\n        lnb = log(b);\n        break;\n    }\n    //\n\n    if (l !== 0) {\n      m = Toms708.ipmpar(6);\n      return 0.99999 * m * lnb;\n    } else {\n      m = Toms708.ipmpar(7);\n      return 0.99999 * m * lnb;\n    }\n  }\n\n  public static fpser(a: number, b: number, x: number, eps: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc FPSER uses a series for IX(A,B) with B < min(eps,eps*A) and X <= 0.5.\n    // c\n    // c  Discussion:\n    // c\n    // C                 EVALUATION OF IX(A,B)\n    // C\n    // C          FOR B .LT. MIN(EPS,EPS*A) AND X .LE. 0.5.\n    // C\n    // C\n    // C                  SET  FPSER = X**A\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360 - 373.\n    // c\n    //\n\n    let c: number = 0.0;\n    let s: number = 0.0;\n    let t: number = 0.0;\n    let tol: number = 0.0;\n    let an: number = 0.0;\n\n    let dResult = 1.0;\n\n    if (a > 1.0e-3 * eps) {\n      dResult = 0.0;\n      t = a * log(x);\n      if (t < Toms708.exparg(1)) {\n        return dResult;\n      }\n      dResult = Math.exp(t);\n    }\n\n    // C\n    // C  NOTE THAT 1/B(A,B) = B\n    // C\n    dResult = b / a * dResult;\n    tol = eps / a;\n    an = a + 1.0;\n    t = x;\n    s = t / an;\n\n    do {\n      an = an + 1.0;\n      t = x * t;\n      c = t / an;\n      s = s + c;\n    } while (Math.abs(c) > tol);\n    //\n    return dResult * (1.0 + a * s);\n  }\n\n  static gam1(a: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc GAM1 evaluates 1/GAMMA(A+1) - 1  for -0.5 <= A <= 1.5\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n\n    const p = [\n      0.577215664901533,\n      -0.409078193005776,\n      -0.230975380857675,\n      0.597275330452234e-1,\n      0.76696818164949e-2,\n      -0.514889771323592e-2,\n      0.589597428611429e-3\n    ];\n\n    const q = [\n      0.1e1,\n      0.427569613095214,\n      0.158451672430138,\n      0.261132021441447e-1,\n      0.423244297896961e-2\n    ];\n\n    const r = [\n      -0.422784335098468,\n      -0.771330383816272,\n      -0.244757765222226,\n      0.118378989872749,\n      0.930357293360349e-3,\n      -0.118290993445146e-1,\n      0.223047661158249e-2,\n      0.266505979058923e-3,\n      -0.132674909766242e-3\n    ];\n\n    const s2 = 0.559398236957378e-1;\n    const s1 = 0.273076135303957;\n    //\n\n    let d = 0.0;\n    let bot = 0.0;\n    let t = 0.0;\n    let w = 0.0;\n    let top = 0.0;\n\n    t = a;\n    d = a - 0.5;\n    if (d > 0.0) {\n      t = d - 0.5;\n    }\n\n    /*{\n      double _arif_tmp = t;\n      if (_arif_tmp < 0)  \n        Dummy.go_to(\"Gam1\",30);\n      else if (_arif_tmp == 0)  \n        Dummy.go_to(\"Gam1\",10);\n      else   Dummy.go_to(\"Gam1\",20);\n    }*/\n    //\n\n    if (t === 0) {\n      return 0;\n    } else if (t > 0) {\n      top =\n        (((((p[6] * t + p[5]) * t + p[4]) * t + p[3]) * t + p[2]) * t + p[1]) *\n        t +\n        p[0];\n      bot = (((q[4] * t + q[3]) * t + q[2]) * t + q[1]) * t + 1.0;\n      w = top / bot;\n\n      if (d <= 0.0) {\n        return a * w;\n      } else {\n        return t / a * (w - 0.5 - 0.5);\n      }\n    } else {\n      // t < 0\n      top =\n        (((((((r[8] * t + r[7]) * t + r[6]) * t + r[5]) * t + r[4]) * t +\n          r[3]) *\n          t +\n          r[2]) *\n          t +\n          r[1]) *\n        t +\n        r[0];\n      bot = (s2 * t + s1) * t + 1.0;\n      w = top / bot;\n\n      if (d <= 0.0) {\n        return a * (w + 0.5 + 0.5);\n      } else {\n        return t * w / a;\n      }\n    }\n  }\n\n  public static grat1(\n    a: number,\n    x: number,\n    r: number,\n    p: NumberW,\n    q: NumberW,\n    eps: number\n  ) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc GRAT1 evaluates P(A,X) and Q(A,X) when A <= 1.\n    // c\n    // C        EVALUATION OF THE INCOMPLETE GAMMA RATIO FUNCTIONS\n    // C                      P(A,X) AND Q(A,X)\n    // C\n    // C     IT IS ASSUMED THAT A <= 1.  EPS IS THE TOLERANCE TO BE USED.\n    // C     THE INPUT ARGUMENT R HAS THE VALUE E**(-X)*X**A/GAMMA(A).\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n\n    let j = 0.0;\n    let l = 0.0;\n    let am0 = 0.0;\n    let an0 = 0.0;\n    let a2n = 0.0;\n    let b2n = 0.0;\n    let cma = 0.0;\n    let c = 0.0;\n    let g = 0.0;\n    let h = 0.0;\n    let t = 0.0;\n    let w = 0.0;\n    let z = 0.0;\n    let tol = 0.0;\n    let sum = 0.0;\n    let a2nm1 = 0.0;\n    let b2nm1 = 0.0;\n    let an = 0.0;\n\n    if (a * x === 0.0) {\n      if (x <= a) {\n        p.val = 0.0;\n        q.val = 1.0;\n        return;\n      } else {\n        p.val = 1.0;\n        q.val = 0.0;\n        return;\n      }\n    }\n\n    if (a === 0.5) {\n      if (x < 0.25) {\n        p.val = Toms708.erf(Math.sqrt(x));\n        q.val = 0.5 + (0.5 - p.val);\n        return;\n      } else {\n        q.val = Toms708.erfc1(0, Math.sqrt(x));\n        p.val = 0.5 + (0.5 - q.val);\n        return;\n      }\n    }\n\n    if (x < 1.1) {\n      // C\n      // C  TAYLOR SERIES FOR P(A,X)/X**A\n      // C\n      an = 3.0;\n      c = x;\n      sum = x / (a + 3.0);\n      tol = 0.1 * eps / (a + 1.0);\n\n      do {\n        an++;\n        c = -c * (x / an);\n        t = c / (a + an);\n        sum = sum + t;\n      } while (Math.abs(t) > tol);\n\n      j = a * x * ((sum / 6.0 - 0.5 / (a + 2.0)) * x + 1.0 / (a + 1.0));\n      //\n      z = a * log(x);\n      h = Toms708.gam1(a);\n      g = 1.0 + h;\n\n      if (x < 0.25) {\n        if (z > -0.13394) {\n          l = Toms708.rexp(z);\n          w = 0.5 + (0.5 + l);\n          q.val = (w * j - l) * g - h;\n\n          if (q.val < 0.0) {\n            p.val = 1.0;\n            q.val = 0.0;\n            return;\n          }\n\n          p.val = 0.5 + (0.5 - q.val);\n          return;\n        } else {\n          w = Math.exp(z);\n          p.val = w * g * (0.5 + (0.5 - j));\n          q.val = 0.5 + (0.5 - p.val);\n          return;\n        }\n      } else {\n        w = Math.exp(z);\n        p.val = w * g * (0.5 + (0.5 - j));\n        q.val = 0.5 + (0.5 - p.val);\n        return;\n      } //\n    } else {\n      // C\n      // C  CONTINUED FRACTION EXPANSION\n      // C\n\n      a2nm1 = 1.0;\n      a2n = 1.0;\n      b2nm1 = x;\n      b2n = x + (1.0 - a);\n      c = 1.0;\n\n      do {\n        a2nm1 = x * a2n + c * a2nm1;\n        b2nm1 = x * b2n + c * b2nm1;\n        am0 = a2nm1 / b2nm1;\n        c++;\n        cma = c - a;\n        a2n = a2nm1 + cma * a2n;\n        b2n = b2nm1 + cma * b2n;\n        an0 = a2n / b2n;\n      } while (Math.abs(an0 - am0) >= eps * an0);\n\n      q.val = r * an0;\n      p.val = 0.5 + (0.5 - q.val);\n      return;\n    }\n  }\n\n  public static ipmpar(i: number): number {\n    // c*********************************************************************72\n    // C\n    // cc IPMPAR sets integer machine constants.\n    // c\n    // C     IPMPAR PROVIDES THE INTEGER MACHINE CONSTANTS FOR THE COMPUTER\n    // C     THAT IS USED. IT IS ASSUMED THAT THE ARGUMENT I IS AN INTEGER\n    // C     HAVING ONE OF THE VALUES 1-10. IPMPAR(I) HAS THE VALUE ...\n    // C\n    // C  INTEGERS.\n    // C\n    // C     ASSUME INTEGERS ARE REPRESENTED IN THE N-DIGIT, BASE-A FORM\n    // C\n    // C               SIGN ( X(N-1)*A**(N-1) + ... + X(1)*A + X(0) )\n    // C\n    // C               WHERE 0 <= X(I) .LT. A FOR I =0,...,N-1.\n    // C\n    // C     IPMPAR(1)  = A, THE BASE.\n    // C\n    // C     IPMPAR(2)  = N, THE NUMBER OF BASE-A DIGITS.\n    // C\n    // C     IPMPAR(3)  = A**N - 1, THE LARGEST MAGNITUDE.\n    // C\n    // C  FLOATING-POINT NUMBERS.\n    // C\n    // C     IT IS ASSUMED THAT THE SINGLE AND DOUBLE PRECISION doubleING\n    // C     POINT ARITHMETICS HAVE THE SAME BASE, SAY B, AND THAT THE\n    // C     NONZERO NUMBERS ARE REPRESENTED IN THE FORM\n    // C\n    // C               SIGN (B**E) * (X(1)/B + ... + X(M)/B**M)\n    // C\n    // C               WHERE X(I)  = 0,1,...,B-1 FOR I =1,...,M,\n    // C               X(1) .GE. 1, AND EMIN <= E <= EMAX.\n    // C\n    // C     IPMPAR(4)  = B, THE BASE.\n    // C\n    // C  SINGLE-PRECISION\n    // C\n    // C     IPMPAR(5)  = M, THE NUMBER OF BASE-B DIGITS.\n    // C\n    // C     IPMPAR(6)  = EMIN, THE SMALLEST EXPONENT E.\n    // C\n    // C     IPMPAR(7)  = EMAX, THE LARGEST EXPONENT E.\n    // C\n    // C  DOUBLE-PRECISION\n    // C\n    // C     IPMPAR(8)  = M, THE NUMBER OF BASE-B DIGITS.\n    // C\n    // C     IPMPAR(9)  = EMIN, THE SMALLEST EXPONENT E.\n    // C\n    // C     IPMPAR(10)  = EMAX, THE LARGEST EXPONENT E.\n    // C\n    // C\n    // C\n    // C     TO DEFINE THIS FUNCTION FOR THE COMPUTER BEING USED, ACTIVATE\n    // C     THE DATA STATMENTS FOR THE COMPUTER BY REMOVING THE C FROM\n    // C     COLUMN 1. (ALL THE OTHER DATA STATEMENTS SHOULD HAVE C IN\n    // C     COLUMN 1.)\n    // C\n    // C\n    // C\n    // C     IPMPAR IS AN ADAPTATION OF THE FUNCTION I1MACH, WRITTEN BY\n    // C     P.A. FOX, A.D. HALL, AND N.L. SCHRYER (BELL LABORATORIES).\n    // C     IPMPAR WAS FORMED BY A.H. MORRIS (NSWC). THE CONSTANTS ARE\n    // C     FROM BELL LABORATORIES, NSWC, AND OTHER SOURCES.\n    // C\n    const imach = [2, 31, 2147483647, 2, 24, -125, 128, 53, -1021, 1024];\n\n    return imach[i - 1];\n  }\n\n  public static gamma_inc_values(\n    nData: NumberW,\n    a: NumberW,\n    x: NumberW,\n    fx: NumberW\n  ): void {\n    // C *********************************************************************72\n    // C\n    // C  GAMMA_INC_VALUES returns some values of the incomplete Gamma function.\n    // C\n    // C   Discussion:\n    // C\n    // C     The (normalized) incomplete Gamma function P(A,X) is defined as:\n    // C\n    // C       PN(A,X) = 1/Gamma(A) * Integral ( 0 <= T <= X ) T**(A-1) * exp(-T) dT.\n    // C\n    // C     With this definition, for all A and X,\n    // C\n    // C       0 <= PN(A,X) <= 1\n    // C\n    // C     and\n    // C\n    // C       PN(A,INFINITY) = 1.0\n    // C\n    // C     In Mathematica, the function can be evaluated by:\n    // C\n    // C       1 - GammaRegularized[A,X]\n    // C\n    // C   Modified:\n    // C\n    // C     28 August 2004\n    // C\n    // C   Author:\n    // C\n    // C     John Burkardt\n    // C\n    // C   Reference:\n    // C\n    // C     Milton Abramowitz and Irene Stegun,\n    // C     Handbook of Mathematical Functions,\n    // C     US Department of Commerce, 1964.\n    // C\n    // C     Stephen Wolfram,\n    // C     The Mathematica Book,\n    // C     Fourth Edition,\n    // C     Wolfram Media / Cambridge University Press, 1999.\n    // C\n    // C   Parameters:\n    // C\n    // C     Input/output, integer N_DATA.  The user sets N_DATA to 0 before the\n    // C     first call.  On each call, the routine increments N_DATA by 1, and\n    // C     returns the corresponding data; when there is no more data, the\n    // C     output value of N_DATA will be 0 again.\n    // C\n    // C     Output, real ( kind = 4 ) A, the parameter of the function.\n    // C\n    // C     Output, real ( kind = 4 ) X, the argument of the function.\n    // C\n    // C     Output, real ( kind = 4 ) FX, the value of the function.\n    // C\n    let nMax = 20;\n\n    const aVec = [\n      0.1,\n      0.1,\n      0.1,\n      0.5,\n      0.5,\n      0.5,\n      0.1e1,\n      0.1e1,\n      0.1e1,\n      0.11e1,\n      0.11e1,\n      0.11e1,\n      0.2e1,\n      0.2e1,\n      0.2e1,\n      0.6e1,\n      0.6e1,\n      0.11e2,\n      0.26e2,\n      0.41e2\n    ];\n\n    const fxVec = [\n      0.7382350532339351,\n      0.9083579897300343,\n      0.9886559833621947,\n      0.3014646416966613,\n      0.7793286380801532,\n      0.9918490284064973,\n      0.9516258196404043e-1,\n      0.6321205588285577,\n      0.9932620530009145,\n      0.7205974576054322e-1,\n      0.5891809618706485,\n      0.9915368159845525,\n      0.01018582711118352,\n      0.4421745996289254,\n      0.9927049442755639,\n      0.4202103819530612e-1,\n      0.9796589705830716,\n      0.9226039842296429,\n      0.4470785799755852,\n      0.7444549220718699\n    ];\n\n    const xVec = [\n      0.3e-1,\n      0.3,\n      0.15e1,\n      0.75e-1,\n      0.75,\n      0.35e1,\n      0.1,\n      0.1e1,\n      0.5e1,\n      0.1,\n      0.1e1,\n      0.5e1,\n      0.15,\n      0.15e1,\n      0.7e1,\n      0.25e1,\n      0.12e2,\n      0.16e2,\n      0.25e2,\n      0.45e2\n    ];\n\n    if (nData.val < 0) nData.val = 0;\n\n    nData.val++;\n\n    if (nMax < nData.val) {\n      nData.val = 0;\n      a.val = 0.0;\n      x.val = 0.0;\n      fx.val = 0.0;\n    } else {\n      a.val = aVec[nData.val - 1];\n      x.val = xVec[nData.val - 1];\n      fx.val = fxVec[nData.val - 1];\n    }\n  }\n\n  public static gamma_log_values(nData: NumberW, x: NumberW, fx: NumberW) {\n    // C *********************************************************************72\n    // C\n    // C  GAMMA_LOG_VALUES returns some values of the Log Gamma function for testing.\n    // C\n    // C   Modified:\n    // C\n    // C     17 April 2001\n    // C\n    // C   Author:\n    // C\n    // C     John Burkardt\n    // C\n    // C   Reference:\n    // C\n    // C     Milton Abramowitz and Irene Stegun,\n    // C     Handbook of Mathematical Functions,\n    // C     US Department of Commerce, 1964.\n    // C\n    // C   Parameters:\n    // C\n    // C     Input/output, integer N_DATA.\n    // C     On input, if N_DATA is 0, the first test data is returned, and\n    // C     N_DATA is set to the index of the test data.  On each subsequent\n    // C     call, N_DATA is incremented and that test data is returned.  When\n    // C     there is no more test data, N_DATA is set to 0.\n    // C\n    // C     Output, real X, the argument of the function.\n    // C\n    // C     Output, real FX, the value of the function.\n    // C\n    const nmax = 18;\n\n    const bvec = [\n      1.524064183,\n      0.7966780066,\n      0.3982337117,\n      0.1520599127,\n      0.0,\n      -0.04987246543,\n      -0.08537410945,\n      -0.1081747934,\n      -0.119612895,\n      -0.120782204,\n      -0.1125917658,\n      -0.09580771625,\n      -0.07108385116,\n      -0.0389842838,\n      0.0,\n      12.80182743,\n      39.33988571,\n      71.25704193\n    ];\n\n    const xvec = [\n      0.2,\n      0.4,\n      0.6,\n      0.8,\n      1.0,\n      1.1,\n      1.2,\n      1.3,\n      1.4,\n      1.5,\n      1.6,\n      1.7,\n      1.8,\n      1.9,\n      2.0,\n      10.0,\n      20.0,\n      30.0\n    ];\n\n    if (nData.val < 0) nData.val = 0;\n\n    nData.val++;\n\n    if (nmax < nData.val) {\n      nData.val = 0;\n      x.val = 0.0;\n      fx.val = 0.0;\n    } else {\n      x.val = xvec[nData.val - 1];\n      fx.val = bvec[nData.val - 1];\n    }\n  }\n\n  public static gamln(a: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc GAMLN evaluates LN(GAMMA(A)) for positive A.\n    // C\n    // C     WRITTEN BY ALFRED H. MORRIS\n    // C          NAVAL SURFACE WARFARE CENTER\n    // C          DAHLGREN, VIRGINIA\n    // C\n    // C     D = 0.5*(LN(2*PI) - 1)\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const d = 0.418938533204673;\n    //\n    const c5 = -0.165322962780713e-2;\n    const c4 = 0.837308034031215e-3;\n    const c3 = -0.59520293135187e-3;\n    const c2 = 0.79365066682539e-3;\n    const c1 = -0.277777777760991e-2;\n    const c0 = 0.833333333333333e-1;\n    //\n    let i = 0;\n    let n = 0;\n    let t = 0.0;\n    let w = 0.0;\n\n    if (a <= 0.8) return Toms708.gamln1(a) - log(a);\n\n    if (a <= 2.25) {\n      t = a - 0.5 - 0.5;\n      return Toms708.gamln1(t);\n    }\n\n    if (a < 10.0) {\n      n = trunc(a - 1.25);\n      t = a;\n      w = 1.0;\n\n      for (i = 1; i <= n; i++) {\n        t--;\n        w *= t;\n      }\n      return Toms708.gamln1(t - 1.0) + log(w);\n    }\n\n    t = Math.pow(1.0 / a, 2);\n    w = (((((c5 * t + c4) * t + c3) * t + c2) * t + c1) * t + c0) / a;\n    return d + w + (a - 0.5) * (log(a) - 1.0);\n  }\n\n  public static gamln1(a: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc GAMLN1 evaluates LN(GAMMA(1 + A)) for -0.2 <= A <= 1.25\n    // c\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const p6 = -0.271935708322958e-2;\n    const p5 = -0.673562214325671e-1;\n    const p4 = -0.402055799310489;\n    const p3 = -0.780427615533591;\n    const p2 = -0.168860593646662;\n    const p1 = 0.844203922187225;\n    const p0 = 0.577215664901533;\n    const q6 = 0.667465618796164e-3;\n    const q5 = 0.325038868253937e-1;\n    const q4 = 0.361951990101499;\n    const q3 = 0.156875193295039e1;\n    const q2 = 0.312755088914843e1;\n    const q1 = 0.288743195473681e1;\n    // c\n    const r5 = 0.497958207639485e-3;\n    const r4 = 0.17050248402265e-1;\n    const r3 = 0.156513060486551;\n    const r2 = 0.565221050691933;\n    const r1 = 0.848044614534529;\n    const r0 = 0.422784335098467;\n    const s5 = 0.116165475989616e-3;\n    const s4 = 0.713309612391e-2;\n    const s3 = 0.10155218743983;\n    const s2 = 0.548042109832463;\n    const s1 = 0.124313399877507e1;\n    //\n\n    let w = 0.0;\n    let x = 0.0;\n\n    if (a < 0.6) {\n      w =\n        ((((((p6 * a + p5) * a + p4) * a + p3) * a + p2) * a + p1) * a + p0) /\n        ((((((q6 * a + q5) * a + q4) * a + q3) * a + q2) * a + q1) * a + 1.0);\n\n      return -a * w;\n    }\n\n    x = a - 0.5 - 0.5;\n    w =\n      (((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x + r0) /\n      (((((s5 * x + s4) * x + s3) * x + s2) * x + s1) * x + 1.0);\n\n    return x * w;\n  }\n\n  public static gsumln(a: number, b: number): number {\n    //\n    // c*********************************************************************72\n    // c\n    // cc GSUMLN evaluates LN(GAMMA(A + B)) for 1 <= A <= 2 and 1 <= B <= 2.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    let x = a + b - 2;\n\n    if (x <= 0.25) return Toms708.gamln1(1.0 + x);\n\n    if (x <= 1.25) return Toms708.gamln1(x) + Toms708.alnrel(x);\n\n    return Toms708.gamln1(x - 1.0) + log(x * (1.0 + x));\n  }\n\n  public static psi(xx: number) {\n    //\n    // c*********************************************************************72\n    // C\n    // cc PSI evaluates the Digamma function.\n    // c\n    // C\n    // C     PSI(XX) IS ASSIGNED THE VALUE 0 WHEN THE DIGAMMA FUNCTION CANNOT\n    // C     BE COMPUTED.\n    // C\n    // C     THE MAIN COMPUTATION INVOLVES EVALUATION OF RATIONAL CHEBYSHEV\n    // C     APPROXIMATIONS PUBLISHED IN MATH. COMP. 27, 123-127(1973) BY\n    // C     CODY, STRECOK AND THACHER.\n    // C\n    // C\n    // C     PSI WAS WRITTEN AT ARGONNE NATIONAL LABORATORY FOR THE FUNPACK\n    // C     PACKAGE OF SPECIAL FUNCTION SUBROUTINES. PSI WAS MODIFIED BY\n    // C     A.H. MORRIS (NSWC).\n    // C\n    // C\n    // C  PIOV4  = PI/4\n    // C  DX0  = ZERO OF PSI TO EXTENDED PRECISION\n    // C\n    const piov4 = 0.785398163397448;\n    const dx0 = 1.461632144968362341262659542325721325;\n    // C\n    // C  COEFFICIENTS FOR RATIONAL APPROXIMATION OF\n    // C  PSI(X) / (X - X0),  0.5 <= X <= 3.0\n    // C\n\n    const p1 = [\n      0.89538502298197e-2,\n      0.477762828042627e1,\n      0.142441585084029e3,\n      0.118645200713425e4,\n      0.363351846806499e4,\n      0.413810161269013e4,\n      0.130560269827897e4\n    ];\n\n    const q1 = [\n      0.448452573429826e2,\n      0.520752771467162e3,\n      0.22100079924783e4,\n      0.364127349079381e4,\n      0.1908310765963e4,\n      0.691091682714533e-5\n    ];\n\n    // C\n    // C  COEFFICIENTS FOR RATIONAL APPROXIMATION OF\n    // C  PSI(X) - LN(X) + 1 / (2*X),  X .GT. 3.0\n    // C\n\n    const p2 = [\n      -0.212940445131011e1,\n      -0.701677227766759e1,\n      -0.448616543918019e1,\n      -0.648157123766197\n    ];\n\n    const q2 = [\n      0.322703493791143e2,\n      0.892920700481861e2,\n      0.546117738103215e2,\n      0.777788548522962e1\n    ];\n\n    // C\n    // C  MACHINE DEPENDENT CONSTANTS ...\n    // C\n    // C        XMAX1   = THE SMALLEST POSITIVE doubleING POINT CONSTANT\n    // C                 WITH ENTIRELY INTEGER REPRESENTATION.  ALSO USED\n    // C                 AS NEGATIVE OF LOWER BOUND ON ACCEPTABLE NEGATIVE\n    // C                 ARGUMENTS AND AS THE POSITIVE ARGUMENT BEYOND WHICH\n    // C                 PSI MAY BE REPRESENTED AS ALOG(X).\n    // C\n    // C        XSMALL  = ABSOLUTE ARGUMENT BELOW WHICH PI*COTAN(PI*X)\n    // C                 MAY BE REPRESENTED BY 1/X.\n    // C\n    // C\n\n    let nq = 0;\n    let xsmall = 0.0;\n    let xmax1 = 0.0;\n    let den = 0.0;\n    let i = 0;\n    let aug = 0.0;\n    let m = 0;\n    let n = 0;\n    let sgn = 0.0;\n    let w = 0.0;\n    let x = 0.0;\n    let z = 0.0;\n    let upper = 0.0;\n    let xmx0 = 0.0;\n\n    xmax1 = Toms708.ipmpar(3);\n    xmax1 = Math.min(xmax1, 1.0 / Toms708.spmpar(1));\n    xsmall = 1e-9;\n    //\n    x = xx;\n    aug = 0.0;\n    if (x < 0.5) {\n      // C\n      // C  X .LT. 0.5,  USE REFLECTION FORMULA\n      // C  PSI(1-X)  = PSI(X) + PI * COTAN(PI*X)\n      // C\n      if (Math.abs(x) <= xsmall) {\n        // error exit\n        if (x === 0.0) return 0;\n\n        // C\n        // C  0 .LT. ABS(X) <= XSMALL.  USE 1/X AS A SUBSTITUTE\n        // C  FOR  PI*COTAN(PI*X)\n        // C\n        aug = -1 / x;\n      } else {\n        // C\n        // C  REDUCTION OF ARGUMENT FOR COTAN\n        // C\n        w = -x;\n        sgn = piov4;\n        if (w <= 0.0) {\n          w = -w;\n          sgn = -sgn;\n        }\n        // C\n        // C  MAKE AN ERROR EXIT IF X <= -XMAX1\n        // C\n\n        // error exit\n        if (w >= xmax1) return 0;\n\n        nq = trunc(w);\n        w = w - nq;\n        nq = trunc(w * 4.0);\n        w = 4.0 * (w - nq * 0.25);\n        // C\n        // C  W IS NOW RELATED TO THE FRACTIONAL PART OF  4.0 * X.\n        // C  ADJUST ARGUMENT TO CORRESPOND TO VALUES IN FIRST\n        // C  QUADRANT AND DETERMINE SIGN\n        // C\n        n = nq / 2;\n        if (n + n !== nq) {\n          w = 1.0 - w;\n        }\n        z = piov4 * w;\n        m = n / 2;\n        if (m + m !== n) {\n          sgn = -sgn;\n        }\n        // C\n        // C  DETERMINE FINAL VALUE FOR  -PI*COTAN(PI*X)\n        // C\n        n = (nq + 1) / 2;\n        m = n / 2;\n        m = m + m;\n        if (m === n) {\n          // C\n          // C  CHECK FOR SINGULARITY\n          // C\n          // error exit\n          if (z === 0.0) return 0;\n\n          // C\n          // C  USE COS/SIN AS A SUBSTITUTE FOR COTAN, AND\n          // C  SIN/COS AS A SUBSTITUTE FOR TAN\n          // C\n          aug = sgn * (Math.cos(z) / Math.sin(z) * 4.0);\n        } else {\n          aug = sgn * (Math.sin(z) / Math.cos(z) * 4.0);\n        }\n      }\n      x = 1 - x;\n    }\n    if (x <= 3.0) {\n      // C\n      // C  0.5 <= X <= 3.0\n      // C\n      den = x;\n      upper = p1[1] * x;\n      //\n\n      for (i = 0; i < 5; i++) {\n        den = (den + q1[i]) * x;\n        upper = (upper + p1[i + 1]) * x;\n      }\n\n      //\n      den = (upper + p1[6]) / (den + q1[5]);\n      xmx0 = x - dx0;\n      return den * xmx0 + aug;\n\n      // C\n      // C  IF X .GE. XMAX1, PSI  = LN(X)\n      // C\n    }\n    if (x < xmax1) {\n      // C\n      // C  3.0 .LT. X .LT. XMAX1\n      // C\n      w = 1.0 / (x * x);\n      den = w;\n      upper = p2[0] * w;\n      //\n      for (i = 0; i < 3; i++) {\n        den = (den + q2[i]) * w;\n        upper = (upper + p2[i + 1]) * w;\n      } //  Close for() loop.\n      //\n      aug = upper / (den + q2[3]) - 0.5 / x + aug;\n    }\n\n    return aug + log(x);\n  }\n\n  public static psi_values(n: NumberW, x: NumberW, fx: NumberW) {\n    // C *********************************************************************72\n    // C\n    // C  PSI_VALUES returns some values of the Psi or Digamma function for testing.\n    // C\n    // C   Discussion:\n    // C\n    // C     PSI(X) = d LN ( GAMMA ( X ) ) / d X = GAMMA'(X) / GAMMA(X)\n    // C\n    // C     PSI(1) = - Euler's constant.\n    // C\n    // C     PSI(X+1) = PSI(X) + 1 / X.\n    // C\n    // C   Modified:\n    // C\n    // C     17 May 2001\n    // C\n    // C   Author:\n    // C\n    // C     John Burkardt\n    // C\n    // C   Reference:\n    // C\n    // C     Milton Abramowitz and Irene Stegun,\n    // C     Handbook of Mathematical Functions,\n    // C     US Department of Commerce, 1964.\n    // C\n    // C   Parameters:\n    // C\n    // C     Input/output, integer N.\n    // C     On input, if N is 0, the first test data is returned, and N is set\n    // C     to the index of the test data.  On each subsequent call, N is\n    // C     incremented and that test data is returned.  When there is no more\n    // C     test data, N is set to 0.\n    // C\n    // C     Output, real X, the argument of the function.\n    // C\n    // C     Output, real FX, the value of the function.\n    // C\n    const nmax = 11;\n    const fxvec = [\n      -0.5772156649,\n      -0.4237549404,\n      -0.2890398966,\n      -0.1691908889,\n      -0.0613845446,\n      -0.036489974,\n      0.1260474528,\n      0.2085478749,\n      0.2849914333,\n      0.3561841612,\n      0.4227843351\n    ];\n\n    const xvec = [1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0];\n\n    if (n.val < 0) n.val = 0;\n\n    n.val++;\n\n    if (nmax < n.val) {\n      n.val = 0;\n      x.val = 0.0;\n      fx.val = 0.0;\n    } else {\n      x.val = xvec[n.val - 1];\n      fx.val = fxvec[n.val - 1];\n    }\n  }\n\n  public static r4_epsilon(): number {\n    // C *********************************************************************72\n    // C\n    // C R4_EPSILON returns the round off unit for floating arithmetic.\n    // C\n    // C Discussion:\n    // C\n    // C R4_EPSILON is a number R which is a power of 2 with the property that,\n    // C to the precision of the computer's arithmetic,\n    // C 1 < 1 + R\n    // C but\n    // C 1 = ( 1 + R / 2 )\n    // C\n    // C FORTRAN90 provides the superior library routine\n    // C\n    // C EPSILON ( X )\n    // C\n    // C Modified:\n    // C\n    // C 28 November 2005\n    // C\n    // C Author:\n    // C\n    // C John Burkardt\n    // C\n    // C Parameters:\n    // C\n    // C Output, real R4_EPSILON, the floating point round-off unit.\n    // C\n\n    let r = 1.0;\n    let rTest = 1.0 + r / 2.0;\n\n    while (1.0 < rTest) {\n      r = r / 2.0;\n      rTest = 1.0 + r / 2.0;\n    }\n\n    return r;\n  }\n\n  public static rexp(x: number) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc REXP evaluates the function EXP(X) - 1.\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360 - 373.\n    // c\n    //\n    const q4 = 0.595130811860248e-3;\n    const q3 = -0.119041179760821e-1;\n    const q2 = 0.107141568980644;\n    const q1 = -0.499999999085958;\n    const p2 = 0.238082361044469e-1;\n    const p1 = 0.914041914819518e-9;\n\n    let w = 0.0;\n\n    if (Math.abs(x) <= 0.15) {\n      return (\n        x *\n        (((p2 * x + p1) * x + 1.0) / (((q4 * x + q3) * x + q2) * x + q1) * x +\n          1.0)\n      );\n    } else {\n      w = Math.exp(x);\n\n      if (x <= 0.0) {\n        return w - 0.5 - 0.5;\n      } else {\n        return w * (0.5 + (0.5 - 1.0 / w));\n      }\n    }\n  }\n\n  public static rlog1(x: number) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc RLOG1 evaluates the function X - LN(1 + X).\n    // C\n    // c  Reference:\n    // c\n    // c    Armido Didonato, Alfred Morris,\n    // c    Algorithm 708:\n    // c    Significant Digit Computation of the Incomplete Beta Function Ratio\n    // c    ACM Transactions on Mathematical Software,\n    // c    Volume 18, Number 3, 1992, pages 360-373.\n    // c\n    //\n    const a = 0.566749439387324e-1;\n    const b = 0.456512608815524e-1;\n    //\n    const p2 = 0.620886815375787e-2;\n    const p1 = -0.224696413112536;\n    const p0 = 0.333333333333333;\n    const q2 = 0.354508718369557;\n    const q1 = -0.127408923933623e1;\n    //\n\n    let h = 0.0;\n    let r = 0.0;\n    let t = 0.0;\n    let w = 0.0;\n    let w1 = 0.0;\n\n    if (x < -0.39 || x > 0.57) {\n      w = x + 0.5 + 0.5;\n\n      return x - log(w);\n    }\n\n    if (x < -0.18) {\n      h = x + 0.3;\n      h = h / 0.7;\n      w1 = a - h * 0.3;\n    } else if (x > 0.18) {\n      h = 0.75 * x - 0.25;\n      w1 = b + h / 3.0;\n    } else {\n      // C\n      // C  ARGUMENT REDUCTION\n      // C\n      h = x;\n      w1 = 0.0;\n    }\n\n    // C\n    // C  Series expansion\n    // c\n    r = h / (h + 2.0);\n    t = r * r;\n    w = ((p2 * t + p1) * t + p0) / ((q2 * t + q1) * t + 1.0);\n\n    return 2.0 * t * (1.0 / (1.0 - r) - r * w) + w1;\n    //\n  }\n\n  /**\n   * Fortran floating point transfer of sign (SIGN) intrinsic function.\n   * <p>\n   * Returns:<br>\n   * <ul>\n   *   <li> abs(a1), if a2 &gt;= 0\n   *   <li>-abs(a1), if a2 &lt; 0\n   * </ul>\n   *\n   * @param a1 floating point value\n   * @param a2 sign transfer indicator\n   *\n   * @return equivalent of Fortran SIGN(a1,a2) as described above.\n   *  <p>\n   *  @author Keith Seymour (seymour@cs.utk.edu)\n   */\n  public static sign(a1: number, a2: number): number {\n    return a2 >= 0 ? Math.abs(a1) : -Math.abs(a1);\n  }\n\n  public static spmpar(i: number) {\n    //\n    // c*********************************************************************72\n    // c\n    // cc SPMPAR returns single precision real machine constants.\n    // c\n    // C     SPMPAR PROVIDES THE SINGLE PRECISION MACHINE CONSTANTS FOR\n    // C     THE COMPUTER BEING USED. IT IS ASSUMED THAT THE ARGUMENT\n    // C     I IS AN INTEGER HAVING ONE OF THE VALUES 1, 2, OR 3. IF THE\n    // C     SINGLE PRECISION ARITHMETIC BEING USED HAS M BASE B DIGITS AND\n    // C     ITS SMALLEST AND LARGEST EXPONENTS ARE EMIN AND EMAX, THEN\n    // C\n    // C        SPMPAR(1)  = B**(1 - M), THE MACHINE PRECISION,\n    // C\n    // C        SPMPAR(2)  = B**(EMIN - 1), THE SMALLEST MAGNITUDE,\n    // C\n    // C        SPMPAR(3)  = B**EMAX*(1 - B**(-M)), THE LARGEST MAGNITUDE.\n    // C\n    // C\n    // C     WRITTEN BY\n    // C        ALFRED H. MORRIS, JR.\n    // C        NAVAL SURFACE WARFARE CENTER\n    // C        DAHLGREN VIRGINIA\n    // C\n    //\n\n    let emin = 0;\n    let emax = 0;\n    let binv = 0.0;\n    let bm1 = 0.0;\n    let ibeta = 0;\n    let b = 0.0;\n    let m = 0;\n    let one = 0.0;\n    let w = 0.0;\n    let z = 0.0;\n\n    if (i > 1) {\n      if (i > 2) {\n        ibeta = Toms708.ipmpar(4);\n        m = Toms708.ipmpar(5);\n        emax = Toms708.ipmpar(7);\n        //\n        b = ibeta;\n        bm1 = ibeta - 1;\n        one = 1.0;\n        z = Math.pow(b, m - 1);\n        w = ((z - one) * b + bm1) / (b * z);\n        //\n        z = Math.pow(b, emax - 2);\n        return w * z * b * b;\n      } else {\n        b = Toms708.ipmpar(4);\n        emin = Toms708.ipmpar(6);\n        one = 1.0;\n        binv = one / b;\n        w = Math.pow(b, emin + 2);\n        return w * binv * binv * binv;\n      }\n    }\n    //else\n    b = Toms708.ipmpar(4);\n    m = Toms708.ipmpar(5);\n    return Math.pow(b, 1 - m);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/common/toms708/toms708.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  feb 27, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n * \n *  License for JS language implementation\n *  https://www.jacob-bogers/libRmath.js/Licenses/\n * \n *  License for R statistical package\n *  https://www.r-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *\tThe density of the exponential distribution.\n */\n\nimport { ML_ERR_return_NAN, R_D__0 } from '../common/_general';\n\nimport * as debug from 'debug';\n\nimport { map } from '../r-func';\n/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nconst { log, exp } = Math;\nconst { isNaN: ISNAN } = Number;\nconst printer = debug('dexp');\n\nexport function dexp<T>(x: T, scale: number, give_log: boolean = false): T {\n  /* NaNs propagated correctly */\n  return map(x)(fx => {\n    if (ISNAN(fx) || ISNAN(scale)) {\n      return NaN;\n    }\n\n    if (scale <= 0.0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (fx < 0) {\n      return R_D__0(give_log);\n    }\n    return give_log ? -fx / scale - log(scale) : exp(-fx / scale) / scale;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/dexp.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { ML_ERR_return_NAN, R_D_exp, R_DT_0 } from '../common/_general';\nimport { map } from '../r-func';\n\nimport * as debug from 'debug';\nimport { R_Log1_Exp } from './expm1';\n\nconst { expm1 } = Math;\nconst { isNaN: ISNAN } = Number;\nconst printer = debug('pexp');\n\nexport function pexp<T>(\n  q: T,\n  scale: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n  return map(q)(fx => {\n    if (ISNAN(fx) || ISNAN(scale)) return fx + scale;\n    if (scale < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (fx <= 0) return R_DT_0(lower_tail, log_p);\n    /* same as weibull( shape = 1): */\n    fx = -(fx / scale);\n    return lower_tail\n      ? log_p ? R_Log1_Exp(fx) : -expm1(fx)\n      : R_D_exp(log_p, fx);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/pexp.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_DT_0, R_Q_P01_check } from '../common/_general';\nimport { map } from '../r-func';\nimport { R_DT_Clog } from './expm1';\n\nconst { isNaN: ISNAN } = Number;\nconst printer = debug('qexp');\n\nexport function qexp<T>(_p: T, scale: number, lower_tail: boolean, log_p: boolean): T {\n  return map(_p)(p => {\n    if (ISNAN(p) || ISNAN(scale)) return p + scale;\n\n    if (scale < 0) return ML_ERR_return_NAN(printer);\n\n    let rc = R_Q_P01_check(log_p, p);\n    if (rc !== undefined) {\n      return rc;\n    }\n    if (p === R_DT_0(lower_tail, log_p)) return 0;\n\n    return -scale * R_DT_Clog(lower_tail, log_p, p);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/qexp.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport { ML_ERR_return_NAN } from '../common/_general';\n\nimport * as debug from 'debug';\nimport { IRNG } from '../rng/irng';\nimport { exp_rand } from './sexp';\n\nconst { isFinite: R_FINITE } = Number;\nconst printer = debug('rexp');\n\nexport function rexp(\n  n: number = 1,\n  scale: number = 1,\n  rng: IRNG\n): number | number[] {\n  const result = new Array(n).fill(0).map(m => {\n    if (!R_FINITE(scale) || scale <= 0.0) {\n      if (scale === 0) return 0;\n      /* else */\n      return ML_ERR_return_NAN(printer);\n    }\n    return scale * exp_rand(rng.unif_rand as any); // --> in ./sexp.c\n  });\n\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/exp/rexp.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_D__0, R_D__1 } from '../common/_general';\n\nimport { dbinom_raw } from '../binomial/dbinom';\nimport { dgamma } from '../gamma/dgamma';\n\nconst { log } = Math;\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer_df = debug('df');\n\nexport function df<T>(\n  xx: T,\n  m: number,\n  n: number,\n  giveLog: boolean = false\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n  const result = fx.map(x => {\n    let p: number;\n    let q: number;\n    let f: number;\n    let dens: number;\n\n    if (ISNAN(x) || ISNAN(m) || ISNAN(n)) {\n      return x + m + n;\n    }\n    if (m <= 0 || n <= 0) {\n      return ML_ERR_return_NAN(printer_df);\n    }\n    if (x < 0) {\n      return R_D__0(giveLog);\n    }\n    if (x === 0) {\n      return m > 2 ? R_D__0(giveLog) : m === 2 ? R_D__1(giveLog) : ML_POSINF;\n    }\n    if (!R_FINITE(m) && !R_FINITE(n)) {\n      /* both +Inf */\n      if (x === 1) {\n        return ML_POSINF;\n      } else {\n        return R_D__0(giveLog);\n      }\n    }\n    if (!R_FINITE(n)) {\n      /* must be +Inf by now */\n      return dgamma(x, m / 2, 2 / m, giveLog);\n    }\n    if (m > 1e14) {\n      /* includes +Inf: code below is inaccurate there */\n      dens = dgamma(1 / x, n / 2, 2 / n, giveLog);\n      return giveLog ? dens - 2 * log(x) : dens / (x * x);\n    }\n\n    f = 1 / (n + x * m);\n    q = n * f;\n    p = x * m * f;\n\n    if (m >= 2) {\n      f = m * q / 2;\n      dens = dbinom_raw((m - 2) / 2, (m + n - 2) / 2, p, q, giveLog);\n    } else {\n      f = m * m * q / (2 * p * (m + n));\n      dens = dbinom_raw(m / 2, (m + n) / 2, p, q, giveLog);\n    }\n    return giveLog ? log(f) + dens : f * dens;\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/df.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_D__0 } from '../common/_general';\n\nimport { dnbeta } from '../beta/dnbeta';\nimport { dnchisq } from '../chi-2/dnchisq';\nimport { dgamma } from '../gamma/dgamma';\n\nconst { log1p, log } = Math;\n\nconst {\n  isFinite: R_FINITE,\n  isNaN: ISNAN,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer = debug('dnf');\n\nexport function dnf<T>(\n  xx: T,\n  df1: number,\n  df2: number,\n  ncp: number,\n  giveLog: boolean\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n  const result = fx.map(x => {\n    let y: number;\n    let z: number;\n    let f: number;\n\n    if (ISNAN(x) || ISNAN(df1) || ISNAN(df2) || ISNAN(ncp)) {\n      return x + df2 + df1 + ncp;\n    }\n\n    /* want to compare dnf(ncp=0) behavior with df() one, hence *NOT* :\n     * if (ncp == 0)\n     *   return df(x, df1, df2, give_log); */\n\n    if (df1 <= 0 || df2 <= 0 || ncp < 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (x < 0) {\n      return R_D__0(giveLog);\n    }\n    if (!R_FINITE(ncp)) {\n      /* ncp = +Inf -- FIXME?: in some cases, limit exists */\n      return ML_ERR_return_NAN(printer);\n    }\n\n    /* This is not correct for  df1 == 2, ncp > 0 - and seems unneeded:\n     *  if (x == 0.) return(df1 > 2 ? R_D__0 : (df1 == 2 ? R_D__1 : ML_POSINF));\n     */\n    if (!R_FINITE(df1) && !R_FINITE(df2)) {\n      /* both +Inf */\n      /* PR: not sure about this (taken from  ncp==0)  -- FIXME ? */\n      if (x === 1) return ML_POSINF;\n      else return R_D__0(giveLog);\n    }\n    if (!R_FINITE(df2))\n      /* i.e.  = +Inf */\n      return df1 * dnchisq(x * df1, df1, ncp, giveLog);\n    /*\t ==  dngamma(x, df1/2, 2./df1, ncp, give_log)  -- but that does not exist */\n    if (df1 > 1e14 && ncp < 1e7) {\n      /* includes df1 == +Inf: code below is inaccurate there */\n      f =\n        1 +\n        ncp / df1; /* assumes  ncp << df1 [ignores 2*ncp^(1/2)/df1*x term] */\n      z = dgamma(1 / x / f, df2 / 2, 2 / df2, giveLog);\n      return giveLog ? z - 2 * log(x) - log(f) : z / (x * x) / f;\n    }\n\n    y = df1 / df2 * x;\n    z = dnbeta(y / (1 + y), df1 / 2, df2 / 2, ncp, giveLog) as number;\n    return giveLog\n      ? z + log(df1) - log(df2) - 2 * log1p(y)\n      : z * (df1 / df2) / (1 + y) / (1 + y);\n  });\n  return result.length === 1 ? result[0] : result as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/dnf.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_DT_0, R_DT_1, R_P_bounds_01 } from '../common/_general';\n\n//import { INormal } from '../exp/expm1'normal';\nimport { pbeta } from '../beta/pbeta';\nimport { pchisq } from '../chi-2/pchisq';\n\nconst {\n  isNaN: ISNAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  NaN: ML_NAN,\n  isFinite: ML_VALID\n} = Number;\n\nconst { LN2: M_LN2 } = Math;\n\nconst printer_pf = debug('pf');\n\nexport function pf<T>(\n  q: T,\n  df1: number,\n  df2: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const fx: number[] = Array.isArray(q) ? q : [q] as any;\n\n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(df1) || ISNAN(df2)) return x + df2 + df1;\n\n    if (df1 <= 0 || df2 <= 0) {\n      return ML_ERR_return_NAN(printer_pf);\n    }\n\n    let rc = R_P_bounds_01(lowerTail, logP, x, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    /* move to pchisq for very large values - was 'df1 > 4e5' in 2.0.x,\n       now only needed for df1 = Inf or df2 = Inf {since pbeta(0,*)=0} : */\n    if (df2 === ML_POSINF) {\n      if (df1 === ML_POSINF) {\n        if (x < 1) return R_DT_0(lowerTail, logP);\n        if (x === 1) return logP ? -M_LN2 : 0.5;\n        if (x > 1) return R_DT_1(lowerTail, logP);\n      }\n\n      return pchisq(x * df1, df1, lowerTail, logP);\n    }\n\n    if (df1 === ML_POSINF)\n      /* was \"fudge\"\t'df1 > 4e5' in 2.0.x */\n      return pchisq(df2 / x, df2, !lowerTail, logP);\n\n    /* Avoid squeezing pbeta's first parameter against 1 :  */\n    if (df1 * x > df2)\n      x = pbeta(df2 / (df2 + df1 * x), df2 / 2, df1 / 2, !lowerTail, logP);\n    else\n      x = pbeta(df1 * x / (df2 + df1 * x), df1 / 2, df2 / 2, lowerTail, logP);\n\n    return ML_VALID(x) ? x : ML_NAN;\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/pf.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_P_bounds_01 } from '../common/_general';\n\nimport { pnbeta2 } from '../beta/pnbeta';\nimport { pnchisq } from '../chi-2/pnchisq';\n\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer_pnf = debug('pnf');\nexport function pnf<T>(\n  xx: T,\n  df1: number,\n  df2: number,\n  ncp: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n  const result = fx.map(x => {\n    let y;\n\n    if (ISNAN(x) || ISNAN(df1) || ISNAN(df2) || ISNAN(ncp))\n      return x + df2 + df1 + ncp;\n\n    if (df1 <= 0 || df2 <= 0 || ncp < 0) return ML_ERR_return_NAN(printer_pnf);\n    if (!R_FINITE(ncp)) return ML_ERR_return_NAN(printer_pnf);\n    if (!R_FINITE(df1) && !R_FINITE(df2))\n      /* both +Inf */\n      return ML_ERR_return_NAN(printer_pnf);\n\n    let rc = R_P_bounds_01(lowerTail, logP, x, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n    if (df2 > 1e8)\n      /* avoid problems with +Inf and loss of accuracy */\n      return pnchisq(x * df1, df1, ncp, lowerTail, logP);\n\n    y = df1 / df2 * x;\n    return pnbeta2(\n      y / (1 + y),\n      1 / (1 + y),\n      df1 / 2,\n      df2 / 2,\n      ncp,\n      lowerTail,\n      logP\n    );\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/pnf.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nimport { qbeta } from '../beta/qbeta';\nimport { qchisq } from '../chi-2/qchisq';\n\nconst printer = debug('qf');\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  NaN: ML_NAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  isFinite: ML_VALID\n} = Number;\n\nexport function qf<T>(\n  pp: T,\n  df1: number,\n  df2: number,\n  lower_tail: boolean,\n  log_p: boolean\n): T {\n  const fp: number[] = Array.isArray(pp) ? pp : ([pp] as any);\n  const result = fp.map(p => {\n    if (ISNAN(p) || ISNAN(df1) || ISNAN(df2)) return p + df1 + df2;\n\n    if (df1 <= 0 || df2 <= 0) return ML_ERR_return_NAN(printer);\n\n    let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    /* fudge the extreme DF cases -- qbeta doesn't do this well.\n       But we still need to fudge the infinite ones.\n     */\n\n    if (df1 <= df2 && df2 > 4e5) {\n      if (!R_FINITE(df1))\n        /* df1 == df2 == Inf : */\n        return 1;\n      /* else */\n      return qchisq(p, df1, lower_tail, log_p) / df1;\n    }\n    if (df1 > 4e5) {\n      /* and so  df2 < df1 */\n      return df2 / qchisq(p, df2, !lower_tail, log_p);\n    }\n\n    // FIXME: (1/qb - 1) = (1 - qb)/qb; if we know qb ~= 1, should use other tail\n    p = (1 / qbeta(p, df2 / 2, df1 / 2, !lower_tail, log_p) - 1) * (df2 / df1);\n    return ML_VALID(p) ? p : ML_NAN;\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/qf.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\n\nimport { qnbeta } from '../beta/qnbeta';\nimport { qnchisq } from '../chi-2/qnchisq';\n\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\n\nconst printer = debug('qnf');\n\nexport function qnf<T>(\n  pp: T,\n  df1: number,\n  df2: number,\n  ncp: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const fp: number[] = Array.isArray(pp) ? pp : ([pp] as any);\n\n  const result = fp.map(p => {\n    let y;\n\n    if (ISNAN(p) || ISNAN(df1) || ISNAN(df2) || ISNAN(ncp))\n      return p + df1 + df2 + ncp;\n\n    switch (true) {\n      case df1 <= 0 || df2 <= 0 || ncp < 0:\n      case !R_FINITE(ncp):\n      case !R_FINITE(df1) && !R_FINITE(df2):\n        return ML_ERR_return_NAN(printer);\n      default:\n        // pass through\n        break;\n    }\n    //if (df1 <= 0 || df2 <= 0 || ncp < 0) ML_ERR_return_NAN(printer);\n    //if (!R_FINITE(ncp)) ML_ERR_return_NAN;\n    //if (!R_FINITE(df1) && !R_FINITE(df2)) ML_ERR_return_NAN;\n    let rc = R_Q_P01_boundaries(lowerTail, logP, p, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (df2 > 1e8)\n      /* avoid problems with +Inf and loss of accuracy */\n      return qnchisq(p, df1, ncp, lowerTail, logP) / df1;\n\n    y = qnbeta(p, df1 / 2, df2 / 2, ncp, lowerTail, logP);\n    return y / (1 - y) * (df2 / df1);\n  });\n  return result.length === 1 ? result[0] : result as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/qnf.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\n\n\nimport { rchisq } from '../chi-2/rchisq';\nimport { map, seq } from '../r-func';\nimport { IRNGNormal } from '../rng/normal';\n\nconst printer = debug('rf');\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst sequence = seq()();\n\nexport function rf(\n  n: number,\n  n1: number,\n  n2: number,\n  rng: IRNGNormal\n): number | number[] {\n\n  return map(sequence(n))(() => {\n    let v1;\n    let v2;\n    if (ISNAN(n1) || ISNAN(n2) || n1 <= 0 || n2 <= 0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    v1 = R_FINITE(n1) ? (rchisq(1, n1, rng) as number) / n1 : 1;\n    v2 = R_FINITE(n2) ? (rchisq(1, n2, rng) as number) / n2 : 1;\n    return v1 / v2;\n  }) as any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/f-distro/rf.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nconst { max: fmax2, log1p, exp, abs: fabs } = Math;\n\nexport function logspace_add(logx: number, logy: number) {\n  return fmax2(logx, logy) + log1p(exp(-fabs(logx - logy)));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/logspace-add.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport {\n  DBL_MANT_DIG,\n  DBL_MAX_EXP,\n  DBL_MIN_EXP,\n  imin2,\n  M_LOG10_2,\n  R_pow_di\n} from '../common/_general';\nimport { NumberW } from '../common/toms708';\nimport { map, multiplexer } from '../r-func';\n\nconst printer = debug('dpsifn');\n\nconst {\n  NaN: ML_NAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  isNaN: ISNAN,\n  EPSILON: DBL_EPSILON\n} = Number;\n\nconst n_max = 100;\n\nconst {\n  pow,\n  abs: fabs,\n  max: fmax2,\n  min: fmin2,\n  exp,\n  log,\n  sin,\n  cos,\n  PI: M_PI,\n  round,\n  round: R_forceint\n} = Math;\n\n/* From R, currently only used for kode = 1, m = 1 : */\nfunction dpsifn(\n  x: number,\n  n: number,\n  kode: number,\n  m: number,\n  ans: number[],\n  nz: NumberW,\n  ierr: NumberW\n): void {\n  const bvalues = [\n    /* Bernoulli Numbers */\n    1.0,\n    -5.0e-1,\n    1.66666666666666667e-1,\n    -3.33333333333333333e-2,\n    2.38095238095238095e-2,\n    -3.33333333333333333e-2,\n    7.57575757575757576e-2,\n    -2.53113553113553114e-1,\n    1.16666666666666667,\n    -7.09215686274509804,\n    5.49711779448621554e1,\n    -5.29124242424242424e2,\n    6.1921231884057971e3,\n    -8.65802531135531136e4,\n    1.42551716666666667e6,\n    -2.7298231067816092e7,\n    6.01580873900642368e8,\n    -1.51163157670921569e10,\n    4.29614643061166667e11,\n    -1.37116552050883328e13,\n    4.88332318973593167e14,\n    -1.92965793419400681e16\n  ];\n  //  ints\n  let nx: number;\n  let xinc = 0 as number;\n  let xdmln = 0 as number;\n  let i; //i\n  let j; //j\n  let k; //k\n  let mm; //mm\n  let mx; //mx\n  let nn; //nn\n  let np; //np\n  let fn; //fn\n\n  //double\n  let arg;\n  let den;\n  let elim;\n  let eps;\n  let fln;\n  let fx;\n  let rln;\n  let rxsq;\n  let r1m4;\n  let r1m5;\n  let s;\n  let slope;\n  let t;\n  let ta;\n  let tk;\n  let tol;\n  let tols;\n  let tss;\n  let tst;\n  let tt;\n  let t1;\n  let t2;\n  let wdtol;\n  let xdmy = 0;\n  let xln = 0.0; /* -Wall */\n  let xm;\n  let xmin;\n  let xq;\n  let yint;\n  // array\n  let trm = new Array(23).fill(0);\n\n  let trmr = new Array(n_max + 1).fill(0);\n\n  ierr.val = 0;\n\n  if (n < 0 || kode < 1 || kode > 2 || m < 1) {\n    ierr.val = 1;\n    return;\n  }\n\n  if (x <= 0) {\n    /* use\tAbramowitz & Stegun 6.4.7 \"Reflection Formula\"\n         *\tpsi(k, x) = (-1)^k psi(k, 1-x)\t-  pi^{n+1} (d/dx)^n cot(x)\n         */\n    if (x === round(x)) {\n      /* non-positive integer : +Inf or NaN depends on n */\n      for (j = 0; j < m; j++ /* k = j + n : */)\n        ans[j] = (j + n) % 2 ? ML_POSINF : ML_NAN;\n      return;\n    }\n    /* This could cancel badly */\n    dpsifn(1 - x, n, /*kode = */ 1, m, ans, nz, ierr);\n    /* ans[j] === (-1)^(k+1) / gamma(k+1) * psi(k, 1 - x)\n         *\t     for j = 0:(m-1) ,\tk = n + j\n         */\n\n    /* Cheat for now: only work for\t m = 1, n in {0,1,2,3} : */\n    if (m > 1 || n > 3) {\n      /* doesn't happen for digamma() .. pentagamma() */\n      /* not yet implemented */\n      ierr.val = 4;\n      return;\n    }\n    x *= M_PI; /* pi * x */\n    if (n === 0) tt = cos(x) / sin(x);\n    else if (n === 1) tt = -1 / R_pow_di(sin(x), 2);\n    else if (n === 2) tt = 2 * cos(x) / R_pow_di(sin(x), 3);\n    else if (n === 3)\n      tt =\n        -2 *\n        (2 * R_pow_di(cos(x), 2) + 1) /\n        R_pow_di(sin(x), 4); /* can not happen! */\n    else tt = ML_NAN;\n    /* end cheat */\n\n    s = n % 2 ? -1 : 1; /* s = (-1)^n */\n    /* t := pi^(n+1) * d_n(x) / gamma(n+1)\t, where\n         *\t\t   d_n(x) := (d/dx)^n cot(x)*/\n    t1 = t2 = s = 1;\n    for (k = 0, j = k - n; j < m; k++ , j++ , s = -s) {\n      /* k === n+j , s = (-1)^k */\n      t1 *= M_PI; /* t1 === pi^(k+1) */\n      if (k >= 2) t2 *= k; /* t2 === k! === gamma(k+1) */\n      if (j >= 0)\n        /* by cheat above,  tt === d_k(x) */\n        ans[j] = s * (ans[j] + t1 / t2 * tt);\n    }\n    if (n === 0 && kode === 2)\n      /* unused from R, but \"wrong\": xln === 0 :*/\n      ans[0] += xln;\n    return;\n  } /* x <= 0 */\n\n  /* else :  x > 0 */\n  nz.val = 0;\n  xln = log(x);\n  if (kode === 1 && m === 1) {\n    /* the R case  ---  for very large x: */\n    let lrg = 1 / (2 * DBL_EPSILON);\n    if (n === 0 && x * xln > lrg) {\n      ans[0] = -xln;\n      return;\n    } else if (n >= 1 && x > n * lrg) {\n      ans[0] = exp(-n * xln) / n; /* === x^-n / n  ===  1/(n * x^n) */\n      return;\n    }\n  }\n  mm = m;\n  nx = imin2(-DBL_MIN_EXP, DBL_MAX_EXP); /* = 1021 */\n  r1m5 = M_LOG10_2;\n  r1m4 = Number.EPSILON * 0.5;\n  wdtol = fmax2(r1m4, 0.5e-18); /* 1.11e-16 */\n\n  /* elim = approximate exponential over and underflow limit */\n  elim = 2.302 * (nx * r1m5 - 3.0); /* = 700.6174... */\n\n  let L10 = false; // goto flag\n  let L20 = false;\n  let L30 = false;\n\n  while (true) {\n    nn = n + mm - 1;\n    fn = nn;\n    t = (fn + 1) * xln;\n\n    /* overflow and underflow test for small and large x */\n\n    if (fabs(t) > elim) {\n      if (t <= 0.0) {\n        nz.val = 0;\n        ierr.val = 2;\n        return;\n      }\n    } else {\n      if (x < wdtol) {\n        ans[0] = R_pow_di(x, -n - 1);\n        if (mm !== 1) {\n          for (k = 1; k < mm; k++) ans[k] = ans[k - 1] / x;\n        }\n        if (n === 0 && kode === 2) ans[0] += xln;\n        return;\n      }\n\n      /* compute xmin and the number of terms of the series,  fln+1 */\n\n      rln = r1m5 * DBL_MANT_DIG;\n      rln = fmin2(rln, 18.06);\n      fln = fmax2(rln, 3.0) - 3.0;\n      yint = 3.5 + 0.4 * fln;\n      slope = 0.21 + fln * (0.0006038 * fln + 0.008677);\n      xm = yint + slope * fn;\n      mx = (xm >> 0) + 1;\n      xmin = mx;\n      //\n      if (n !== 0) {\n        xm = -2.302 * rln - fmin2(0.0, xln);\n        arg = xm / n;\n        arg = fmin2(0.0, arg);\n        eps = exp(arg);\n        xm = 1.0 - eps;\n        if (fabs(arg) < 1.0e-3) xm = -arg;\n        fln = x * xm / eps;\n        xm = xmin - x;\n        if (xm > 7.0 && fln < 15.0) break;\n      }\n      xdmy = x;\n      xdmln = xln;\n      xinc = 0.0;\n      if (x < xmin) {\n        nx = x >> 0;\n        xinc = xmin - nx;\n        xdmy = x + xinc;\n        xdmln = log(xdmy);\n      }\n\n      /* generate w(n+mm-1, x) by the asymptotic expansion */\n\n      t = fn * xdmln;\n      t1 = xdmln + xdmln;\n      t2 = t + xdmln;\n      tk = fmax2(fabs(t), fmax2(fabs(t1), fabs(t2)));\n      if (tk <= elim) {\n        /* for all but large x */\n        L10 = true;\n        break;\n      } // if\n    } // if else\n    nz.val++; /* underflow */\n    mm--;\n    ans[mm] = 0;\n    if (mm === 0) {\n      return;\n    }\n  } /* end{for()} */\n  if (!L10) {\n    nn = (fln >> 0) + 1;\n    np = n + 1;\n    t1 = (n + 1) * xln;\n    t = exp(-t1);\n    s = t;\n    den = x;\n    for (i = 1; i <= nn; i++) {\n      den += 1;\n      trm[i] = pow(den, -np);\n      s += trm[i];\n    }\n    ans[0] = s;\n    if (n === 0 && kode === 2) ans[0] = s + xln;\n\n    if (mm !== 1) {\n      /* generate higher derivatives, j > n */\n\n      tol = wdtol / 5.0;\n      for (j = 1; j < mm; j++) {\n        t /= x;\n        s = t;\n        tols = t * tol;\n        den = x;\n        for (i = 1; i <= nn; i++) {\n          den += 1;\n          trm[i] /= den;\n          s += trm[i];\n          if (trm[i] < tols) break;\n        } //for\n        ans[j] = s;\n      } //for\n    }\n    return;\n  }\n  //L10:\n  tss = exp(-t);\n  tt = 0.5 / xdmy;\n  t1 = tt;\n  tst = wdtol * tt;\n  if (nn !== 0) t1 = tt + 1.0 / fn;\n  rxsq = 1.0 / (xdmy * xdmy);\n  ta = 0.5 * rxsq;\n  t = (fn + 1) * ta;\n  s = t * bvalues[2];\n  //\n\n  if (fabs(s) >= tst) {\n    tk = 2.0;\n    for (k = 4; k <= 22; k++) {\n      t = t * ((tk + fn + 1) / (tk + 1.0)) * ((tk + fn) / (tk + 2.0)) * rxsq;\n      trm[k] = t * bvalues[k - 1];\n      if (fabs(trm[k]) < tst) break;\n      s += trm[k];\n      tk += 2;\n    } //for\n  } //if\n  s = (s + t1) * tss;\n  // while (true) is a goto capture\n  while (true) {\n    if (xinc !== 0.0) {\n      /* backward recur from xdmy to x */\n\n      nx = xinc >> 0;\n      np = nn + 1;\n      if (nx > n_max) {\n        nz.val = 0;\n        ierr.val = 3;\n        return;\n      } else {\n        if (nn === 0) {\n          L20 = true;\n          break;\n        }\n        xm = xinc - 1.0;\n        fx = x + xm;\n\n        /* this loop should not be changed. fx is accurate when x is small */\n        for (i = 1; i <= nx; i++) {\n          trmr[i] = pow(fx, -np);\n          s += trmr[i];\n          xm -= 1;\n          fx = x + xm;\n        }\n      }\n    }\n\n    ans[mm - 1] = s;\n    if (fn === 0) {\n      L30 = true;\n      break;\n    }\n    /* generate lower derivatives,  j < n+mm-1 */\n    for (j = 2; j <= mm; j++) {\n      fn--;\n      tss *= xdmy;\n      t1 = tt;\n      if (fn !== 0) t1 = tt + 1.0 / fn;\n      t = (fn + 1) * ta;\n      s = t * bvalues[2];\n      if (fabs(s) >= tst) {\n        tk = 4 + fn;\n        for (k = 4; k <= 22; k++) {\n          trm[k] = trm[k] * (fn + 1) / tk;\n          if (fabs(trm[k]) < tst) break;\n          s += trm[k];\n          tk += 2;\n        }\n      }\n      s = (s + t1) * tss;\n      if (xinc !== 0.0) {\n        if (fn === 0) {\n          L20 = true;\n          break;\n        }\n        xm = xinc - 1.0;\n        fx = x + xm;\n        for (i = 1; i <= nx; i++) {\n          trmr[i] = trmr[i] * fx;\n          s += trmr[i];\n          xm -= 1;\n          fx = x + xm;\n        }\n      }\n      ans[mm - j] = s;\n      if (fn === 0) {\n        L30 = true;\n        break;\n        //goto L30;\n      }\n    } //for\n    return;\n  } // goto capture end\n  //L20:\n  printer(L20 ? 'goto L20 was set!' : 'goto L20 was not set');\n\n  if (!L30) {\n    for (i = 1; i <= nx; i++) {\n      s += 1 / (x + (nx - i));\n      /* avoid disastrous cancellation, PR#13714 */\n    }\n  }\n  //L30:\n  if (kode !== 2)\n    /* always */\n    ans[0] = s - xdmln;\n  else if (xdmy !== x) {\n    xq = xdmy / x;\n    ans[0] = s - log(xq);\n  }\n  return;\n} /* dpsifn() */\n\n/*\n#ifdef MATHLIB_STANDALONE\n# define ML_TREAT_psigam(_IERR_)\t\\\n    if(_IERR_ !== 0) {\t\t\t\\\n    errno = EDOM;\t\t\t\\\n    return ML_NAN;\t\t\t\\\n    }\n#else\n# define ML_TREAT_psigam(_IERR_)\t\\\n    if(_IERR_ !== 0)\t\t\t\\\n    return ML_NAN\n#endif\n*/\nconst print_psigamma = debug('psigamma');\n\nexport function psigamma(_x: number | number[], _deriv: number | number[] = 0): number | number[] {\n  /* n-th derivative of psi(x);  e.g., psigamma(x,0) === digamma(x) */\n  // double\n  let ans = [0];\n  // ints\n  let nz = new NumberW();\n  let ierr = new NumberW();\n  return multiplexer(_x, _deriv)((x, deriv) => {\n    let k;\n    let n;\n    nz.val = 0;\n    ierr.val = 0;\n    ans[0] = 0;\n\n    if (ISNAN(x)) return x;\n    deriv = R_forceint(deriv);\n    n = deriv >> 0;\n    if (n > n_max) {\n      print_psigamma('\"deriv = %d > %d (= n_max)', n, n_max);\n      return ML_NAN;\n    }\n    dpsifn(x, n, 1, 1, ans, nz, ierr);\n    if (ierr.val !== 0) {\n      return ML_NAN;\n    }\n\n    /* Now, ans ===  A := (-1)^(n+1) / gamma(n+1) * psi(n, x) */\n    ans[0] = -ans[0]; /* = (-1)^(0+1) * gamma(0+1) * A */\n    for (k = 1; k <= n; k++) ans[0] *= -k; /* = (-1)^(k+1) * gamma(k+1) * A */\n    return ans[0]; /* = psi(n, x) */\n  });\n}\n\n//https://commons.wikimedia.org/wiki/File:Digamma_function_plot.png\n\nexport function digamma(_x: number | number): number | number[] {\n  let ans = [0];\n  let nz = new NumberW();\n  let ierr = new NumberW();\n\n  return map(_x)(x => {\n    ans[0] = 0;\n    nz.val = 0;\n    ierr.val = 0;\n    if (ISNAN(x)) return x;\n    dpsifn(x, 0, 1, 1, ans, nz, ierr);\n    if (ierr.val !== 0) {\n      return ML_NAN;\n    }\n    return -ans[0];\n  });\n}\n\n//https://commons.wikimedia.org/wiki/Category:Polygamma_function#/media/File:Trigamma_function_plot.png\n\nexport function trigamma(_x: number | number[]): number | number[] {\n  let ans = [0];\n  let nz = new NumberW(0);\n  let ierr = new NumberW(0);\n\n  return map(_x)(x => {\n    ans[0] = 0;\n    nz.val = 0;\n    ierr.val = 0;\n\n    if (ISNAN(x)) return x;\n    dpsifn(x, 1, 1, 1, ans, nz, ierr);\n    if (ierr.val !== 0) {\n      return ML_NAN;\n    }\n    return ans[0];\n  });\n}\n//https://commons.wikimedia.org/wiki/Category:Polygamma_function#/media/File:Tetragamma_function_plot.png\nexport function tetragamma(_x: number | number[]): number | number[] {\n  let ans = [0];\n  let nz = new NumberW();\n  let ierr = new NumberW();\n  return map(_x)(x => {\n    ans[0] = 0;\n    nz.val = 0;\n    ierr.val = 0;\n\n    if (ISNAN(x)) return x;\n    dpsifn(x, 2, 1, 1, ans, nz, ierr);\n    if (ierr.val !== 0) {\n      return ML_NAN;\n    }\n    return -2.0 * ans[0];\n  });\n}\n// replaced by psigamma function\nexport function pentagamma(_x: number): number {\n  let ans = [0];\n  let nz = new NumberW();\n  let ierr = new NumberW();\n  return map(_x)(x => {\n    ans[0] = 0;\n    nz.val = 0;\n    ierr.val = 0;\n\n    if (ISNAN(x)) return x;\n    dpsifn(x, 3, 1, 1, ans, nz, ierr);\n    if (ierr.val !== 0) {\n      return ML_NAN;\n    }\n    return 6.0 * ans[0];\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/gamma/polygamma.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { dbinom_raw } from '../binomial/dbinom';\nimport { ML_ERR_return_NAN, R_D__0, R_D_nonint_check } from '../common/_general';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst { round: R_forceint, log } = Math;\n\nconst printer = debug('dgeom');\n\nexport function dgeom<T>(xx: T, p: number, giveLog: boolean = false): T {\n\n  const fx: number[] = Array.isArray(xx) ? xx : [xx] as any;\n\n  const result = fx.map(x => {\n\n    let prob: number;\n\n    if (ISNAN(x) || ISNAN(p)) return x + p;\n\n    if (p <= 0 || p > 1) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    let rc = R_D_nonint_check(giveLog, x, printer);\n    if (rc !== undefined) {\n      return rc;\n    }\n    if (x < 0 || !R_FINITE(x) || p === 0) {\n      return R_D__0(giveLog);\n    }\n    x = R_forceint(x);\n\n    /* prob = (1-p)^x, stable for small p */\n    prob = dbinom_raw(0, x, p, 1 - p, giveLog);\n\n    return giveLog ? log(p) + prob : p * prob;\n  });\n\n  return result.length === 1 ? result[0] : result as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/geometric/dgeom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_DT_0, R_DT_1 } from '../common/_general';\n\nimport { R_DT_Clog } from '../exp/expm1';\n\nconst { expm1, log1p, log, exp, floor } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst printer = debug('pgeom');\n\nexport function pgeom<T>(\n  xx: T,\n  p: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const fx: number[] = Array.isArray(xx) ? xx : ([xx] as any);\n\n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(p)) return x + p;\n\n    if (p <= 0 || p > 1) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (x < 0) return R_DT_0(lowerTail, logP);\n    if (!R_FINITE(x)) return R_DT_1(lowerTail, logP);\n    x = floor(x + 1e-7);\n\n    if (p === 1) {\n      /* we cannot assume IEEE */\n      x = lowerTail ? 1 : 0;\n      return logP ? log(x) : x;\n    }\n    x = log1p(-p) * (x + 1);\n    if (logP) return R_DT_Clog(lowerTail, logP, x);\n    else return lowerTail ? -expm1(x) : exp(x);\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/geometric/pgeom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nimport { R_DT_Clog } from '../exp/expm1';\n\nconst { ceil, max: fmax2, log1p } = Math;\nconst { POSITIVE_INFINITY: ML_POSINF, isNaN: ISNAN } = Number;\nconst printer = debug('qgeom');\n\nexport function qgeom<T>(\n  pp: T,\n  prob: number,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n  const fp: number[] = Array.isArray(pp) ? pp : ([pp] as any);\n\n  const result = fp.map(p => {\n    if (prob <= 0 || prob > 1) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (ISNAN(p) || ISNAN(prob)) return p + prob;\n\n    if (prob === 1) return 0;\n    /* add a fuzz to ensure left continuity, but value must be >= 0 */\n    return fmax2(\n      0,\n      ceil(R_DT_Clog(lower_tail, log_p, p) / log1p(-prob) - 1 - 1e-12)\n    );\n  });\n  return result.length === 1 ? result[0] : result as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/geometric/qgeom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { exp_rand } from '../exp/sexp';\nimport { rpois } from '../poisson/rpois';\nimport { IRNGNormal } from '../rng/normal';\n\nconst { isFinite: R_FINITE } = Number;\n\nconst printer = debug('rgeom');\n\nexport function rgeom(\n  N: number,\n  p: number,\n  rng: IRNGNormal\n): number | number {\n  const result = new Array(N).fill(0).map(() => {\n    if (!R_FINITE(p) || p <= 0 || p > 1) return ML_ERR_return_NAN(printer);\n\n    return rpois(\n      1,\n      exp_rand(rng.unif_rand as any) * ((1 - p) / p),\n      rng\n    ) as number;\n  });\n  return result.length === 1 ? result[0] : (result as any);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/geometric/rgeom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { internal_lbeta } from '../beta/lbeta';\nconst { log } = Math;\n// used by \"qhyper\"\nexport function lfastchoose(n: number, k: number) {\n  return -log(n + 1) - internal_lbeta(n - k + 1, k + 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/hypergeometric/lfastchoose.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_D_Lval, R_DT_0, R_DT_1 } from '../common/_general';\nimport { R_DT_log } from '../exp/expm1';\nimport { map } from '../r-func';\nimport { dhyper } from './dhyper';\n\nconst { floor, round: R_forceint, log1p } = Math;\nconst { EPSILON: DBL_EPSILON, isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\n//NOTE: p[d]hyper is not  typo!!\n//const printer_pdhyper = debug('pdhyper');\n\nfunction pdhyper(\n  x: number,\n  NR: number,\n  NB: number,\n  n: number,\n  log_p: boolean\n): number {\n  /*\n     * Calculate\n     *\n     *\t    phyper (x, NR, NB, n, TRUE, FALSE)\n     *   [log]  ----------------------------------\n     *\t       dhyper (x, NR, NB, n, FALSE)\n     *\n     * without actually calling phyper.  This assumes that\n     *\n     *     x * (NR + NB) <= n * NR\n     *\n     */\n\n  let sum = 0;\n  let term = 1;\n\n  while (x > 0 && term >= DBL_EPSILON * sum) {\n    term *= x * (NB - n + x) / (n + 1 - x) / (NR + 1 - x);\n    sum += term;\n    x--;\n  }\n\n  let ss = sum;\n  return log_p ? log1p(ss) : 1 + ss;\n}\n\n/* FIXME: The old phyper() code was basically used in ./qhyper.c as well\n * -----  We need to sync this again!\n*/\nconst printer_phyper = debug('phyper');\n\nexport function phyper<T>(\n  xx: T,\n  nr: number,\n  nb: number,\n  nn: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  /* Sample of  n balls from  NR red  and\t NB black ones;\t x are red */\n\n  return map(xx)(x => {\n    let d: number;\n    let pd: number;\n    let lower_tail = lowerTail; //copy it gets changed\n    let log_p = logP;\n    let NR = nr;\n    let NB = nb;\n    let n = nn;\n    if (ISNAN(x) || ISNAN(NR) || ISNAN(NB) || ISNAN(n)) return x + NR + NB + n;\n\n    x = floor(x + 1e-7);\n    NR = R_forceint(NR);\n    NB = R_forceint(NB);\n    n = R_forceint(n);\n\n    if (NR < 0 || NB < 0 || !R_FINITE(NR + NB) || n < 0 || n > NR + NB) {\n      return ML_ERR_return_NAN(printer_phyper);\n    }\n\n    if (x * (NR + NB) > n * NR) {\n      /* Swap tails.\t*/\n      let oldNB = NB;\n      NB = NR;\n      NR = oldNB;\n      x = n - x - 1;\n      lower_tail = !lower_tail;\n    }\n\n    if (x < 0) return R_DT_0(lower_tail, log_p);\n    if (x >= NR || x >= n) return R_DT_1(lower_tail, log_p);\n\n    d = dhyper(x, NR, NB, n, log_p);\n    pd = pdhyper(x, NR, NB, n, log_p);\n\n    return log_p\n      ? R_DT_log(lower_tail, log_p, d + pd)\n      : R_D_Lval(lower_tail, d * pd);\n  }) as any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/hypergeometric/phyper.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n//\nimport { rbinom } from '../binomial/rbinom';\nimport {\n  imax2,\n  imin2,\n  M_LN_SQRT_2PI,\n  ML_ERR_return_NAN\n} from '../common/_general';\nimport { IRNG } from '../rng/irng';\nimport { qhyper } from './qhyper';\n//\nconst { log, round: R_forceint, exp, sqrt } = Math;\nconst { isFinite: R_FINITE, MAX_SAFE_INTEGER: INT_MAX } = Number;\nconst printer_afc = debug('afc');\n\n// afc(i) :=  ln( i! )\t[logarithm of the factorial i]\nexport function afc(i: number): number {\n  // If (i > 7), use Stirling's approximation, otherwise use table lookup.\n  const al = [\n    0.0 /*ln(0!)=ln(1)*/,\n    0.0 /*ln(1!)=ln(1)*/,\n    0.69314718055994530941723212145817 /*ln(2) */,\n    1.7917594692280550008124773583807 /*ln(6) */,\n    3.17805383034794561964694160129705 /*ln(24)*/,\n    4.78749174278204599424770093452324,\n    6.57925121201010099506017829290394,\n    8.52516136106541430016553103634712\n    /* 10.60460290274525022841722740072165, approx. value below =\n           10.6046028788027; rel.error = 2.26 10^{-9}\n    \n          FIXME: Use constants and if(n > ..) decisions from ./stirlerr.c\n          -----  will be even *faster* for n > 500 (or so)\n        */\n  ];\n\n  if (i < 0) {\n    printer_afc('rhyper.c: afc(i), i=%d < 0 -- SHOULD NOT HAPPEN!', i);\n    return -1; // unreached\n  }\n  if (i <= 7) {\n    return al[i];\n  }\n  // else i >= 8 :\n  let di = i;\n  let i2 = di * di;\n  return (\n    (di + 0.5) * log(di) -\n    di +\n    M_LN_SQRT_2PI +\n    (0.0833333333333333 - 0.00277777777777778 / i2) / di\n  );\n}\n\nexport function rhyper(\n  N: number,\n  nn1in: number,\n  nn2in: number,\n  kkin: number,\n  rng: IRNG\n): number | number[] {\n\n  const result = new Array(N).fill(0).map(() => {\n    return _rhyper(nn1in, nn2in, kkin, rng);\n  });\n  return result.length === 1 ? result[0] : result;\n\n}\n\n//     rhyper(NR, NB, n) -- NR 'red', NB 'blue', n drawn, how many are 'red'\nconst printer_rhyper = debug('_rhyper');\n\nfunction _rhyper(\n  nn1in: number,\n  nn2in: number,\n  kkin: number,\n  rng: IRNG\n): number {\n  /* extern double afc(int); */\n\n  let nn1 = 0;\n  let nn2 = 0;\n  let kk = 0;\n  let ix = 0; // return value (coerced to double at the very end)\n  let setup1 = false;\n  let setup2 = false;\n\n  /* These should become 'thread_local globals' : */\n  let ks = -1;\n  let n1s = -1;\n  let n2s = -1;\n  let m = 0;\n  let minjx = 0;\n  let maxjx = 0;\n  let k = 0;\n  let n1 = 0;\n  let n2 = 0; // <- not allowing larger integer par\n  let tn = 0;\n\n  // II :\n  let w = 0;\n  // III:\n  let a = 0;\n  let d = 0;\n  let s = 0;\n  let xl = 0;\n  let xr = 0;\n  let kl = 0;\n  let kr = 0;\n  let lamdl = 0;\n  let lamdr = 0;\n  let p1 = 0;\n  let p2 = 0;\n  let p3 = 0;\n\n  /* check parameter validity */\n\n  if (!R_FINITE(nn1in) || !R_FINITE(nn2in) || !R_FINITE(kkin))\n    return ML_ERR_return_NAN(printer_rhyper);\n\n  nn1in = R_forceint(nn1in);\n  nn2in = R_forceint(nn2in);\n  kkin = R_forceint(kkin);\n\n  if (nn1in < 0 || nn2in < 0 || kkin < 0 || kkin > nn1in + nn2in)\n    return ML_ERR_return_NAN(printer_rhyper);\n  if (nn1in >= INT_MAX || nn2in >= INT_MAX || kkin >= INT_MAX) {\n    /* large n -- evade integer overflow (and inappropriate algorithms)\n           -------- */\n    // FIXME: Much faster to give rbinom() approx when appropriate; -> see Kuensch(1989)\n    // Johnson, Kotz,.. p.258 (top) mention the *four* different binomial approximations\n    if (kkin === 1) {\n      // Bernoulli\n      return rbinom(1, kkin, nn1in / (nn1in + nn2in), rng) as number;\n    }\n    // Slow, but safe: return  F^{-1}(U)  where F(.) = phyper(.) and  U ~ U[0,1]\n    return qhyper(rng.unif_rand() as number, nn1in, nn2in, kkin, false, false);\n  }\n  nn1 = nn1in;\n  nn2 = nn2in;\n  kk = kkin;\n\n  /* if new parameter values, initialize */\n  if (nn1 !== n1s || nn2 !== n2s) {\n    setup1 = true;\n    setup2 = true;\n  } else if (kk !== ks) {\n    setup1 = false;\n    setup2 = true;\n  } else {\n    setup1 = false;\n    setup2 = false;\n  }\n  if (setup1) {\n    n1s = nn1;\n    n2s = nn2;\n    tn = nn1 + nn2;\n    if (nn1 <= nn2) {\n      n1 = nn1;\n      n2 = nn2;\n    } else {\n      n1 = nn2;\n      n2 = nn1;\n    }\n  }\n  if (setup2) {\n    ks = kk;\n    if (kk + kk >= tn) {\n      k = tn - kk;\n    } else {\n      k = kk;\n    }\n  }\n  if (setup1 || setup2) {\n    m = (k + 1) * (n1 + 1) / (tn + 2);\n    minjx = imax2(0, k - n2);\n    maxjx = imin2(n1, k);\n\n    printer_rhyper(\n      'rhyper(nn1=%d, nn2=%d, kk=%d), setup: floor(mean)= m=%d, jx in (%d..%d)',\n      nn1,\n      nn2,\n      kk,\n      m,\n      minjx,\n      maxjx\n    );\n  }\n  /* generate random variate --- Three basic cases */\n\n  //let goto_L_finis = false;\n  if (minjx === maxjx) {\n    /* I: degenerate distribution ---------------- */\n\n    printer_rhyper('rhyper(), branch I (degenerate)');\n\n    ix = maxjx;\n    //goto_L_finis = true;\n    //goto L_finis; // return appropriate variate\n  } else if (m - minjx < 10) {\n    // II: (Scaled) algorithm HIN (inverse transformation) ----\n    const scale = 1e25; // scaling factor against (early) underflow\n    const con = 57.5646273248511421;\n    // 25*log(10) = log(scale) { <==> exp(con) == scale }\n    if (setup1 || setup2) {\n      let lw; // log(w);  w = exp(lw) * scale = exp(lw + log(scale)) = exp(lw + con)\n      if (k < n2) {\n        lw = afc(n2) + afc(n1 + n2 - k) - afc(n2 - k) - afc(n1 + n2);\n      } else {\n        lw = afc(n1) + afc(k) - afc(k - n2) - afc(n1 + n2);\n      }\n      w = exp(lw + con);\n    }\n    let p = 0;\n    let u = 0;\n    printer_rhyper('rhyper(), branch II; w = %d > 0', w);\n\n    //L10:\n    let goto_L10 = false;\n    while (true) {\n      p = w;\n      ix = minjx;\n      u = (rng.unif_rand() as number) * scale;\n\n      printer_rhyper('  _new_ u = %d', u);\n\n      while (u > p) {\n        u -= p;\n        p *= (n1 - ix) * (k - ix);\n        ix++;\n        p = p / ix / (n2 - k + ix);\n        printer_rhyper('       ix=%d, u=%d, p=%d (u-p=%d)\\n', ix, u, p, u - p);\n        if (ix > maxjx) {\n          goto_L10 = true;\n          break;\n          //goto L10;\n          // FIXME  if(p == 0.)  we also \"have lost\"  => goto L10\n        }\n      }\n      if (!goto_L10) {\n        break;\n      }\n    }\n  } else {\n    /* III : H2PE Algorithm --------------------------------------- */\n    // never used??\n    //let u = 0;\n    // let v = 0;\n\n    if (setup1 || setup2) {\n      s = sqrt((tn - k) * k * n1 * n2 / (tn - 1) / tn / tn);\n\n      /* remark: d is defined in reference without int. */\n      /* the truncation centers the cell boundaries at 0.5 */\n\n      d = 1.5 * s + 0.5;\n      xl = m - d + 0.5;\n      xr = m + d + 0.5;\n      a = afc(m) + afc(n1 - m) + afc(k - m) + afc(n2 - k + m);\n      kl = exp(a - afc(xl) - afc(n1 - xl) - afc(k - xl) - afc(n2 - k + xl));\n      kr = exp(\n        a -\n        afc(xr - 1) -\n        afc(n1 - xr + 1) -\n        afc(k - xr + 1) -\n        afc(n2 - k + xr - 1)\n      );\n      lamdl = -log(xl * (n2 - k + xl) / (n1 - xl + 1) / (k - xl + 1));\n      lamdr = -log((n1 - xr + 1) * (k - xr + 1) / xr / (n2 - k + xr));\n      p1 = d + d;\n      p2 = p1 + kl / lamdl;\n      p3 = p2 + kr / lamdr;\n    }\n\n    printer_rhyper(\n      'rhyper(), branch III {accept/reject}: (xl,xr)= (%d,%d); (lamdl,lamdr)= (%d,%d)\\n',\n      xl,\n      xr,\n      lamdl,\n      lamdr\n    );\n    printer_rhyper('-------- p123= c(%d,%d,%d)\\n', p1, p2, p3);\n\n    let n_uv = 0;\n    //L30:\n    //let goto_L30 = false;\n    while (true) {\n      let u: number = (rng.unif_rand() as number) * p3;\n      let v: number = rng.unif_rand() as number;\n      n_uv++;\n      if (n_uv >= 10000) {\n        printer_rhyper(\n          'rhyper() branch III: giving up after %d rejections',\n          n_uv\n        );\n        return ML_ERR_return_NAN(printer_rhyper);\n      }\n\n      printer_rhyper(' ... L30: new (u=%d, v ~ U[0,1])[%d]\\n', u, n_uv);\n\n      if (u < p1) {\n        /* rectangular region */\n        ix = xl + u;\n      } else if (u <= p2) {\n        /* left tail */\n        ix = xl + log(v) / lamdl;\n        if (ix < minjx) {\n          //goto_L30 = true;\n          continue;\n          //goto L30;\n        }\n        v = v * (u - p1) * lamdl;\n      } else {\n        /* right tail */\n        ix = xr - log(v) / lamdr;\n        if (ix > maxjx) {\n          //goto_L30 = true;\n          continue;\n          //goto L30;\n        }\n        v = v * (u - p2) * lamdr;\n      }\n\n      /* acceptance/rejection test */\n      let reject = true;\n\n      if (m < 100 || ix <= 50) {\n        /* explicit evaluation */\n        /* The original algorithm (and TOMS 668) have\n                   f = f * i * (n2 - k + i) / (n1 - i) / (k - i);\n                   in the (m > ix) case, but the definition of the\n                   recurrence relation on p134 shows that the +1 is\n                   needed. */\n        let i;\n        let f = 1.0;\n        if (m < ix) {\n          for (i = m + 1; i <= ix; i++)\n            f = f * (n1 - i + 1) * (k - i + 1) / (n2 - k + i) / i;\n        } else if (m > ix) {\n          for (i = ix + 1; i <= m; i++)\n            f = f * i * (n2 - k + i) / (n1 - i + 1) / (k - i + 1);\n        }\n        if (v <= f) {\n          reject = false;\n        }\n      } else {\n        const deltal = 0.0078;\n        const deltau = 0.0034;\n\n        let e;\n        let g;\n        let r;\n        let t;\n        let y;\n        let de;\n        let dg;\n        let dr;\n        let ds;\n        let dt;\n        let gl;\n        let gu;\n        let nk;\n        let nm;\n        let ub;\n        let xk;\n        let xm;\n        let xn;\n        let y1;\n        let ym;\n        let yn;\n        let yk;\n        let alv;\n\n        printer_rhyper(\" ... accept/reject 'large' case v=%d\", v);\n\n        /* squeeze using upper and lower bounds */\n        y = ix;\n        y1 = y + 1.0;\n        ym = y - m;\n        yn = n1 - y + 1.0;\n        yk = k - y + 1.0;\n        nk = n2 - k + y1;\n        r = -ym / y1;\n        s = ym / yn;\n        t = ym / yk;\n        e = -ym / nk;\n        g = yn * yk / (y1 * nk) - 1.0;\n        dg = 1.0;\n        if (g < 0.0) dg = 1.0 + g;\n        gu = g * (1.0 + g * (-0.5 + g / 3.0));\n        gl = gu - 0.25 * (g * g * g * g) / dg;\n        xm = m + 0.5;\n        xn = n1 - m + 0.5;\n        xk = k - m + 0.5;\n        nm = n2 - k + xm;\n        ub =\n          y * gu -\n          m * gl +\n          deltau +\n          xm * r * (1 + r * (-0.5 + r / 3.0)) +\n          xn * s * (1 + s * (-0.5 + s / 3.0)) +\n          xk * t * (1 + t * (-0.5 + t / 3.0)) +\n          nm * e * (1 + e * (-0.5 + e / 3.0));\n        /* test against upper bound */\n        alv = log(v);\n        if (alv > ub) {\n          reject = true;\n        } else {\n          /* test against lower bound */\n          dr = xm * (r * r * r * r);\n          if (r < 0.0) dr /= 1.0 + r;\n          ds = xn * (s * s * s * s);\n          if (s < 0.0) ds /= 1.0 + s;\n          dt = xk * (t * t * t * t);\n          if (t < 0.0) dt /= 1.0 + t;\n          de = nm * (e * e * e * e);\n          if (e < 0.0) de /= 1.0 + e;\n          if (\n            alv <\n            ub - 0.25 * (dr + ds + dt + de) + (y + m) * (gl - gu) - deltal\n          ) {\n            reject = false;\n          } else {\n            /** Stirling's formula to machine accuracy\n             */\n            if (\n              alv <=\n              a - afc(ix) - afc(n1 - ix) - afc(k - ix) - afc(n2 - k + ix)\n            ) {\n              reject = false;\n            } else {\n              reject = true;\n            }\n          }\n        }\n      } // else\n      if (reject) {\n        //goto_L30 = true;\n        continue;\n      }\n      break;\n    } // for the goto_L30\n  }\n\n  //L_finis:\n  /* return appropriate variate */\n\n  if (kk + kk >= tn) {\n    if (nn1 > nn2) {\n      ix = kk - nn2 + ix;\n    } else {\n      ix = nn1 - ix;\n    }\n  } else {\n    if (nn1 > nn2) ix = kk - ix;\n  }\n  return ix;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/hypergeometric/rhyper.ts","'use strict';\n\nexport { Beta } from './beta';\nexport { Binomial } from './binomial';\nexport { NegativeBinomial } from './binomial-negative';\nexport { Cauchy } from './cauchy';\nexport { ChebyshevSeries } from './chebyshev';\nexport { ChiSquared } from './chi-2';\nexport { Exponential } from './exp';\nexport { FDist } from './f-distro';\nexport { Gamma } from './gamma';\nexport { Geometric } from './geometric';\nexport { HyperGeometric } from './hypergeometric';\nexport { Logistic } from './logis';\nexport { LogNormal } from './lognormal';\nexport { Multinomial, IdmultinomOptions } from './multinom';\nexport { Normal } from './normal';\nexport { Poisson } from './poisson';\nexport { rng, IRNG, IRNGNormal } from './rng';\nexport { SignRank } from './signrank';\n//  stirling, no need to export, it is a util\nexport { StudentT } from './student-t';\n//  trigonometry, no need to export, it is a util\nexport { Tukey } from './tukey';\nexport { Uniform } from './uniform';\nexport { Weibull } from './weibull';\nexport { Wilcoxon } from './wilcoxon';\n/*\n  Class of Special functions collected here.  \n*/\nimport { special as besselSpecial } from './bessel';\nimport { special as betaSpecial } from './beta';\nimport { special as chooseSpecial } from './common';\nimport { special as gammaSpecial } from './gamma';\n\nexport const special = Object.freeze({\n  ...gammaSpecial,\n  ...betaSpecial,\n  ...chooseSpecial,\n  ...besselSpecial\n});\n\nimport {\n  any,\n  arrayrify,\n  //asVector,\n  asArray,\n  div,\n  each,\n  // forceToArray,\n  flatten,\n  flatten as c, //alias\n  isOdd,\n  ISummary,\n  map,\n  mult,\n  multiplex,\n  multiplexer,\n  numberPrecision,\n  selector,\n  seq,\n  sum,\n  summary,\n  Welch_Satterthwaite\n} from './r-func';\n\nexport { ISummary };\n\nexport const R = {\n  any,\n  arrayrify,\n  asArray,\n  //asVector,\n  div,\n  flatten,\n  isOdd,\n  map,\n  each,\n  mult,\n  multiplex,\n  multiplexer,\n  numberPrecision,\n  selector,\n  seq,\n  sum,\n  summary,\n  Welch_Satterthwaite,\n  c\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/index.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { map } from '../r-func';\n\nconst { log, exp, abs: fabs } = Math;\nconst { isNaN: ISNAN } = Number;\n\nconst printer_dlogis = debug('dlogis');\n\nexport function dlogis<T>(\n  xx: T,\n  location: number = 0,\n  scale: number = 1,\n  give_log: boolean = false\n): T {\n  return map(xx)(x => {\n    let e: number;\n    let f: number;\n\n    if (ISNAN(x) || ISNAN(location) || ISNAN(scale)) return NaN;\n    if (scale <= 0.0) {\n      return ML_ERR_return_NAN(printer_dlogis);\n    }\n\n    x = fabs((x - location) / scale);\n    e = exp(-x);\n    f = 1.0 + e;\n    return give_log ? -(x + log(scale * f * f)) : e / (scale * f * f);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/logis/dlogis.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_P_bounds_Inf_01 } from '../common/_general';\nimport { map } from '../r-func';\n\nconst { exp, log1p } = Math;\nconst { isNaN: ISNAN } = Number;\n\n\nexport function Rf_log1pexp(x: number): number {\n  if (x <= 18) return log1p(exp(x));\n  if (x > 33.3) return x;\n  // else: 18.0 < x <= 33.3 :\n  return x + exp(-x);\n}\n\nconst printer_plogis = debug('plogis');\n\nexport function plogis<T>(\n  xx: T,\n  location: number = 0,\n  scale: number = 1,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n\n\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(location) || ISNAN(scale))\n      return x + location + scale;\n\n    if (scale <= 0.0) {\n      return ML_ERR_return_NAN(printer_plogis);\n    }\n\n    x = (x - location) / scale;\n    if (ISNAN(x)) {\n      return ML_ERR_return_NAN(printer_plogis);\n    }\n    let rc = R_P_bounds_Inf_01(lower_tail, log_p, x);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (log_p) {\n      // log(1 / (1 + exp( +- x ))) = -log(1 + exp( +- x))\n      return -Rf_log1pexp(lower_tail ? -x : x);\n    } else {\n      return 1 / (1 + exp(lower_tail ? -x : x));\n    }\n  }) as any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/logis/plogis.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nimport { R_Log1_Exp } from '../exp/expm1';\n\nimport { map } from '../r-func';\n\nconst {\n  isNaN: ISNAN,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF\n} = Number;\n\nconst { log } = Math;\n\nconst printer_qlogis = debug('qlogis');\n\nexport function qlogis<T>(\n  pp: T,\n  location: number = 0,\n  scale: number = 1,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n  return map(pp)(p => {\n    if (ISNAN(p) || ISNAN(location) || ISNAN(scale))\n      return p + location + scale;\n\n    let rc = R_Q_P01_boundaries(lower_tail, log_p, p, ML_NEGINF, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (scale < 0) {\n      return ML_ERR_return_NAN(printer_qlogis);\n    }\n    if (scale === 0) return location;\n\n    /* p := logit(p) = log( p / (1-p) )\t : */\n    if (log_p) {\n      if (lower_tail) p = p - R_Log1_Exp(p);\n      else p = R_Log1_Exp(p) - p;\n    } else p = log(lower_tail ? p / (1 - p) : (1 - p) / p);\n\n    return location + scale * p;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/logis/qlogis.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { map, seq } from '../r-func';\nimport { IRNG } from '../rng';\n\nconst { log } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst sequence = seq()();\nconst printer_rlogis = debug('rlogis');\n\nexport function rlogis(\n  N: number,\n  location: number = 0,\n  scale: number = 1,\n  rng: IRNG\n): number | number[] {\n  return map(sequence(N))(() => {\n    if (ISNAN(location) || !R_FINITE(scale)) {\n      return ML_ERR_return_NAN(printer_rlogis);\n    }\n\n    if (scale === 0 || !R_FINITE(location)) return location;\n    else {\n      let u: number = rng.unif_rand() as number;\n      return location + scale * log(u / (1 - u));\n    }\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/logis/rlogis.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport {\n  M_1_SQRT_2PI,\n  M_LN_SQRT_2PI,\n  ML_ERR_return_NAN,\n  R_D__0\n} from '../common/_general';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN, POSITIVE_INFINITY: ML_POSINF } = Number;\nconst { log, exp } = Math;\nconst printer = debug('dlnorm');\n\nexport function dlnorm<T>(\n  x: T,\n  meanlog: number,\n  sdlog: number,\n  give_log: boolean\n): T {\n  return map(x)(fx => {\n    if (ISNAN(fx) || ISNAN(meanlog) || ISNAN(sdlog)) {\n      return fx + meanlog + sdlog;\n    }\n    if (sdlog <= 0) {\n      if (sdlog < 0) {\n        return ML_ERR_return_NAN(printer);\n      }\n      // sdlog == 0 :\n      return log(fx) === meanlog ? ML_POSINF : R_D__0(give_log);\n    }\n    if (fx <= 0) {\n      return R_D__0(give_log);\n    }\n    let y = (log(fx) - meanlog) / sdlog;\n    return give_log\n      ? -(M_LN_SQRT_2PI + 0.5 * y * y + log(fx * sdlog))\n      : M_1_SQRT_2PI * exp(-0.5 * y * y) / (fx * sdlog);\n    /* M_1_SQRT_2PI = 1 / sqrt(2 * pi) */\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/lognormal/dlnorm.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_DT_0 } from '../common/_general';\nimport { pnorm5 as pnorm } from '../normal/pnorm';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN } = Number;\nconst { log } = Math;\n\nconst printer = debug('plnorm');\n\nexport function plnorm<T>(\n  x: T,\n  meanlog: number = 0,\n  sdlog: number = 1,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n\n  return map(x)(fx => {\n    if (ISNAN(fx) || ISNAN(meanlog) || ISNAN(sdlog))\n      return fx + meanlog + sdlog;\n\n    if (sdlog < 0) return ML_ERR_return_NAN(printer);\n\n    if (fx > 0) return pnorm(log(fx), meanlog, sdlog, lower_tail, log_p);\n    return R_DT_0(lower_tail, log_p);\n  }) as any;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/lognormal/plnorm.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { R_Q_P01_boundaries } from '../common/_general';\n\nimport { qnorm } from '../normal/qnorm';\nimport { map } from '../r-func';\n\nconst { exp } = Math;\nconst { isNaN: ISNAN, POSITIVE_INFINITY: ML_POSINF } = Number;\n\nexport function qlnorm<T>(\n  pp: T,\n  meanlog: number = 0,\n  sdlog: number = 1,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n  return map(pp)(p => {\n    if (ISNAN(p) || ISNAN(meanlog) || ISNAN(sdlog)) return p + meanlog + sdlog;\n\n    R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n\n    return exp(qnorm(p, meanlog, sdlog, lower_tail, log_p));\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/lognormal/qlnorm.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { rnorm } from '../normal/rnorm';\nimport { arrayrify, map, seq } from '../r-func';\nimport { IRNGNormal } from '../rng/normal';\n\nconst exp = arrayrify(Math.exp);\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst printer = debug('rlnorm');\nconst sequence = seq()();\n\nexport function rlnorm(\n  N: number,\n  meanlog: number = 0,\n  sdlog: number = 1,\n  rng: IRNGNormal\n): number | number[] {\n  if (ISNAN(meanlog) || !R_FINITE(sdlog) || sdlog < 0) {\n    return map(sequence(N))(() => ML_ERR_return_NAN(printer));\n  }\n  return exp(rnorm(N, meanlog, sdlog, rng));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/lognormal/rlnorm.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport { special } from '../gamma';\nimport { any, arrayrify, flatten, sum } from '../r-func';\nconst { isFinite } = Number;\n\nconst div = arrayrify((a: number, b: number) => a / b);\nconst { lgamma } = special;\nconst add = arrayrify((a: number, b: number) => a + b);\nconst log = arrayrify(Math.log);\n\nexport interface IdmultinomOptions {\n  x: number[];\n  size?: number;\n  prob: number[];\n  asLog?: boolean;\n}\n\nexport function dmultinom(\n  o: IdmultinomOptions\n): number {\n  // init\n  // first prob and x must have the same length\n  o.asLog = !!o.asLog;\n  let x: number[] = flatten(o.x).filter(f => !!f) as any;\n  //\n  let prob: number[] = flatten(o.prob) as any;\n  let badProb = !!prob.find(f => !isFinite(f) || f < 0);\n  let s = sum(prob);\n  if (badProb || s === 0) {\n    throw new Error('probabilities must be finite, non-negative and not all 0');\n  }\n  prob = flatten(div(prob, s));\n  x = x.map(Math.round);\n  if (any(x)(v => v < 0)) {\n    throw new Error('probabilities must be finite, non-negative and not all 0');\n  }\n  const N = sum(x);\n  const size = !!o.size ? o.size : N;\n  if (size !== N) {\n    throw new Error(`size:${size} != sum(x):${N}, i.e. one is wrong`);\n  }\n  const i0 = prob.map(p => p === 0);\n  if (any(i0)(v => !!v)) {\n    if (i0.find((_v, i) => x[i] !== 0)) {\n      return o.asLog ? -Infinity : 0;\n    }\n    x = x.filter((_v, i) => i0[i]);\n    prob = prob.filter((_v, i) => i0[i]);\n  }\n  // checks after cleaning\n  const errMsg: string[] = [];\n  if (prob.length <= 1) {\n    errMsg.push(`number of propabilities need to be at least 2, it is:${prob.length}`);\n  }\n  if (x.length <= 1) {\n    errMsg.push(`number of quantiles need to be at least 2, it is :${x.length}`);\n  }\n  if (x.length !== prob.length) {\n    errMsg.push(`number of effective quantiles:${x.length} is not equal to number of effective probabilities:${prob.length}.`);\n  }\n  if (errMsg.length) {\n    throw new Error(errMsg.join('\\n'));\n  }\n  const s1 = lgamma(add(x, 1));\n  const s2 = log(prob);\n  const s3 = x.map((v, i) => v * s2[i] - s1[i]);\n\n  const r = lgamma(size + 1) + sum(s3);\n  return o.asLog ? r : Math.exp(r);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/multinom/dmultinom.ts","/* GNUv3 License\n\nCopyright (c) Jacob K. F. Bogers <jkfbogers@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nimport * as debug from 'debug';\n\nconst { isFinite: R_FINITE } = Number;\nconst { abs: fabs } = Math;\n\nimport { rbinom } from '../binomial/rbinom';\nimport { flatten, possibleScalar, seq, sum } from '../r-func';\nimport { IRNG } from '../rng/irng';\n\nconst printer_rmultinom = debug('rmultinom');\nconst sequence = seq()();\n\nexport function rmultinom(\n  n: number,\n  size: number,\n  prob: number | number[],\n  rng: IRNG\n): (number[]) | (number[][]) {\n  const result = sequence(n).map(() => _rmultinom(size, prob, rng));\n  return possibleScalar(result);\n}\n\n//workhorse\nfunction _rmultinom(\n  size: number,\n  prob: number | number[],\n  rng: IRNG\n): number[] {\n  /* `Return' vector  rN[1:K] {K := length(prob)}\n     *  where rN[j] ~ Bin(n, prob[j]) ,  sum_j rN[j] == n,  sum_j prob[j] == 1,\n     */\n  const rN: number[] = [];\n  let p = flatten(prob);\n  const K = p.length;\n  //let pp;\n  /* This calculation is sensitive to exact values, so we try to\n       ensure that the calculations are as accurate as possible\n       so different platforms are more likely to give the same\n       result. */\n\n  if (p.length === 0) {\n    printer_rmultinom('list of probabilities cannot be empty');\n    return rN;\n  }\n  if (size < 0) {\n    printer_rmultinom('Illegal Argument:size is negative');\n    rN.splice(0);\n    return rN;\n  }\n  /* Note: prob[K] is only used here for checking  sum_k prob[k] = 1 ;\n     *       Could make loop one shorter and drop that check !\n     */\n  //check probabilities\n  if (p.find(pp => !R_FINITE(pp) || pp < 0)) {\n    printer_rmultinom('some propbabilities are invalid or negative numbers');\n    rN.splice(0);\n    return rN;\n  }\n\n  rN.splice(0, rN.length, ...new Array(K).fill(0)); //remove, insert and init\n\n  if (size === 0) {\n    return rN;\n  }\n  /* Generate the first K-1 obs. via binomials */\n  // context vars for the next loop\n  let _size = size;\n  let p_tot = sum(p);\n\n  printer_rmultinom('%o', { p, p_tot, _size, K, rN });\n  for (let k = 0; k < K - 1; k++) {\n    //can happen, protect against devide by zero\n    if (fabs(p_tot) < Number.EPSILON) {\n      rN[k] = _size;\n      _size = 0;\n      p_tot = 0;\n      continue;\n    }\n\n    const pp = p[k] / p_tot;\n\n    if (pp === 0) {\n      rN[k] = 0;\n      continue;\n    }\n    // nothing left, rest will be zero\n    if (_size === 0) {\n      rN[k] = 0;\n      continue;\n    }\n    /* printf(\"[%d] %.17f\\n\", k+1, pp); */\n    rN[k] = pp < 1 ? (rbinom(1, _size, pp, rng) as number) : _size;\n    //adjust size\n    _size -= rN[k];\n    //adjust probabilities\n    p_tot -= p[k];\n    printer_rmultinom('%o', { p_tot, _size, k, rN });\n  }\n  rN[K - 1] = _size; //left over\n  return rN;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/multinom/rmultinom.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 19, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2014 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *\tThe quantile function of the Poisson distribution.\n *\n *  METHOD\n *\n *\tUses the Cornish-Fisher Expansion to include a skewness\n *\tcorrection to a normal approximation.  This gives an\n *\tinitial value which never seems to be off by more than\n *\t1 or 2.\t A search is then conducted of values close to\n *\tthis initial start point.\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nimport { NumberW } from '../common/toms708';\n\nimport { ppois } from './ppois';\n\nimport { qnorm } from '../normal/qnorm';\n\nimport { R_DT_qIv } from '../exp/expm1'; \n\nimport { map } from '../r-func';\n\nconst { max: fmax2, sqrt, floor, round: nearbyint } = Math;\nconst {\n  isNaN: ISNAN,\n  EPSILON: DBL_EPSILON,\n  POSITIVE_INFINITY: ML_POSINF,\n  isFinite: R_FINITE\n} = Number;\n\nfunction do_search(\n  y: number,\n  z: NumberW,\n  p: number,\n  lambda: number,\n  incr: number\n): number {\n  if (z.val >= p) {\n    // search to the left\n    while (true) {\n      if (y === 0 || (z.val = ppois(y - incr, lambda, true, false)) < p)\n        return y;\n      y = fmax2(0, y - incr);\n    }\n  } else {\n    // search to the right\n\n    while (true) {\n      y = y + incr;\n      if ((z.val = ppois(y, lambda, true, false)) >= p) return y;\n    }\n  }\n}\n\nexport function qpois<T>(\n  pp: T,\n  lambda: number,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n  //normal: INormal\n): T {\n  return map(pp)(p => {\n    return _qpois(p, lambda, lower_tail, log_p /*, normal*/);\n  }) as any;\n}\n\nconst printer_qpois = debug('_qpois');\n\nfunction _qpois(\n  p: number,\n  lambda: number,\n  lower_tail: boolean,\n  log_p: boolean\n  // normal: INormal\n): number {\n  let mu;\n  let sigma;\n  let gamma;\n  let y;\n  let z = new NumberW(0);\n\n  if (ISNAN(p) || ISNAN(lambda)) return p + lambda;\n\n  if (!R_FINITE(lambda)) {\n    return ML_ERR_return_NAN(printer_qpois);\n  }\n  if (lambda < 0) return ML_ERR_return_NAN(printer_qpois);\n  if (lambda === 0) return 0;\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n\n  mu = lambda;\n  sigma = sqrt(lambda);\n  /* gamma = sigma; PR#8058 should be kurtosis which is mu^-0.5 */\n  gamma = 1.0 / sigma;\n\n  /* Note : \"same\" code in qpois.c, qbinom.c, qnbinom.c --\n     * FIXME: This is far from optimal [cancellation for p ~= 1, etc]: */\n  if (!lower_tail || log_p) {\n    p = R_DT_qIv(lower_tail, log_p, p); /* need check again (cancellation!): */\n    if (p === 0) return 0;\n    if (p === 1) return ML_POSINF;\n  }\n  /* temporary hack --- FIXME --- */\n  if (p + 1.01 * DBL_EPSILON >= 1) return ML_POSINF;\n\n  /* y := approx.value (Cornish-Fisher expansion) :  */\n  z.val = qnorm(p, 0, 1, /*lower_tail*/ true, /*log_p*/ false);\n\n  y = nearbyint(mu + sigma * (z.val + gamma * (z.val * z.val - 1) / 6));\n\n  z.val = ppois(y, lambda, /*lower_tail*/ true, /*log_p*/ false);\n\n  /* fuzz to ensure left continuity; 1 - 1e-7 may lose too much : */\n  p *= 1 - 64 * DBL_EPSILON;\n\n  /* If the mean is not too large a simple search is OK */\n  if (lambda < 1e5) return do_search(y, z, p, lambda, 1);\n  /* Otherwise be a bit cleverer in the search */\n  {\n    let incr = floor(y * 0.001);\n    let oldincr;\n    do {\n      oldincr = incr;\n      y = do_search(y, z, p, lambda, incr);\n      incr = fmax2(1, floor(incr / 100));\n    } while (oldincr > 1 && incr > lambda * 1e-15);\n    return y;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/poisson/qpois.ts","'use strict';\n\n/* ===================  Knuth TAOCP  2002 ========================== */\n\n/*    This program by D E Knuth is in the public domain and freely copyable.\n *    It is explained in Seminumerical Algorithms, 3rd edition, Section 3.6\n *    (or in the errata to the 2nd edition --- see\n *        http://www-cs-faculty.stanford.edu/~knuth/taocp.html\n *    in the changes to Volume 2 on pages 171 and following).              */\n\n/*    N.B. The MODIFICATIONS introduced in the 9th printing (2002) are\n      included here; there's no backwards compatibility with the original. */\n\n    \n\n\n\nimport { fixup } from '../fixup';\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\n\nconst QUALITY = 1009; /* recommended quality level for high-res use */\nconst SEED_LEN = 101;\nconst LL = 37; /* the short lag */\nconst KK = 100; /* the long lag */\nconst TT = 70; /* guaranteed separation between streams */\nconst MM = 1073741824; /* the modulus */\n\nfunction mod_diff(x: number, y: number) {\n  const d = new Uint32Array(3); // yes we need to do 32 bit all the way\n  d[0] = x;\n  d[1] = y;\n\n  d[2] = (d[0] - d[1]) & (MM - 1);\n  return d[2];\n}\n\nfunction is_odd(x: number): boolean {\n  return x % 2 === 1;\n}\n\n\nexport class KnuthTAOCP2002 extends IRNG {\n  //\n  //\n  private qualityBuffer: ArrayBuffer;\n  private ran_arr_buf: Uint32Array;\n  //\n  //\n\n  private m_seed: Uint32Array;\n  private ran_x: Uint32Array;\n\n  private get KT_pos() {\n    return this.m_seed[100];\n  }\n\n  private set KT_pos(v: number) {\n    this.m_seed[100] = v;\n  }\n\n  private ran_array(\n    aa: Uint32Array,\n    n: number /* put n new random numbers in aa */\n  ) {\n    let i: number;\n    let j: number;\n    for (j = 0; j < KK; j++) {\n      aa[j] = this.ran_x[j];\n    }\n    for (; j < n; j++) {\n      aa[j] = mod_diff(aa[j - KK], aa[j - LL]);\n    }\n    for (i = 0; i < LL; i++, j++) {\n      this.ran_x[i] = mod_diff(aa[j - KK], aa[j - LL]);\n    }\n    for (; i < KK; i++, j++) {\n      this.ran_x[i] = mod_diff(aa[j - KK], this.ran_x[i - LL]);\n    }\n  }\n\n  private ran_arr_cycle() {\n    this.ran_array(this.ran_arr_buf, QUALITY);\n    this.ran_arr_buf[KK] = -1;\n  }\n\n  private ran_start(_seed: number) {\n    //\n    let t: number;\n    let j: number;\n    //\n    const x = new Uint32Array(KK + KK - 1);\n    //\n    const ss = new Uint32Array(1);\n    const se = new Uint32Array([_seed]);\n    //\n    ss[0] = (se[0] + 2) & (MM - 2);\n    //\n    for (j = 0; j < KK; j++) {\n      x[j] = ss[0]; /* bootstrap the buffer */\n      ss[0] = ss[0] << 1;\n      if (ss[0] >= MM) {\n        ss[0] = ss[0] - (MM - 2); /* cyclic shift 29 bits */\n      }\n    }\n    //\n    //\n    //\n    x[1]++; /* make x[1] (and only x[1]) odd */\n    for (ss[0] = se[0] & (MM - 1), t = TT - 1; t; ) {\n      for (j = KK - 1; j > 0; j--) {\n        x[j + j] = x[j];\n        x[j + j - 1] = 0; /* \"square\" */\n      }\n      for (j = KK + KK - 2; j >= KK; j--) {\n        x[j - (KK - LL)] = mod_diff(x[j - (KK - LL)], x[j]);\n        x[j - KK] = mod_diff(x[j - KK], x[j]);\n      }\n      if (is_odd(ss[0])) {\n        /* \"multiply by z\" */\n        for (j = KK; j > 0; j--) {\n          x[j] = x[j - 1];\n        }\n        x[0] = x[KK]; /* shift the buffer cyclically */\n        x[LL] = mod_diff(x[LL], x[KK]);\n      }\n      if (ss[0]) {\n        ss[0] = ss[0] >>> 1;\n      } else {\n        t--;\n      }\n    }\n    for (j = 0; j < LL; j++) {\n      this.ran_x[j + KK - LL] = x[j];\n    }\n    for (; j < KK; j++) {\n      this.ran_x[j - LL] = x[j];\n    }\n    for (j = 0; j < 10; j++) {\n      this.ran_array(x, KK + KK - 1); /* warm things up */\n    }\n  }\n\n  private RNG_Init_KT2(_seed: number) {\n    this.ran_start(_seed % 1073741821);\n    this.KT_pos = 100;\n  }\n\n  private KT_next() {\n    if (this.KT_pos >= 100) {\n      this.ran_arr_cycle();\n      this.KT_pos = 0;\n    }\n    return this.ran_x[this.KT_pos++];\n  }\n\n  constructor(_seed: number = timeseed()) {\n    super(_seed);\n  }\n\n  public _setup() {\n    this._kind = IRNGType.KNUTH_TAOCP2002;\n    this._name = 'Knuth-TAOCP-2002';\n    this.qualityBuffer = new ArrayBuffer(QUALITY * 4);\n    this.ran_arr_buf = new Uint32Array(this.qualityBuffer);\n    const buf = new ArrayBuffer(SEED_LEN * 4);\n    this.m_seed = new Uint32Array(buf).fill(0);\n    this.ran_x = this.m_seed;\n  }\n\n  protected internal_unif_rand(): number {\n    const KT = 9.31322574615479e-10;\n    return fixup(this.KT_next() * KT);\n  }\n\n  public init(_seed: number =  timeseed()) {\n    /* Initial scrambling */\n    const s = new Uint32Array([0]);\n    s[0] = _seed;\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n\n    this.RNG_Init_KT2(s[0]);\n    super.init(_seed);\n  }\n  public set seed(_seed: number[]) {\n\n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/knuth-taocp-2002/index.ts","'use strict';\n/*\n *  Javascript conversion by Jacob Bogers Nov 2017\n *  jkfbogers@gmail.com\n * \n   The following code was taken from earlier versions of\n   http://www-cs-faculty.stanford.edu/~knuth/programs/rng.c-old\n   http://www-cs-faculty.stanford.edu/~knuth/programs/rng.c\n*/\n\n\nimport { fixup } from '../fixup';\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\nimport { TAOCP1997init } from './taocp-1997-init';\n/* helpers */\n/* helpers */\n/* helpers */\nconst MM = 1 << 30; /* the modulus */\nconst KK = 100; /* the long lag */\nconst LL = 37; /* the short lag */\nconst QUALITY = 1009; /* recommended quality level for high-res use */\nconst qualityBuffer = new ArrayBuffer(QUALITY * 4);\nconst ran_arr_buf = new Uint32Array(qualityBuffer); //uint32\nconst KT = 9.31322574615479e-10; /* = 2^-30 */\nconst mod_diff = (x: number, y: number) => (x - y) & (MM - 1);\n//const is_odd = (x: number) => x & 1; /* units bit of x */\n\nconst SEED_LEN = 101;\n\nexport class KnuthTAOCP extends IRNG {\n  private buf: ArrayBuffer;\n\n  private m_seed: Int32Array;\n\n  private get KT_pos() {\n    return this.m_seed[100];\n  }\n\n  private set KT_pos(v: number) {\n    this.m_seed[100] = v;\n  }\n\n  private fixupSeeds(): void {\n    if (this.KT_pos <= 0) this.KT_pos = 100;\n    /* check for all zeroes */\n    const s = this.m_seed.slice(0, 100);\n    if (s.find(v => !!v) === undefined) this.init(timeseed());\n    return;\n  }\n\n  private KT_next() {\n    const s = this.m_seed;\n    if (this.KT_pos >= 100) {\n      this.ran_arr_cycle();\n      this.KT_pos = 0;\n    }\n    return s[this.KT_pos++];\n  }\n\n  private RNG_Init_R_KT(_seed: number) {\n    this.m_seed.set(TAOCP1997init(_seed % 1073741821));\n    this.KT_pos = 100;\n    this.fixupSeeds();\n  }\n\n  private ran_arr_cycle(): number {\n    this.ran_array(ran_arr_buf, QUALITY);\n    ran_arr_buf[KK] = -1;\n    return ran_arr_buf[0];\n  }\n\n  private ran_array(aa: Uint32Array, n: number) {\n    let i;\n    let j;\n    const ran_x = this.m_seed;\n    for (j = 0; j < KK; j++) aa[j] = ran_x[j];\n    for (; j < n; j++) aa[j] = mod_diff(aa[j - KK], aa[j - LL]);\n    for (i = 0; i < LL; i++, j++) ran_x[i] = mod_diff(aa[j - KK], aa[j - LL]);\n    for (; i < KK; i++, j++) ran_x[i] = mod_diff(aa[j - KK], ran_x[i - LL]);\n  }\n\n  public constructor(_seed = timeseed()) {\n    super(_seed);\n  }\n\n  public _setup() {\n    this.buf = new ArrayBuffer(SEED_LEN * 4);\n    this._kind = IRNGType.KNUTH_TAOCP;\n    this._name = 'Knuth-TAOCP';\n    this.m_seed = new Int32Array(this.buf).fill(0);\n  }\n\n  public init(_seed: number  =  timeseed()) {\n    /* Initial scrambling */\n    const s = new Uint32Array([0]);\n    s[0] = _seed;\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n    this.RNG_Init_R_KT(s[0]);\n    super.init(_seed);\n  }\n\n  public set seed(_seed: number[]) {\n  \n\n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  protected internal_unif_rand(): number {\n     return fixup(this.KT_next() * KT);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/knuth-taocp/index.ts","'use strict';\n/** \n * Ported by Jacob Bogers nov 2017\n#  File src/main/R/base/TAOCP.R\n#  Part of the R package, http://www.R-project.org\n#  Copyright (C) 2007 R Development Core Team\n#\n#  This program is free software; you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation; either version 2 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  A copy of the GNU General Public License is available at\n#  http://www.r-project.org/Licenses/\n*/\nimport { seq } from '../../r-func';\n\nconst { trunc } = Math;\n\n\nexport function TAOCP1997init(seed: number): Uint32Array {\n  const KK = 100;\n  const LL = 37;\n  const MM = 1073741824; // pow(2, 30);\n  const MMF = 1073741824 - 1; //\n  const KKK = 199; //KK + KK - 1;\n  const KKL = 63; //KK - LL;\n\n  let ss = seed - seed % 2 + 2;\n  const X = new Uint32Array(KKK);\n  const arr = seq(-1)();\n  for (let j of arr(1, KK)) {\n    X[j] = ss;\n    ss = ss + ss;\n    if (ss >= MM) ss = ss - MM + 2;\n  }\n  X[1]++; //not js is zero based!!\n  ss = seed;\n  let T = 69;\n\n  while (T > 0) {\n    //console.log('TopT', T);\n    for (let j of arr(KK, 2)) {\n      X[j + j] = X[j];\n    }\n    for (let j of arr(KKK, KKL + 1, -2)) {\n      X[KKK - j] = X[j] - X[j] % 2;\n    }\n\n    for (let j of arr(KKK, KK + 1)) {\n      //console.log({ j2: j - KKL, j, x:X[j]});\n      if (X[j] % 2 === 1) {\n        X[j - KKL] = (X[j - KKL] - X[j]) & MMF;\n        X[j - KK] = (X[j - KK] - X[j]) & MMF;\n      }\n    }\n\n    if (ss & 1) {\n      for (let j of arr(KK, 1)) {\n        X[j + 1] = X[j];\n      }\n      //console.log({xb:X[0], Xk:X[KK]} );\n      X[1 - 1] = X[KK + 1 - 1];\n      //  console.log({_xb:X[0], _Xk:X[KK]} );\n      //  console.log('');\n\n      if (X[KK + 1 - 1] % 2 === 1) {\n        X[LL + 1 - 1] = (X[LL + 1 - 1] - X[KK + 1 - 1]) & MMF;\n      }\n    }\n\n    if (ss) {\n      ss = trunc(ss / 2);\n    } else {\n      T = T - 1;\n    }\n  }\n\n  const res = new Uint32Array(KK);\n  res.set(X.slice(LL, KK));\n  res.set(X.slice(0, LL), KK - LL);\n  return res;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/knuth-taocp/taocp-1997-init.ts","'use strict';\n\n\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\n\nconst SEED_LEN = 6;\nconst a12 = 1403580; //least 64 bits\nconst a13n = 810728;\nconst m2 = 4294944443;\nconst m1 = 4294967087;\nconst normc = 2.328306549295727688e-10;\nconst a21 = 527612;\nconst a23n = 1370589;\n\nexport class LecuyerCMRG extends IRNG {\n  private m_seed: Int32Array;\n\n\n  constructor(_seed: number = timeseed()) {\n    super(_seed);\n  }\n\n  public _setup() {\n    this._kind = IRNGType.LECUYER_CMRG;\n    this._name = \"L'Ecuyer-CMRG\";\n    this.m_seed = new Int32Array(SEED_LEN).fill(0);\n  }\n\n  public init(se: number =  timeseed()) {\n    /* Initial scrambling */\n    const s = new Int32Array([0]);\n\n    s[0] = se;\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n    for (let j = 0; j < this.m_seed.length; j++) {\n      s[0] = 69069 * s[0] + 1;\n      while (s[0] >= m2) {\n        s[0] = 69069 * s[0] + 1;\n      }\n\n      this.m_seed[j] = s[0];\n    }\n    super.init(se);\n  }\n\n  protected internal_unif_rand(): number {\n        \n    const II = this.m_seed;\n   \n    //const pp2 = pow.bind(pow, 2);\n    //const break32 = pp2(32);\n\n    let k;\n    let p1;\n    let p2;\n\n    p1 = a12 * new Uint32Array([II[1]])[0] - a13n * new Uint32Array([II[0]])[0];\n    //here, p1 is around 50 bits, worst case\n    k = new Int32Array([p1 / m1])[0];\n    // here because k is capped to be 32 bits signed\n\n    p1 -= k * m1;\n    // here k*m1 is around 32*32 is 64 bits\n\n    if (p1 < 0.0) p1 += m1;\n\n    II[0] = II[1];\n    II[1] = II[2];\n    II[2] = new Int32Array([p1])[0];\n\n    p2 = a21 * new Uint32Array([II[5]])[0] - a23n * new Uint32Array([II[3]])[0];\n\n    k = new Int32Array([p2 / m2])[0];\n    p2 -= k * m2;\n    if (p2 < 0.0) p2 += m2;\n    II[3] = II[4];\n    II[4] = II[5];\n    II[5] = new Int32Array([p2])[0];\n\n    return (p1 > p2 ? p1 - p2 : p1 - p2 + m1) * normc;\n  }\n\n  public set seed(_seed: number[]) {\n   \n\n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/lecuyer-cmrg/index.ts","'use strict';\n\n/*\n *  Javascript conversion by Jacob Bogers Nov 2017\n *  jkfbogers@gmail.com\n * \n *  R : A Computer Language for Statistical Data Analysis\n *  Copyright (C) 1995, 1996  Robert Gentleman and Ross Ihaka\n *  Copyright (C) 1997--2016  The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n */\n\n\nimport { fixup, i2_32m1 } from '../fixup';\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\n\nconst SEED_LEN = 2;\n//const buf = new ArrayBuffer(SEED_LEN * 4);\n\nexport class MarsagliaMultiCarry extends IRNG {\n\n  private m_seed: Int32Array;\n\n  private fixupSeeds(): void {\n    const s = this.m_seed;\n    if (s[0] === 0) s[0] = 1;\n    if (s[1] === 0) s[1] = 1;\n    return;\n  }\n\n  public constructor(_seed: number = timeseed()) {\n    super(_seed);\n  }\n\n  public init(_seed: number = timeseed()) {\n    /* Initial scrambling */\n    const s = new Int32Array([_seed]);\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n    for (let j = 0; j < this.m_seed.length; j++) {\n      s[0] = 69069 * s[0] + 1;\n      this.m_seed[j] = s[0];\n    }\n    this.fixupSeeds();\n    super.init(_seed);\n  }\n\n  public _setup() {\n    this._kind = IRNGType.MARSAGLIA_MULTICARRY;\n    this._name = 'Marsaglia-MultiCarry';\n    this.m_seed = new Int32Array( new ArrayBuffer(SEED_LEN * 4)).fill(0);\n  }\n\n  protected internal_unif_rand(): number {\n    const s = this.m_seed;\n    s[0] = 36969 * (s[0] & 65535) + (s[0] >>> 16);\n    s[1] = 18000 * (s[1] & 65535) + (s[1] >>> 16);\n\n    const un = new Uint32Array(SEED_LEN);\n    un[0] = s[0] << 16;\n    un[1] = s[1] & 0xffff;\n    un[0] = un[0] ^ un[1];\n\n    //const i2_32m1 = 2.328306437080797e-10; /* = 1/(2^32 - 1) */\n\n    return fixup(un[0] * i2_32m1); /* in [0,1) */\n  }\n\n  public set seed(_seed: number[]) {\n  \n\n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/marsaglia-multicarry/index.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998   Ross Ihaka\n *  Copyright (C) 2000-9 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double norm_rand(void);\n *\n *  DESCRIPTION\n *\n *    Random variates from the STANDARD normal distribution  N(0,1).\n *\n * Is called from  rnorm(..), but also rt(), rf(), rgamma(), ...\n */\n\n/*\n *  REFERENCE\n *\n *    Ahrens, J.H. and Dieter, U.\n *    Extensions of Forsythe's method for random sampling from\n *    the normal distribution.\n *    Math. Comput. 27, 927-937.\n *\n *    The definitions of the constants a[k], d[k], t[k] and\n *    h[k] are according to the abovementioned article\n */\n\n/*-----------------------------------------------------------*/\n\nimport { IRNG } from '../'; \nimport { MersenneTwister } from '../mersenne-twister';\nimport { IRNGNormal } from './inormal-rng';\n\nconst a = [\n  0.0,\n  0.03917609,\n  0.07841241,\n  0.1177699,\n  0.1573107,\n  0.1970991,\n  0.2372021,\n  0.2776904,\n  0.3186394,\n  0.3601299,\n  0.4022501,\n  0.4450965,\n  0.4887764,\n  0.5334097,\n  0.5791322,\n  0.626099,\n  0.6744898,\n  0.7245144,\n  0.7764218,\n  0.8305109,\n  0.8871466,\n  0.9467818,\n  1.00999,\n  1.077516,\n  1.150349,\n  1.229859,\n  1.318011,\n  1.417797,\n  1.534121,\n  1.67594,\n  1.862732,\n  2.153875\n];\n\nconst d = [\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.2636843,\n  0.2425085,\n  0.2255674,\n  0.2116342,\n  0.1999243,\n  0.1899108,\n  0.1812252,\n  0.1736014,\n  0.1668419,\n  0.1607967,\n  0.1553497,\n  0.1504094,\n  0.1459026,\n  0.14177,\n  0.1379632,\n  0.1344418,\n  0.1311722,\n  0.128126,\n  0.1252791,\n  0.1226109,\n  0.1201036,\n  0.1177417,\n  0.1155119,\n  0.1134023,\n  0.1114027,\n  0.1095039\n];\n\nconst t = [\n  7.673828e-4,\n  0.00230687,\n  0.003860618,\n  0.005438454,\n  0.007050699,\n  0.008708396,\n  0.01042357,\n  0.01220953,\n  0.01408125,\n  0.01605579,\n  0.0181529,\n  0.02039573,\n  0.02281177,\n  0.02543407,\n  0.02830296,\n  0.03146822,\n  0.03499233,\n  0.03895483,\n  0.04345878,\n  0.04864035,\n  0.05468334,\n  0.06184222,\n  0.07047983,\n  0.08113195,\n  0.09462444,\n  0.1123001,\n  0.136498,\n  0.1716886,\n  0.2276241,\n  0.330498,\n  0.5847031\n];\n\nconst h = [\n  0.03920617,\n  0.03932705,\n  0.03950999,\n  0.03975703,\n  0.04007093,\n  0.04045533,\n  0.04091481,\n  0.04145507,\n  0.04208311,\n  0.04280748,\n  0.04363863,\n  0.04458932,\n  0.04567523,\n  0.04691571,\n  0.04833487,\n  0.04996298,\n  0.05183859,\n  0.05401138,\n  0.05654656,\n  0.0595313,\n  0.06308489,\n  0.06737503,\n  0.07264544,\n  0.07926471,\n  0.08781922,\n  0.09930398,\n  0.1155599,\n  0.1404344,\n  0.1836142,\n  0.2790016,\n  0.7010474\n];\n\nexport class AhrensDieter extends IRNGNormal {\n  constructor(_rng: IRNG = new MersenneTwister(0) ) {\n    super(_rng);\n  }\n\n  protected internal_norm_rand() {\n    let u1: number = this.rng.unif_rand() as number;\n    let s = 0.0;\n    let w;\n    let aa;\n    let tt;\n    let u2;\n    let y;\n    if (u1 > 0.5) {\n      s = 1.0;\n    }\n    u1 = u1 + u1 - s;\n    u1 *= 32.0;\n\n    const i = new Int32Array([u1]);\n    if (i[0] === 32) i[0] = 31;\n    if (i[0] !== 0) {\n      u2 = u1 - i[0];\n      aa = a[i[0] - 1];\n      while (u2 <= t[i[0] - 1]) {\n        u1 = this.rng.unif_rand() as number;\n        w = u1 * (a[i[0]] - aa);\n        tt = (w * 0.5 + aa) * w;\n        for (;;) {\n          if (u2 > tt) {\n            // this used to be a goto))\n            y = aa + w;\n            return s === 1.0 ? -y : y;\n          }\n          u1 = this.rng.unif_rand() as number;\n          if (u2 < u1) break;\n          tt = u1;\n          u2 = this.rng.unif_rand();\n        }\n        u2 = this.rng.unif_rand();\n      }\n      w = (u2 - t[i[0] - 1]) * h[i[0] - 1];\n    } else {\n      i[0] = 6;\n      aa = a[31];\n      for (;;) {\n        u1 = u1 + u1;\n        if (u1 >= 1.0) break;\n        aa = aa + d[i[0] - 1];\n        i[0] = i[0] + 1;\n      }\n      u1 = (u1 - 1.0) as number;\n      // used to be a goto\n      jump: for (;;) {\n        w = u1 * d[i[0] - 1];\n        tt = (w * 0.5 + aa) * w;\n        for (;;) {\n          u2 = this.rng.unif_rand() as number;\n          if (u2 > tt) break jump;\n          u1 = this.rng.unif_rand() as number;\n          if (u2 < u1) break;\n          tt = u1;\n        }\n        u1 = this.rng.unif_rand() as number;\n      }\n      //jump:; (goto label)\n    }\n    // deliver: (goto label)\n    y = aa + w;\n    return s === 1.0 ? -y : y;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/ahrens_dieter.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998   Ross Ihaka\n *  Copyright (C) 2000-9 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double norm_rand(void);\n *\n *  DESCRIPTION\n *\n *    Random variates from the STANDARD normal distribution  N(0,1).\n *\n * Is called from  rnorm(..), but also rt(), rf(), rgamma(), ...\n */\n\n/*\n *  REFERENCE\n *\n *    Ahrens, J.H. and Dieter, U.\n *    Extensions of Forsythe's method for random sampling from\n *    the normal distribution.\n *    Math. Comput. 27, 927-937.\n *\n *    The definitions of the constants a[k], d[k], t[k] and\n *    h[k] are according to the abovementioned article\n */\n\n/*-----------------------------------------------------------*/\n\nimport { IRNG } from '../';\nimport { MersenneTwister } from '../mersenne-twister';\nimport { IRNGNormal } from './inormal-rng';\n\nconst { log, sqrt, cos, sin } = Math;\n\nconst DBL_MIN = 2.22507e-308;\nconst M_PI = 3.14159265358979323846264338327950288;\n\nexport class BoxMuller extends IRNGNormal {\n  private BM_norm_keep: number;\n\n  private reset() {\n    this.BM_norm_keep = 0;\n  }\n\n  constructor(_rng: IRNG = new MersenneTwister(0) ) {\n    super(_rng);\n    this.BM_norm_keep = 0;\n    _rng.register('INIT', this.reset.bind(this));\n  }\n\n  protected internal_norm_rand() {\n    let s = 0.0;\n    let theta = 0;\n\n    if (this.BM_norm_keep !== 0.0) {\n      /* An exact test is intentional */\n      s = this.BM_norm_keep;\n      this.BM_norm_keep = 0.0;\n      return s;\n    } else {\n      theta = 2 * M_PI * (this.rng.unif_rand() as number);\n      let R =\n        sqrt(-2 * log(this.rng.unif_rand() as number)) +\n        10 * DBL_MIN; /* ensure non-zero */\n      this.BM_norm_keep = R * sin(theta);\n      return R * cos(theta);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/box-muller.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998   Ross Ihaka\n *  Copyright (C) 2000-9 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double norm_rand(void);\n *\n *  DESCRIPTION\n *\n *    Random variates from the STANDARD normal distribution  N(0,1).\n *\n * Is called from  rnorm(..), but also rt(), rf(), rgamma(), ...\n */\n\n/*\n *  REFERENCE\n *\n *    Ahrens, J.H. and Dieter, U.\n *    Extensions of Forsythe's method for random sampling from\n *    the normal distribution.\n *    Math. Comput. 27, 927-937.\n *\n *    The definitions of the constants a[k], d[k], t[k] and\n *    h[k] are according to the abovementioned article\n */\n\n/*-----------------------------------------------------------*/\n\nimport { IRNG } from '../';\nimport { MersenneTwister } from '../mersenne-twister';\nimport { IRNGNormal } from './inormal-rng';\n\nconst { log, sqrt, min: fmin2, max: fmax2, abs: fabs, exp } = Math;\n\nexport class BuggyKindermanRamage extends IRNGNormal {\n  constructor(_rng: IRNG  = new MersenneTwister(0) ) {\n    super(_rng);\n  }\n\n  protected internal_norm_rand() {\n    /* see Reference above */\n    /* note: this has problems, but is retained for\n         * reproducibility of older codes, with the same\n         * numeric code */\n\n    const A = 2.216035867166471;\n    const C1 = 0.398942280401433;\n    const C2 = 0.180025191068563;\n\n    const g = (x: number) => C1 * exp(-x * x / 2.0) - C2 * (A - x);\n\n    const u1 = this.rng.unif_rand() as number;\n    let u2: number;\n    let u3: number;\n    let tt: number;\n    if (u1 < 0.884070402298758) {\n      let u2 = this.rng.unif_rand() as number;\n      return A * (1.1311316354418 * u1 + u2 - 1);\n    }\n\n    if (u1 >= 0.973310954173898) {\n      /* tail: */\n      for (;;) {\n        u2 = this.rng.unif_rand() as number;\n        u3 = this.rng.unif_rand() as number;\n        tt = A * A - 2 * log(u3);\n        if (u2 * u2 < A * A / tt)\n          return u1 < 0.986655477086949 ? sqrt(tt) : -sqrt(tt);\n      }\n    }\n\n    if (u1 >= 0.958720824790463) {\n      /* region3: */\n      for (;;) {\n        u2 = this.rng.unif_rand() as number;\n        u3 = this.rng.unif_rand() as number;\n        tt = A - 0.63083480192196 * fmin2(u2, u3);\n        if (fmax2(u2, u3) <= 0.755591531667601) return u2 < u3 ? tt : -tt;\n        if (0.034240503750111 * fabs(u2 - u3) <= g(tt))\n          return u2 < u3 ? tt : -tt;\n      }\n    }\n\n    if (u1 >= 0.911312780288703) {\n      /* region2: */\n      for (;;) {\n        u2 = this.rng.unif_rand() as number;\n        u3 = this.rng.unif_rand() as number;\n        tt = 0.479727404222441 + 1.10547366102207 * fmin2(u2, u3);\n        if (fmax2(u2, u3) <= 0.87283497667179) return u2 < u3 ? tt : -tt;\n        if (0.049264496373128 * fabs(u2 - u3) <= g(tt))\n          return u2 < u3 ? tt : -tt;\n      }\n    }\n\n    /* ELSE\t region1: */\n    for (;;) {\n      u2 = this.rng.unif_rand() as number;\n      u3 = this.rng.unif_rand() as number;\n      tt = 0.479727404222441 - 0.59550713801594 * fmin2(u2, u3);\n      if (fmax2(u2, u3) <= 0.805577924423817) return u2 < u3 ? tt : -tt;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/buggy-kinderman-ramage.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998   Ross Ihaka\n *  Copyright (C) 2000-9 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double norm_rand(void);\n *\n *  DESCRIPTION\n *\n *    Random variates from the STANDARD normal distribution  N(0,1).\n *\n * Is called from  rnorm(..), but also rt(), rf(), rgamma(), ...\n */\n\n/*\n *  REFERENCE\n *\n *    Ahrens, J.H. and Dieter, U.\n *    Extensions of Forsythe's method for random sampling from\n *    the normal distribution.\n *    Math. Comput. 27, 927-937.\n *\n *    The definitions of the constants a[k], d[k], t[k] and\n *    h[k] are according to the abovementioned article\n */\n\n/*-----------------------------------------------------------*/\n\nimport { IRNG } from '../';\nimport { MersenneTwister } from '../mersenne-twister';\nimport { IRNGNormal } from './inormal-rng';\n\nconst { exp, log, sqrt, max: fmax2, min: fmin2, abs: fabs } = Math;\n\nconst A = 2.216035867166471;\nconst C1 = 0.398942280401433;\nconst C2 = 0.180025191068563;\n/*----------- Constants and definitions for  Kinderman - Ramage --- */\n/*\n     *  REFERENCE\n     *\n     *    Kinderman A. J. and Ramage J. G. (1976).\n     *    Computer generation of normal random variables.\n     *    JASA 71, 893-896.\n     */\nexport class KindermanRamage extends IRNGNormal {\n  constructor(_rng: IRNG  = new MersenneTwister(0) ) {\n    super(_rng);\n  }\n\n  protected internal_norm_rand() {\n    let u1;\n    let u2;\n    let u3;\n    let tt;\n    const g = (x: number) => C1 * exp(-x * x / 2.0) - C2 * (A - x);\n    // corrected version from Josef Leydold\n\n    u1 = this.rng.unif_rand();\n\n    if (u1 < 0.884070402298758) {\n      u2 = this.rng.unif_rand();\n      return A * (1.13113163544418 * u1 + u2 - 1);\n    }\n\n    if (u1 >= 0.973310954173898) {\n      /* tail: */\n      for (;;) {\n        u2 = this.rng.unif_rand();\n        u3 = this.rng.unif_rand();\n        tt = A * A - 2 * log(u3);\n        if (u2 * u2 < A * A / tt)\n          return u1 < 0.986655477086949 ? sqrt(tt) : -sqrt(tt);\n      }\n    }\n\n    if (u1 >= 0.958720824790463) {\n      /* region3: */\n      for (;;) {\n        u2 = this.rng.unif_rand();\n        u3 = this.rng.unif_rand();\n        tt = A - 0.63083480192196 * fmin2(u2, u3);\n        if (fmax2(u2, u3) <= 0.755591531667601) return u2 < u3 ? tt : -tt;\n        if (0.034240503750111 * fabs(u2 - u3) <= g(tt))\n          return u2 < u3 ? tt : -tt;\n      }\n    }\n\n    if (u1 >= 0.911312780288703) {\n      /* region2: */\n      for (;;) {\n        u2 = this.rng.unif_rand();\n        u3 = this.rng.unif_rand();\n        tt = 0.479727404222441 + 1.10547366102207 * fmin2(u2, u3);\n        if (fmax2(u2, u3) <= 0.87283497667179) return u2 < u3 ? tt : -tt;\n        if (0.049264496373128 * fabs(u2 - u3) <= g(tt))\n          return u2 < u3 ? tt : -tt;\n      }\n    }\n\n    /* ELSE\t region1: */\n    for (;;) {\n      u2 = this.rng.unif_rand();\n      u3 = this.rng.unif_rand();\n      tt = 0.479727404222441 - 0.59550713801594 * fmin2(u2, u3);\n      if (tt < 0) continue;\n      if (fmax2(u2, u3) <= 0.805577924423817) return u2 < u3 ? tt : -tt;\n      if (0.053377549506886 * fabs(u2 - u3) <= g(tt)) return u2 < u3 ? tt : -tt;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/normal/kinderman-ramage.ts","'use strict';\n\n/*\n *  Javascript conversion by Jacob Bogers Nov 2017\n *  jkfbogers@gmail.com\n * \n *  R : A Computer Language for Statistical Data Analysis\n *  Copyright (C) 1995, 1996  Robert Gentleman and Ross Ihaka\n *  Copyright (C) 1997--2016  The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n */\n\n\nimport { fixup, i2_32m1 } from '../fixup';\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\n\nconst SEED_LEN = 2;\nconst buf = new ArrayBuffer(SEED_LEN * 4);\n\nexport class SuperDuper extends IRNG {\n \n  private m_seed: Int32Array;\n\n  constructor(_seed: number = timeseed()) {\n    super(_seed);\n  }\n\n  public _setup() {\n    this._kind = IRNGType.SUPER_DUPER;\n    this._name = 'Super-Duper';\n    this.m_seed = new Int32Array(buf).fill(0);\n  }\n\n  protected internal_unif_rand(): number {\n    const s = this.m_seed;\n    /* This is Reeds et al (1984) implementation;\n               * modified using __unsigned__\tseeds instead of signed ones\n               */\n\n    s[0] ^= (s[0] >>> 15) & 0x1ffff; /* ) 0377777 = 0x1FFFF Tausworthe */\n    s[0] ^= s[0] << 17;\n    s[1] *= 69069; /* Congruential */\n    const un = new Uint32Array(SEED_LEN);\n    un[0] = s[0];\n    un[1] = s[1];\n    un[0] = un[0] ^ un[1];\n    return fixup(un[0] * i2_32m1); /* in [0,1) */\n  }\n\n  private fixupSeeds(): void {\n    const s = this.m_seed;\n    if (s[0] === 0) s[0] = 1;\n    /* I2 = Congruential: must be ODD */\n    s[1] |= 1;\n    return;\n  }\n\n  public init(_seed: number  =  timeseed()) {\n    /* Initial scrambling */\n    const s = new Uint32Array([_seed]);\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n    for (let j = 0; j < this.m_seed.length; j++) {\n      s[0] = 69069 * s[0] + 1;\n      this.m_seed[j] = s[0];\n    }\n    this.fixupSeeds();\n    super.init(_seed);\n  }\n\n  public set seed(_seed: number[]) {\n   \n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/super-duper/index.ts","'use strict';\n/*\n *  Javascript conversion by Jacob Bogers Nov 2017\n *  jkfbogers@gmail.com\n * \n *  The Wichmann–Hill generator has a cycle length of 6.9536e12\n *  (= prod(p-1)/4, see Applied Statistics (1984) 33,\n *  123 which corrects the original article).\n * \n *  R : A Computer Language for Statistical Data Analysis\n *  Copyright (C) 1995, 1996  Robert Gentleman and Ross Ihaka\n *  Copyright (C) 1997--2016  The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n */\n\nconst { trunc } = Math;\nconst frac = (x: number) => x - trunc(x);\n\nimport { fixup } from '../fixup';\nimport { IRNG } from '../irng';\nimport { IRNGType } from '../irng-type';\nimport { timeseed } from '../timeseed';\n\nconst SEED_LEN = 3;\n\nexport class WichmannHill extends IRNG {\n\n  private m_seed: Uint32Array;\n\n  constructor(_seed: number = timeseed()) {\n    super(_seed);\n  }\n\n\n  public _setup() {\n    this._kind = IRNGType.WICHMANN_HILL;\n    this._name = 'Wichmann-Hill';\n    const buf = new ArrayBuffer(SEED_LEN * 4);\n    this.m_seed = new Uint32Array(buf).fill(0);\n  }\n\n  protected internal_unif_rand(): number {\n    const s = this.m_seed;\n    s[0] = (s[0] * 171) % 30269;\n    s[1] = (s[1] * 172) % 30307;\n    s[2] = (s[2] * 170) % 30323;\n\n    let value = s[0] / 30269.0 + s[1] / 30307.0 + s[2] / 30323.0;\n\n    return fixup(frac(value)); /* in [0,1) */\n  }\n\n  public fixupSeeds(): void {\n    const s = this.m_seed;\n    s[0] = s[0] % 30269;\n    s[1] = s[1] % 30307;\n    s[2] = s[2] % 30323;\n\n    if (s[0] === 0) s[0] = 1;\n    if (s[1] === 0) s[1] = 1;\n    if (s[2] === 0) s[2] = 1;\n    return;\n  }\n\n  public init(seed: number =  timeseed()) {\n    /* Initial scrambling */\n    const s = new Uint32Array([seed]);\n\n    for (let j = 0; j < 50; j++) {\n      s[0] = 69069 * s[0] + 1;\n    }\n    for (let j = 0; j < this.m_seed.length; j++) {\n      s[0] = 69069 * s[0] + 1;\n      this.m_seed[j] = s[0];\n    }\n    this.fixupSeeds();\n    super.init(seed);\n  }\n\n  public set seed(_seed: number[]) {\n    \n\n    if (_seed.length > this.m_seed.length || _seed.length === 0) {\n      this.init(timeseed());\n      return;\n    }\n    this.m_seed.set(_seed);\n  }\n\n  public get seed() {\n    return Array.from(this.m_seed);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/rng/wichmann-hill/index.ts","import { imin2 } from '../common/_general';\n\nexport function csignrank(\n    k: number,\n    n: number,\n    u: number,\n    c: number,\n    w: number[]\n  ): number {\n    if (k < 0 || k > u) return 0;\n    if (k > c) k = u - k;\n  \n    if (n === 1) return 1;\n    if (w[0] === 1) return w[k];\n    w[0] = w[1] = 1;\n    for (let j = 2; j < n + 1; ++j) {\n      let i;\n      let end = imin2(j * (j + 1) / 2, c);\n      for (i = end; i >= j; --i) w[i] += w[i - j];\n    }\n    return w[k];\n  }\n  \n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/csignrank.ts","/** \n * Ported from R (signrank.c) by Jacob Bogers\n * jkfbogers@gmail\n * GNU GENERAL PUBLIC LICENSE\n */\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_D__0, R_D_exp } from '../common/_general';\nimport { csignrank } from './csignrank';\n\nconst { round, trunc, abs: fabs, log, LN2: M_LN2 } = Math;\nconst { isNaN: ISNAN } = Number;\n\nconst printer_dsignrank = debug('dsignrank');\n\nexport function dsignrank<T>(xx: T, n: number, logX: boolean = false): T {\n  const rn = round(n);\n  const u = rn * (rn + 1) / 2;\n  const c = trunc(u / 2);\n  const w = new Array(c + 1).fill(0);\n\n  const fx: number[] = (Array.isArray(xx) ? xx : [xx]) as any;\n  const result = fx.map(x => {\n    if (ISNAN(x) || ISNAN(n)) return x + n;\n\n    if (n <= 0) {\n      return ML_ERR_return_NAN(printer_dsignrank);\n    }\n    if (fabs(x - round(x)) > 1e-7) {\n      return R_D__0(logX);\n    }\n    x = round(x);\n    if (x < 0 || x > n * (n + 1) / 2) {\n      return R_D__0(logX);\n    }\n    let d = R_D_exp(logX, log(csignrank(trunc(x), n, u, c, w)) - n * M_LN2);\n    return d;\n  });\n  return (result.length === 1 ? result[0] : result) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/dsign.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  MArch 5, 2017\n * \n *  ORIGINAL AUHTOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *    #include <Rmath.h>\n *    double fsign(double x, double y);\n *\n *  DESCRIPTION\n *\n *    This function performs transfer of sign.  The result is:\n *\n *                        |x| * signum(y)\n */\n\nconst { abs:fabs } = Math;\nconst { isNaN:ISNAN } = Number;\n\n// needed by rpois\nexport function fsign(x: number, signal: boolean) {\n    if (ISNAN(x)) return x;\n    return signal ? fabs(x) : -fabs(x); \n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/fsign.ts","import * as debug from 'debug';\nimport {\n  ML_ERR_return_NAN,\n  R_DT_0,\n  R_DT_1,\n  R_DT_val\n} from '../common/_general';\nimport { map } from '../r-func';\nimport { csignrank } from './signrank';\n\nconst { round, trunc, LN2: M_LN2, exp } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\nconst printer_psignrank = debug('psignrank');\n\nexport function psignrank<T>(\n  xx: T,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const roundN = round(n);\n  const u = roundN * (roundN + 1) / 2;\n  const c = trunc(u / 2);\n  const w = new Array(c + 1).fill(0);\n\n  return map(xx)(x => {\n    x = round(x + 1e-7);\n    let lowerT = lowerTail; // temp copy on each iteration\n    if (ISNAN(x) || ISNAN(n)) return NaN;\n    if (!R_FINITE(n)) return ML_ERR_return_NAN(printer_psignrank);\n    if (n <= 0) return ML_ERR_return_NAN(printer_psignrank);\n\n    if (x < 0.0) {\n      return R_DT_0(lowerTail, logP);\n    }\n\n    if (x >= u) {\n      return R_DT_1(lowerTail, logP); //returns 1 on the edge case or 0 (because log(1)= 0)\n    }\n    let f = exp(-roundN * M_LN2);\n    let p = 0;\n    if (x <= u / 2) {\n      //smaller then mean\n      for (let i = 0; i <= x; i++) {\n        p += csignrank(i, roundN, u, c, w) * f;\n      }\n    } else {\n      x = n * (n + 1) / 2 - x;\n      for (let i = 0; i < x; i++) {\n        p += csignrank(i, roundN, u, c, w) * f;\n      }\n      lowerT = !lowerT; /* p = 1 - p; */\n    }\n    return R_DT_val(lowerT, logP, p);\n  }) as any;\n} /* psignrank() */\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/psign.ts","import * as debug from 'debug';\nimport {\n  ML_ERR_return_NAN,\n  R_DT_0,\n  R_DT_1,\n  R_Q_P01_check\n} from '../common/_general';\nimport { R_DT_qIv } from '../exp/expm1';\n\nimport { map } from '../r-func';\nimport { csignrank } from './signrank';\n\nconst { round, trunc, LN2: M_LN2, exp } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE, EPSILON: DBL_EPSILON } = Number;\nconst printer_qsignrank = debug('qsignrank');\n\nexport function qsignrank<T>(\n  xx: T,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  const roundN = round(n);\n  const u = roundN * (roundN + 1) / 2;\n  const c = trunc(u / 2);\n  const w = new Array(c + 1).fill(0);\n\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(n)) {\n      return NaN;\n    }\n\n    if (/*!R_FINITE(x) ||*/ !R_FINITE(n)) {\n      return ML_ERR_return_NAN(printer_qsignrank);\n    }\n\n    let rc = R_Q_P01_check(logP, x);\n    if (rc !== undefined) {\n      return rc;\n    }\n\n    if (roundN <= 0) {\n      return ML_ERR_return_NAN(printer_qsignrank);\n    }\n\n    if (x === R_DT_0(lowerTail, logP)) {\n      return 0;\n    }\n\n    if (x === R_DT_1(lowerTail, logP)) {\n      return u;\n    }\n\n    if (logP || !lowerTail) {\n      x = R_DT_qIv(lowerTail, logP, x); // lower_tail, non-log \"p\"\n    }\n\n    //this.w_init_maybe(n);\n    let f = exp(-n * M_LN2);\n    let p = 0;\n    let q = 0;\n    if (x <= 0.5) {\n      x = x - 10 * DBL_EPSILON;\n      while (true) {\n        p += csignrank(q, roundN, u, c, w) * f;\n        if (p >= x) break;\n        q++;\n      }\n    } else {\n      x = 1 - x + 10 * DBL_EPSILON;\n      while (true) {\n        p += csignrank(q, roundN, u, c, w) * f;\n        if (p > x) {\n          q = trunc(u - q);\n          break;\n        }\n        q++;\n      }\n    }\n    return q;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/qsign.ts","import * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { map, seq } from '../r-func';\nimport { IRNG } from '../rng/irng';\n\nconst { isNaN: ISNAN } = Number;\nconst { floor, round } = Math;\nconst printer_rsignrank = debug('rsignrank');\nconst sequence = seq()();\n\nexport function rsignrank(nn: number, n: number, rng: IRNG): number | number[] {\n  return map(sequence(nn))(() => {\n    /* NaNs propagated correctly */\n    if (ISNAN(n)) return n;\n    const nRound = round(n);\n    if (nRound < 0) return ML_ERR_return_NAN(printer_rsignrank);\n\n    if (nRound === 0) return 0;\n    let r = 0.0;\n    let k = floor(nRound);\n    for (let i = 0; i < k /**/; ) {\n      r += ++i * floor((rng.unif_rand() as number) + 0.5);\n    }\n    return r;\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/signrank/rsign.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 4, 2017\n * \n *  ORIGINAL AUTHOR:\n *  AUTHOR\n *    Claus Ekstr�m, ekstrom@dina.kvl.dk\n *    July 15, 2003.\n *\n *  Merge in to R:\n *\tCopyright (C) 2003-2015 The R Foundation\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *\n *  NOTE\n *\n *    Requires the following auxiliary routines:\n *\n *\tlgammafn(x)\t- log gamma function\n *\tpnt(x, df, ncp) - the distribution function for\n *\t\t\t  the non-central t distribution\n *\n *\n * DESCRIPTION\n *\n *    From Johnson, Kotz and Balakrishnan (1995) [2nd ed.; formula (31.15), p.516],\n *    the non-central t density is\n *\n *      f(x, df, ncp) =\n *\n *        exp(-.5*ncp^2) * gamma((df+1)/2) / (sqrt(pi*df)* gamma(df/2)) * (df/(df+x^2))^((df+1)/2) *\n *          sum_{j=0}^Inf  gamma((df+j+1)/2)/(factorial(j)* gamma((df+1)/2)) * (x*ncp*sqrt(2)/sqrt(df+x^2))^ j\n *\n *\n *    The functional relationship\n *\n *\t   f(x, df, ncp) = df/x *\n *\t\t\t      (F(sqrt((df+2)/df)*x, df+2, ncp) - F(x, df, ncp))\n *\n *    is used to evaluate the density at x != 0 and\n *\n *\t   f(0, df, ncp) = exp(-.5*ncp^2) /\n *\t\t\t\t(sqrt(pi)*sqrt(df)*gamma(df/2))*gamma((df+1)/2)\n *\n *    is used for x=0.\n *\n *    All calculations are done on log-scale to increase stability.\n *\n * FIXME: pnt() is known to be inaccurate in the (very) left tail and for ncp > 38\n *       ==> use a direct log-space summation formula in that case\n */\nimport * as debug from 'debug';\nimport { M_LN_SQRT_PI, ML_ERR_return_NAN, R_D__0 } from '../common/_general';\n\nimport { lgammafn } from '../gamma/lgamma_fn';\nimport {  dnorm4 as dnorm } from '../normal/dnorm';\nimport { map } from '../r-func';\nimport { dt } from './dt';\nimport { pnt } from './pnt';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE, EPSILON: DBL_EPSILON } = Number;\nconst { abs: fabs, sqrt, log, exp } = Math;\n\nconst printer_dnt = debug('dnt');\nexport function dnt<T>(\n  xx: T,\n  df: number,\n  ncp: number = 0,\n  giveLog: boolean = false\n): T {\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(df)) return x + df;\n\n    /* If non-positive df then error */\n    if (df <= 0.0) return ML_ERR_return_NAN(printer_dnt);\n\n    if (ncp === 0.0) return dt(x, df, giveLog);\n\n    /* If x is infinite then return 0 */\n    if (!R_FINITE(x)) return R_D__0(giveLog);\n\n    /* If infinite df then the density is identical to a\n       normal distribution with mean = ncp.  However, the formula\n       loses a lot of accuracy around df=1e9\n    */\n    if (!R_FINITE(df) || df > 1e8) return dnorm(x, ncp, 1, giveLog);\n\n    /* Do calculations on log scale to stabilize */\n\n    /* Consider two cases: x ~= 0 or not */\n    const u = function() {\n      if (fabs(x) > sqrt(df * DBL_EPSILON)) {\n        printer_dnt('fabs(x:%d)>sqrt(df*espsilon):%d', fabs(x), sqrt(df * DBL_EPSILON));\n        return (\n          log(df) -\n          log(fabs(x)) +\n          log(\n            fabs(\n              pnt(x * sqrt((df + 2) / df), df + 2, ncp, true, false) -\n                pnt(x, df, ncp, true, false)\n            )\n          )\n        );\n        /* FIXME: the above still suffers from cancellation (but not horribly) */\n      } else {\n        /* x ~= 0 : -> same value as for  x = 0 */\n        printer_dnt('fabs(x:%d)<=sqrt(df*espsilon):%d', fabs(x), sqrt(df * DBL_EPSILON));\n        return (\n          lgammafn((df + 1) / 2) -\n          lgammafn(df / 2) -\n          (M_LN_SQRT_PI + 0.5 * (log(df) + ncp * ncp))\n        );\n      }\n    }();\n    printer_dnt('u=%d, giveLog=%s', u, giveLog);\n    return giveLog ? u : exp(u);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/dnt.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 19, 2017\n *\n *  ORIGINAL AUTHOR\n *  R : A Computer Language for Statistical Data Analysis\n *  Copyright (C) 2006-2015 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n * \n *  quantily function of the commulative  probability of the non-central t-distribution\n */\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\nimport { R_DT_qIv } from '../exp/expm1';\nimport { qnorm } from '../normal/qnorm';\nimport { map } from '../r-func';\nimport { pnt } from './pnt';\nimport { qt } from './qt';\n\nconst { abs: fabs, max: fmax2, min: fmin2 } = Math;\nconst {\n  MAX_VALUE: DBL_MAX,\n  EPSILON: DBL_EPSILON,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF,\n  NEGATIVE_INFINITY: ML_NEGINF,\n  isNaN: ISNAN\n} = Number;\nconst printer = debug('qnt');\n\nexport function qnt<T>(\n  pp: T,\n  df: number,\n  ncp: number,\n  lowerTail: boolean,\n  logP: boolean\n): T {\n  return map(pp)(p => _qnt(p, df, ncp, lowerTail, logP)) as any;\n}\n\nfunction _qnt(\n  p: number,\n  df: number,\n  ncp: number,\n  lower_tail: boolean,\n  log_p: boolean\n) {\n  const accu = 1e-13;\n  const Eps = 1e-11; /* must be > accu */\n\n  let ux;\n  let lx;\n  let nx;\n  let pp;\n\n  if (ISNAN(p) || ISNAN(df) || ISNAN(ncp)) return p + df + ncp;\n\n  /* Was\n     * df = floor(df + 0.5);\n     * if (df < 1 || ncp < 0) ML_ERR_return_NAN;\n     */\n  if (df <= 0.0) return ML_ERR_return_NAN(printer);\n\n  if (ncp === 0.0 && df >= 1.0) return qt(p, df, lower_tail, log_p);\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, ML_NEGINF, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n  if (!R_FINITE(df))\n    // df = Inf ==> limit N(ncp,1)\n    return qnorm(p, ncp, 1, lower_tail, log_p);\n\n  p = R_DT_qIv(lower_tail, log_p, p);\n\n  /* Invert pnt(.) :\n     * 1. finding an upper and lower bound */\n  if (p > 1 - DBL_EPSILON) return ML_POSINF;\n  pp = fmin2(1 - DBL_EPSILON, p * (1 + Eps));\n  for (\n    ux = fmax2(1, ncp);\n    ux < DBL_MAX && pnt(ux, df, ncp, true, false) < pp;\n    ux *= 2\n  );\n  pp = p * (1 - Eps);\n  for (\n    lx = fmin2(-1, -ncp);\n    lx > -DBL_MAX && pnt(lx, df, ncp, true, false) > pp;\n    lx *= 2\n  );\n\n  /* 2. interval (lx,ux)  halving : */\n  do {\n    nx = 0.5 * (lx + ux); // could be zero\n    if (pnt(nx, df, ncp, true, false) > p) ux = nx;\n    else lx = nx;\n  } while (ux - lx > accu * fmax2(fabs(lx), fabs(ux)));\n\n  return 0.5 * (lx + ux);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/qnt.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 26, 2017\n * \n *  ORGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2008 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    Pseudo-random variates from a t distribution.\n *\n *  NOTES\n *\n *    This function calls rchisq and rnorm to do the real work.\n */\n\nimport * as debug from 'debug';\n\nimport { rchisq } from '../chi-2/rchisq';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { map, seq } from '../r-func';\nimport { IRNGNormal } from '../rng/normal';\n\nconst { sqrt } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst sequence = seq()();\n\nconst printer = debug('rt');\n\nexport function rt(n: number, df: number, rng: IRNGNormal): number | number[] {\n  return map(sequence(n))(() => {\n    if (ISNAN(df) || df <= 0.0) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (!R_FINITE(df)) return rng.norm_rand();\n    else {\n      /* Some compilers (including MW6) evaluated this from right to left\n            return norm_rand() / sqrt(rchisq(df) / df); */\n\n      let num = rng.norm_rand() as number;\n      return num / sqrt((rchisq(1, df, rng) as number) / df);\n    }\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/student-t/rt.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 20, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 \t     Ross Ihaka\n *  Copyright (C) 2000--2005 The R Core Team\n *  based in part on AS70 (C) 1974 Royal Statistical Society\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  SYNOPSIS\n *\n *\t#include <Rmath.h>\n *\tdouble qtukey(p, rr, cc, df, lower_tail, log_p);\n *\n *  DESCRIPTION\n *\n *\tComputes the quantiles of the maximum of rr studentized\n *\tranges, each based on cc means and with df degrees of freedom\n *\tfor the standard error, is less than q.\n *\n *\tThe algorithm is based on that of the reference.\n *\n *  REFERENCE\n *\n *\tCopenhaver, Margaret Diponzio & Holland, Burt S.\n *\tMultiple comparisons of simple effects in\n *\tthe two-way analysis of variance with fixed effects.\n *\tJournal of Statistical Computation and Simulation,\n *\tVol.30, pp.1-15, 1988.\n */\n\n/* qinv() :\n *\tthis function finds percentage point of the studentized range\n *\twhich is used as initial estimate for the secant method.\n *\tfunction is adapted from portion of algorithm as 70\n *\tfrom applied statistics (1974) ,vol. 23, no. 1\n *\tby odeh, r. e. and evans, j. o.\n *\n *\t  p = percentage point\n *\t  c = no. of columns or treatments\n *\t  v = degrees of freedom\n *\t  qinv = returned initial estimate\n *\n *\tvmax is cutoff above which degrees of freedom\n *\tis treated as infinity.\n */\n\nconst { sqrt, log } = Math;\n\nfunction qinv(p: number, c: number, v: number): number {\n  const p0 = 0.322232421088;\n  const q0 = 0.99348462606e-1;\n  const p1 = -1.0;\n  const q1 = 0.588581570495;\n  const p2 = -0.342242088547;\n  const q2 = 0.531103462366;\n  const p3 = -0.204231210125;\n  const q3 = 0.10353775285;\n  const p4 = -0.453642210148e-4;\n  const q4 = 0.38560700634e-2;\n  const c1 = 0.8832;\n  const c2 = 0.2368;\n  const c3 = 1.214;\n  const c4 = 1.208;\n  const c5 = 1.4142;\n  const vmax = 120.0;\n\n  let ps;\n  let q;\n  let t;\n  let yi;\n\n  ps = 0.5 - 0.5 * p;\n  yi = sqrt(log(1.0 / (ps * ps)));\n  t =\n    yi +\n    ((((yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0) /\n      ((((yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * log(c - 1.0) + c5);\n}\n\n/*\n *  Copenhaver, Margaret Diponzio & Holland, Burt S.\n *  Multiple comparisons of simple effects in\n *  the two-way analysis of variance with fixed effects.\n *  Journal of Statistical Computation and Simulation,\n *  Vol.30, pp.1-15, 1988.\n *\n *  Uses the secant method to find critical values.\n *\n *  p = confidence level (1 - alpha)\n *  rr = no. of rows or groups\n *  cc = no. of columns or treatments\n *  df = degrees of freedom of error term\n *\n *  ir(1) = error flag = 1 if wprob probability > 1\n *  ir(2) = error flag = 1 if ptukey probability > 1\n *  ir(3) = error flag = 1 if convergence not reached in 50 iterations\n *\t\t       = 2 if df < 2\n *\n *  qtukey = returned critical value\n *\n *  If the difference between successive iterates is less than eps,\n *  the search is terminated\n */\n\nimport * as debug from 'debug';\n\nimport { ME, ML_ERR_return_NAN, ML_ERROR, R_Q_P01_boundaries } from '../common/_general';\n\nimport { R_DT_qIv } from '../exp/expm1';\nimport { map } from '../r-func';\nimport { _ptukey } from './ptukey';\n\nconst { isNaN: ISNAN, POSITIVE_INFINITY: ML_POSINF } = Number;\nconst { abs: fabs, max: fmax2 } = Math;\nconst printer = debug('qtukey');\n/**\n> qtukey\nfunction (p, nmeans, df, nranges = 1, lower.tail = TRUE, log.p = FALSE)\n.Call(C_qtukey, p, nranges, nmeans, df, lower.tail, log.p)\n<bytecode: 0x000000001cde4a80>\n<environment: namespace:stats>\n\n*/\nexport function qtukey<T>(\n  pp: T, //p\n  rr: number, //ranges\n  cc: number, //nmeans\n  df: number, //df\n  lower_tail: boolean = true, //lower.tail\n  log_p: boolean = false //log.p\n): T {\n  return map(pp)(p =>\n    _qtukey(p, rr, cc, df, lower_tail, log_p)\n  ) as any;\n}\n\n\nfunction _qtukey(\n  p: number,\n  rr: number,\n  cc: number,\n  df: number,\n  lower_tail: boolean,\n  log_p: boolean\n): number {\n  const eps = 0.0001;\n  const maxiter = 50;\n\n  let ans = 0.0;\n  let valx0;\n  let valx1;\n  let x0;\n  let x1;\n  let xabs;\n  let iter;\n\n  if (ISNAN(p) || ISNAN(rr) || ISNAN(cc) || ISNAN(df)) {\n    ML_ERROR(ME.ME_DOMAIN, 'qtukey', printer);\n    return NaN;\n  }\n\n  /* df must be > 1 ; there must be at least two values */\n  if (df < 2 || rr < 1 || cc < 2) return ML_ERR_return_NAN(printer);\n\n  let rc = R_Q_P01_boundaries(lower_tail, log_p, p, 0, ML_POSINF);\n  if (rc !== undefined) {\n    return rc;\n  }\n\n  p = R_DT_qIv(lower_tail, log_p, p); /* lower_tail,non-log \"p\" */\n\n  /* Initial value */\n\n  x0 = qinv(p, cc, df);\n\n  /* Find prob(value < x0) */\n\n  valx0 = _ptukey(x0, rr, cc, df, /*LOWER*/ true, /*LOG_P*/ false) - p;\n\n  /* Find the second iterate and prob(value < x1). */\n  /* If the first iterate has probability value */\n  /* exceeding p then second iterate is 1 less than */\n  /* first iterate; otherwise it is 1 greater. */\n\n  if (valx0 > 0.0) x1 = fmax2(0.0, x0 - 1.0);\n  else x1 = x0 + 1.0;\n  valx1 = _ptukey(x1, rr, cc, df, /*LOWER*/ true, /*LOG_P*/ false) - p;\n\n  /* Find new iterate */\n\n  for (iter = 1; iter < maxiter; iter++) {\n    ans = x1 - valx1 * (x1 - x0) / (valx1 - valx0);\n    valx0 = valx1;\n\n    /* New iterate must be >= 0 */\n\n    x0 = x1;\n    if (ans < 0.0) {\n      ans = 0.0;\n      valx1 = -p;\n    }\n    /* Find prob(value < new iterate) */\n\n    valx1 =\n      _ptukey(ans, rr, cc, df, /*LOWER*/ true, /*LOG_P*/ false) - p;\n    x1 = ans;\n\n    /* If the difference between two successive */\n    /* iterates is less than eps, stop */\n\n    xabs = fabs(x1 - x0);\n    if (xabs < eps) return ans;\n  }\n\n  /* The process did not converge in 'maxiter' iterations */\n  ML_ERROR(ME.ME_NOCONV, 'qtukey', printer);\n  return ans;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/tukey/qtukey.ts","\nimport { M_1_SQRT_2PI } from '../common/_general';\nimport { pnorm5 as pnorm } from '../normal/pnorm';\n\nconst { exp, pow } = Math;\n\nconst bb = 8;\nconst C2 = -50;\nconst wlar = 3;\nconst wincr1 = 2;\nconst wincr2 = 3;\nconst nleg = 12;\nconst ihalf = 6;\n\nconst xleg = [\n  0.981560634246719250690549090149,\n  0.904117256370474856678465866119,\n  0.769902674194304687036893833213,\n  0.587317954286617447296702418941,\n  0.367831498998180193752691536644,\n  0.125233408511468915472441369464\n];\n\nconst aleg = [\n  0.047175336386511827194615961485,\n  0.106939325995318430960254718194,\n  0.160078328543346226334652529543,\n  0.20316742672306592174906445581,\n  0.233492536538354808760849898925,\n  0.249147045813402785000562436043\n];\n\nconst C3 = 60;\nconst C1 = -30;\n\nexport function wprob(w: number, rr: number, cc: number): number {\n  /*  wprob() :\n      \n          This function calculates probability integral of Hartley's\n          form of the range.\n      \n          w     = value of range\n          rr    = no. of rows or groups\n          cc    = no. of columns or treatments\n          ir    = error flag = 1 if pr_w probability > 1\n          pr_w = returned probability integral from (0, w)\n      \n          program will not terminate if ir is raised.\n      \n          bb = upper limit of legendre integration\n          iMax = maximum acceptable value of integral\n          nleg = order of legendre quadrature\n          ihalf = int ((nleg + 1) / 2)\n          wlar = value of range above which wincr1 intervals are used to\n                 calculate second part of integral,\n                 else wincr2 intervals are used.\n          C1, C2, C3 = values which are used as cutoffs for terminating\n          or modifying a calculation.\n      \n          M_1_SQRT_2PI = 1 / sqrt(2 * pi);  from abramowitz & stegun, p. 3.\n          M_SQRT2 = sqrt(2)\n          xleg = legendre 12-point nodes\n          aleg = legendre 12-point coefficients\n       */\n\n  /* looks like this is suboptimal for double precision.\n         (see how C1-C3 are used) <MM>\n      */\n  /* const double iMax  = 1.; not used if = 1*/\n  //\n  //double\n  //\n  let a: number;\n  let ac: number;\n  let pr_w: number;\n  let b: number;\n  let binc: number;\n  let c: number;\n  let cc1: number;\n  let pminus: number;\n  let pplus: number;\n  let qexpo: number;\n  let qsqz: number;\n  let rinsum: number;\n  let wi: number;\n  let wincr: number;\n  let xx: number;\n  let blb: number;\n  let bub: number;\n  let einsum: number;\n  let elsum: number;\n  //\n  // int\n  //\n  let j: number;\n\n  qsqz = w * 0.5;\n\n  /* if w >= 16 then the integral lower bound (occurs for c=20) */\n  /* is 0.99999999999995 so return a value of 1. */\n\n  if (qsqz >= bb) {\n    return 1.0;\n  }\n\n  /* find (f(w/2) - 1) ^ cc */\n  /* (first term in integral of hartley's form). */\n\n  pr_w =\n    2 * pnorm(qsqz, 0, 1, true, false) - 1; /* erf(qsqz / M_SQRT2) */\n  /* if pr_w ^ cc < 2e-22 then set pr_w = 0 */\n  if (pr_w >= exp(C2 / cc)) pr_w = pow(pr_w, cc);\n  else pr_w = 0.0;\n\n  /* if w is large then the second component of the */\n  /* integral is small, so fewer intervals are needed. */\n\n  if (w > wlar) wincr = wincr1;\n  else wincr = wincr2;\n\n  /* find the integral of second term of hartley's form */\n  /* for the integral of the range for equal-length */\n  /* intervals using legendre quadrature.  limits of */\n  /* integration are from (w/2, 8).  two or three */\n  /* equal-length intervals are used. */\n\n  /* blb and bub are lower and upper limits of integration. */\n\n  blb = qsqz;\n  binc = (bb - qsqz) / wincr;\n  bub = blb + binc;\n  einsum = 0.0;\n\n  /* integrate over each interval */\n\n  cc1 = cc - 1.0;\n  for (wi = 1; wi <= wincr; wi++) {\n    elsum = 0.0;\n    a = 0.5 * (bub + blb);\n\n    /* legendre quadrature with order = nleg */\n\n    b = 0.5 * (bub - blb);\n\n    for (let jj = 1; jj <= nleg; jj++) {\n      if (ihalf < jj) {\n        j = nleg - jj + 1;\n        xx = xleg[j - 1];\n      } else {\n        j = jj;\n        xx = -xleg[j - 1];\n      }\n      c = b * xx;\n      ac = a + c;\n\n      /* if exp(-qexpo/2) < 9e-14, */\n      /* then doesn't contribute to integral */\n\n      qexpo = ac * ac;\n      if (qexpo > C3) break;\n\n      pplus = 2 * pnorm(ac, 0, 1, true, false);\n      pminus = 2 * pnorm(ac, w, 1, true, false);\n\n      /* if rinsum ^ (cc-1) < 9e-14, */\n      /* then doesn't contribute to integral */\n\n      rinsum = pplus * 0.5 - pminus * 0.5;\n      if (rinsum >= exp(C1 / cc1)) {\n        rinsum = aleg[j - 1] * exp(-(0.5 * qexpo)) * pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= 2.0 * b * cc * M_1_SQRT_2PI;\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  /* if pr_w ^ rr < 9e-14, then return 0 */\n  pr_w += einsum;\n  if (pr_w <= exp(C1 / rr)) return 0;\n\n  pr_w = pow(pr_w, rr);\n  if (pr_w >= 1)\n    /* 1 was iMax was eps */\n    return 1;\n  return pr_w;\n} /* wprob() */\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/tukey/wprob.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  Feb 10, 2017\n * \n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n * \n *  License for JS language implementation\n *  https://www.jacob-bogers/libRmath.js/Licenses/\n * \n *  License for R statistical package\n *  https://www.r-project.org/Licenses/\n * \n * */\n\nimport { R_D__0 } from '../common/_general';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN } = Number;\nconst { log } = Math;\n\nexport function dunif(\n  x: number | number[],\n  min: number = 0,\n  max: number = 1,\n  logP: boolean = false\n): number | number[] {\n  return map(x)(fx => {\n    if (ISNAN(fx) || ISNAN(min) || ISNAN(max)) {\n      return fx + min + max;\n    }\n    if (min <= fx && fx <= max) {\n      return logP ? -log(max - min) : 1 / (max - min);\n    }\n    return R_D__0(logP); // return logP ? ML_NEGINF : 0.0;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/uniform/dunif.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 18, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2006 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    The distribution function of the uniform distribution.\n */\nimport * as debug from 'debug';\nconst printer = debug('punif');\n\nimport { ML_ERR_return_NAN, R_D_val, R_DT_0, R_DT_1 } from '../common/_general';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\n\nexport function punif(\n  q: number | number[],\n  min: number = 0,\n  max: number = 1,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): number | number[] {\n  return map(q)(fx => {\n    if (ISNAN(fx) || ISNAN(min) || ISNAN(max)) {\n      return fx + min + max;\n    }\n\n    if (max < min) {\n      return ML_ERR_return_NAN(printer);\n    }\n    if (!R_FINITE(min) || !R_FINITE(max)) {\n      return ML_ERR_return_NAN(printer);\n    }\n\n    if (fx >= max) {\n      return R_DT_1(lowerTail, logP);\n    }\n    if (fx <= min) {\n      return R_DT_0(lowerTail, logP);\n    }\n    if (lowerTail) {\n      return R_D_val(logP, (fx - min) / (max - min));\n    }\n    return R_D_val(logP, (max - fx) / (max - min));\n  }) as any; \n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/uniform/punif.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 20, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2006 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    The quantile function of the uniform distribution.\n */\n\nimport { ML_ERR_return_NAN, R_Q_P01_check } from '../common/_general';\n\nimport * as debug from 'debug';\nimport { R_DT_qIv } from '../exp/expm1';\nimport { map } from '../r-func';\n\nconst { isNaN: ISNAN, isFinite: R_FINITE } = Number;\nconst printer = debug('qunif');\n\nexport function qunif(\n  p: number | number[],\n  min: number = 0,\n  max: number = 1,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): number | number[] {\n  return map(p)(fp => {\n    if (ISNAN(fp) || ISNAN(min) || ISNAN(max)) return NaN;\n\n    let rc = R_Q_P01_check(logP, fp);\n    if (rc !== undefined) {\n      return rc;\n    }\n    if (!R_FINITE(min) || !R_FINITE(max)) return ML_ERR_return_NAN(printer);\n    if (max < min) return ML_ERR_return_NAN(printer);\n    if (max === min) return min;\n\n    return min + R_DT_qIv(lowerTail, logP, fp) * (max - min);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/uniform/qunif.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  Februari 5, 2017\n *  ORIGNAL AUTHOR\n *  Using Node or Javascript Native implementation (when running in browser)\n *  \n *  Other RNG's by George Marsaglia from newshourp comp.lang.c 2003-May-13   \n * \n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  *  License for JS language implementation\n *  https://www.jacob-bogers/libRmath.js/Licenses/\n * \n*/\n\nimport * as debug from 'debug';\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { IRNG } from '../rng';\n\nconst { isFinite: R_FINITE } = Number;\nconst printer = debug('runif');\n\nexport function runif(\n  n: number = 1,\n  min: number = 0,\n  max: number = 1,\n  u: IRNG\n): number | number[] {\n\n  if (!(R_FINITE(min) && R_FINITE(max) && max > min)) {\n    return ML_ERR_return_NAN(printer);\n  }\n\n  let result = new Array(n).fill(0).map(() => {\n    const s = u.unif_rand() as number;\n    return (max - min) * s + min;\n  });\n\n  return result.length === 1 ? result[0] : result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/uniform/runif.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  MArch 4, 2017\n * \n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-6 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    The density function of the Weibull distribution.\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_D__0 } from '../common/_general';\nimport { map } from '../r-func';\n\nconst { pow, log, exp } = Math;\nconst {\n  isNaN: ISNAN,\n  isFinite: R_FINITE,\n  POSITIVE_INFINITY: ML_POSINF\n} = Number;\nconst printer = debug('dweilbull');\n\nexport function dweibull<T>(\n  xx: T,\n  shape: number,\n  scale: number = 1,\n  give_log: boolean = false\n): T {\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(shape) || ISNAN(scale)) return x + shape + scale;\n    if (shape <= 0 || scale <= 0) return ML_ERR_return_NAN(printer);\n\n    if (x < 0) return R_D__0(give_log);\n    if (!R_FINITE(x)) return R_D__0(give_log);\n    /* need to handle x == 0 separately */\n    if (x === 0 && shape < 1) return ML_POSINF;\n    let tmp1 = pow(x / scale, shape - 1);\n    let tmp2 = tmp1 * (x / scale);\n    /* These are incorrect if tmp1 == 0 */\n    return give_log\n      ? -tmp2 + log(shape * tmp1 / scale)\n      : shape * tmp1 * exp(-tmp2) / scale;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/weibull/dweibull.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 18, 2017\n *\n * ORIGNAL AUTHORS\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000-2015 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    The distribution function of the Weibull distribution.\n */\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_D_exp, R_DT_0 } from '../common/_general';\n\nimport { R_Log1_Exp } from '../exp/expm1';\n\nimport { map } from '../r-func';\n\nconst { expm1, pow } = Math;\nconst { isNaN: ISNAN } = Number;\nconst printer = debug('pweibull');\n\nexport function pweibull<T>(\n  xx: T,\n  shape: number,\n  scale: number = 1,\n  lower_tail: boolean = true,\n  log_p: boolean = false\n): T {\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(shape) || ISNAN(scale)) return x + shape + scale;\n\n    if (shape <= 0 || scale <= 0) return ML_ERR_return_NAN(printer);\n\n    if (x <= 0) {\n      return R_DT_0(lower_tail, log_p);\n    }\n    x = -pow(x / scale, shape);\n    return lower_tail ? (log_p ? R_Log1_Exp(x) : -expm1(x)) : R_D_exp(log_p, x);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/weibull/pweibull.ts","/*  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 20, 2017\n *\n *  ORIGINAL AUTHOR\n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000 The R Core Team\n *  Copyright (C) 2005 The R Foundation\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    The quantile function of the Weibull distribution.\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_Q_P01_boundaries } from '../common/_general';\n\nimport { R_DT_Clog } from '../exp/expm1';\nimport { map } from '../r-func';\n\nconst { pow } = Math;\nconst { isNaN: ISNAN, POSITIVE_INFINITY: ML_POSINF } = Number;\nconst printer = debug('qweibull');\n\nexport function qweibull<T>(\n  pp: T,\n  shape: number,\n  scale: number = 1,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  return map(pp)(p => {\n    if (ISNAN(p) || ISNAN(shape) || ISNAN(scale)) return p + shape + scale;\n\n    if (shape <= 0 || scale <= 0) return ML_ERR_return_NAN(printer);\n\n    let rc = R_Q_P01_boundaries(lowerTail, logP, p, 0, ML_POSINF);\n    if (rc !== undefined) {\n      return rc;\n    }\n    return scale * pow(-R_DT_Clog(lowerTail, logP, p), 1 / shape);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/weibull/qweibull.ts","/*\n *  AUTHOR\n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORIGNAL AUTHOR\n * \n *  Mathlib : A C Library of Special Functions\n *  Copyright (C) 1998 Ross Ihaka\n *  Copyright (C) 2000 The R Core Team\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this program; if not, a copy is available at\n *  https://www.R-project.org/Licenses/\n *\n *  DESCRIPTION\n *\n *    Random variates from the Weibull distribution.\n */\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { possibleScalar } from '../r-func';\nimport { IRNG } from '../rng';\n\nconst { log, pow } = Math;\nconst { isFinite: R_FINITE } = Number;\nconst printer = debug('rweibull');\n\nexport function rweibull(\n  n: number,\n  shape: number,\n  scale: number = 1,\n  rng: IRNG\n): number | number[] {\n  const result = new Array(n).fill(0).map(() => {\n    if (!R_FINITE(shape) || !R_FINITE(scale) || shape <= 0 || scale <= 0) {\n      if (scale === 0) return 0;\n      /* else */\n      return ML_ERR_return_NAN(printer);\n    }\n\n    return scale * pow(-log((rng.unif_rand() as number)), 1.0 / shape);\n  });\n  return possibleScalar(result);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/weibull/rweibull.ts","/*\n *  AUTHOR\n * \n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORIGINAL AUTHOR\n  Mathlib : A C Library of Special Functions\n  Copyright (C) 1999-2014  The R Core Team\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or (at\n  your option) any later version.\n\n  This program is distributed in the hope that it will be useful, but\n  WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU\n  General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, a copy is available at\n  https://www.R-project.org/Licenses/\n\n  SYNOPSIS\n\n    #include <Rmath.h>\n    double dwilcox(double x, double m, double n, int give_log)\n    double pwilcox(double x, double m, double n, int lower_tail, int log_p)\n    double qwilcox(double x, double m, double n, int lower_tail, int log_p);\n    double rwilcox(double m, double n)\n\n  DESCRIPTION\n\n    dwilcox\tThe density of the Wilcoxon distribution.\n    pwilcox\tThe distribution function of the Wilcoxon distribution.\n    qwilcox\tThe quantile function of the Wilcoxon distribution.\n    rwilcox\tRandom variates from the Wilcoxon distribution.\n\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_D__0 } from '../common/_general';\nimport { internal_choose, internal_lchoose } from '../common/choose';\nimport { map } from '../r-func';\nimport { cwilcox } from './cwilcox';\nimport { WilcoxonCache } from './WilcoxonCache';\n\nconst { round: R_forceint, abs: fabs, log } = Math;\nconst { isNaN: ISNAN } = Number;\n\nconst printer_dwilcox = debug('dwilcox');\n\n\nexport function dwilcox<T>(\n  xx: T,\n  m: number,\n  n: number,\n  giveLog: boolean = false\n): T {\n  // outside the potential loop\n\n  m = R_forceint(m);\n  n = R_forceint(n);\n\n  //const nm = m * n;\n \n  return map(xx)(x => {\n   \n    const w = new WilcoxonCache();\n    //#ifdef IEEE_754\n    /* NaNs propagated correctly */\n\n    if (ISNAN(x) || ISNAN(m) || ISNAN(n)) {\n     // console.log(`1. x:${x}, m:${m}, n:${n}`);\n      return (x + m + n);\n    }\n    //#endif\n\n    if (m <= 0 || n <= 0) {\n     // console.log(`2. x:${x}, m:${m}, n:${n}`);\n      return ML_ERR_return_NAN(printer_dwilcox);\n    }\n\n    if (fabs(x - R_forceint(x)) > 1e-7) {\n     // console.log(`3. x:${x}, m:${m}, n:${n}`);\n      return R_D__0(giveLog);\n    }\n    x = R_forceint(x);\n    if (x < 0 || x > m * n) {\n      return R_D__0(giveLog);\n    }\n    //const w = initw(m, n);\n    //console.log(`0. special: ${w[4][4].length}`);\n    //const c1 = cwilcox(x, m, n, w);\n    \n    //console.log(`4. c1:${c1} <- x:${x}, m:${m}, n:${n}`);\n    return giveLog\n      ? log(cwilcox(x, m, n, w)) - internal_lchoose(m + n, n)\n      : cwilcox(x, m, n, w) / internal_choose(m + n, n);\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/dwilcox.ts","/*\n *  AUTHOR\n * \n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORIGINAL AUTHOR\n  Mathlib : A C Library of Special Functions\n  Copyright (C) 1999-2014  The R Core Team\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or (at\n  your option) any later version.\n\n  This program is distributed in the hope that it will be useful, but\n  WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU\n  General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, a copy is available at\n  https://www.R-project.org/Licenses/\n\n  SYNOPSIS\n\n    #include <Rmath.h>\n    double dwilcox(double x, double m, double n, int give_log)\n    double pwilcox(double x, double m, double n, int lower_tail, int log_p)\n    double qwilcox(double x, double m, double n, int lower_tail, int log_p);\n    double rwilcox(double m, double n)\n\n  DESCRIPTION\n\n    dwilcox\tThe density of the Wilcoxon distribution.\n    pwilcox\tThe distribution function of the Wilcoxon distribution.\n    qwilcox\tThe quantile function of the Wilcoxon distribution.\n    rwilcox\tRandom variates from the Wilcoxon distribution.\n\n */\n\n \nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN, R_DT_0, R_DT_1, R_DT_val } from '../common/_general';\nimport { internal_choose } from '../common/choose';\nimport { map } from '../r-func';\n\nimport { WilcoxonCache } from './WilcoxonCache';\n\nimport { cwilcox } from './cwilcox';\n\nconst { round:R_forceint, floor} = Math;\nconst { isNaN:ISNAN, isFinite:R_FINITE } = Number;\n\nconst printer_pwilcox = debug('pwilcox');\nexport function pwilcox<T>(\n  qq: T,\n  m: number,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  m = R_forceint(m);\n  n = R_forceint(n);\n \n\n  return map(qq)(q => {\n    \n    const w = new WilcoxonCache();\n\n    let lower_tail = lowerTail;\n    if (ISNAN(q) || ISNAN(m) || ISNAN(n)) return q + m + n;\n    if (!R_FINITE(m) || !R_FINITE(n)) return ML_ERR_return_NAN(printer_pwilcox);\n\n    if (m <= 0 || n <= 0) return ML_ERR_return_NAN(printer_pwilcox);\n\n    q = floor(q + 1e-7);\n\n    if (q < 0.0) return R_DT_0(lower_tail, logP);\n    if (q >= m * n) return R_DT_1(lower_tail, logP);\n\n    //let mm = m;\n   // let nn = n;\n    //w_init_maybe(mm, nn);\n    let c = internal_choose(m + n, n);\n    let p = 0;\n    /* Use summation of probs over the shorter range */\n    if (q <= m * n / 2) {\n      for (let i = 0; i <= q; i++) p += cwilcox(i, m, n, w) / c;\n    } else {\n      q = m * n - q;\n      for (let i = 0; i < q; i++) p += cwilcox(i, m, n, w) / c;\n      lower_tail = !lower_tail; /* p = 1 - p; */\n    }\n\n    return R_DT_val(lower_tail, logP, p);\n  }) as any;\n} /* pwilcox */\n\n/* x is 'p' in R function qwilcox */\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/pwilcox.ts","/*\n *  AUTHOR\n * \n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORIGINAL AUTHOR\n  Mathlib : A C Library of Special Functions\n  Copyright (C) 1999-2014  The R Core Team\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or (at\n  your option) any later version.\n\n  This program is distributed in the hope that it will be useful, but\n  WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU\n  General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, a copy is available at\n  https://www.R-project.org/Licenses/\n\n  SYNOPSIS\n\n    #include <Rmath.h>\n    double dwilcox(double x, double m, double n, int give_log)\n    double pwilcox(double x, double m, double n, int lower_tail, int log_p)\n    double qwilcox(double x, double m, double n, int lower_tail, int log_p);\n    double rwilcox(double m, double n)\n\n  DESCRIPTION\n\n    dwilcox\tThe density of the Wilcoxon distribution.\n    pwilcox\tThe distribution function of the Wilcoxon distribution.\n    qwilcox\tThe quantile function of the Wilcoxon distribution.\n    rwilcox\tRandom variates from the Wilcoxon distribution.\n\n */\n\n \nimport * as debug from 'debug';\n\nimport {\n  ML_ERR_return_NAN,\n  R_DT_0,\n  R_DT_1,\n  R_Q_P01_check\n} from '../common/_general';\nimport { R_DT_qIv } from '../exp/expm1';\nimport { map } from '../r-func';\nimport { cwilcox } from './cwilcox';\nimport { WilcoxonCache } from './WilcoxonCache';\n\nimport { internal_choose } from '../common/choose';\n\nconst { round: R_forceint, trunc } = Math;\nconst { isNaN: ISNAN, isFinite: R_FINITE, EPSILON: DBL_EPSILON } = Number;\n\nconst printer_qwilcox = debug('qwilcox');\n\nexport function qwilcox<T>(\n  xx: T,\n  m: number,\n  n: number,\n  lowerTail: boolean = true,\n  logP: boolean = false\n): T {\n  m = R_forceint(m);\n  n = R_forceint(n);\n  const w = new WilcoxonCache();\n\n  return map(xx)(x => {\n    if (ISNAN(x) || ISNAN(m) || ISNAN(n)) return x + m + n;\n    if (!R_FINITE(x) || !R_FINITE(m) || !R_FINITE(n))\n      return ML_ERR_return_NAN(printer_qwilcox);\n    R_Q_P01_check(logP, x);\n\n    if (m <= 0 || n <= 0) return ML_ERR_return_NAN(printer_qwilcox);\n\n    if (x === R_DT_0(lowerTail, logP)) return 0;\n    if (x === R_DT_1(lowerTail, logP)) return m * n;\n\n    if (logP || !lowerTail)\n      x = R_DT_qIv(lowerTail, logP, x); /* lower_tail,non-log \"p\" */\n\n    let c = internal_choose(m + n, n);\n    let p = 0;\n    let q = 0;\n    if (x <= 0.5) {\n      x = x - 10 * DBL_EPSILON;\n      while (true) {\n        p += cwilcox(q, m, n, w) / c;\n        if (p >= x) break;\n        q++;\n      }\n    } else {\n      x = 1 - x + 10 * DBL_EPSILON;\n      while (true) {\n        p += cwilcox(q, m, n, w) / c;\n        if (p > x) {\n          q = trunc(m * n - q);\n          break;\n        }\n        q++;\n      }\n    }\n    return q;\n  }) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/qwilcox.ts","/*\n *  AUTHOR\n * \n *  Jacob Bogers, jkfbogers@gmail.com\n *  March 25, 2017\n * \n *  ORIGINAL AUTHOR\n  Mathlib : A C Library of Special Functions\n  Copyright (C) 1999-2014  The R Core Team\n\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or (at\n  your option) any later version.\n\n  This program is distributed in the hope that it will be useful, but\n  WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\tSee the GNU\n  General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, a copy is available at\n  https://www.R-project.org/Licenses/\n\n  SYNOPSIS\n\n    #include <Rmath.h>\n    double dwilcox(double x, double m, double n, int give_log)\n    double pwilcox(double x, double m, double n, int lower_tail, int log_p)\n    double qwilcox(double x, double m, double n, int lower_tail, int log_p);\n    double rwilcox(double m, double n)\n\n  DESCRIPTION\n\n    dwilcox\tThe density of the Wilcoxon distribution.\n    pwilcox\tThe distribution function of the Wilcoxon distribution.\n    qwilcox\tThe quantile function of the Wilcoxon distribution.\n    rwilcox\tRandom variates from the Wilcoxon distribution.\n\n */\n\nimport * as debug from 'debug';\n\nimport { ML_ERR_return_NAN } from '../common/_general';\nimport { possibleScalar, seq } from '../r-func';\nimport { IRNG } from '../rng';\n\nconst printer_rwilcox = debug('rwilcox');\nconst { round: R_forceint, trunc, floor } = Math;\nconst { isNaN: ISNAN } = Number;\n\nexport function rwilcox(\n  N: number,\n  m: number,\n  n: number,\n  rng: IRNG\n): number | number[] {\n  const result = new Array(N).fill(0).map(() => {\n    /* NaNs propagated correctly */\n    if (ISNAN(m) || ISNAN(n)) return m + n;\n\n    m = R_forceint(m);\n    n = R_forceint(n);\n    if (m < 0 || n < 0) return ML_ERR_return_NAN(printer_rwilcox);\n\n    if (m === 0 || n === 0) return 0;\n\n    let r = 0.0;\n    let k = trunc(m + n);\n    let x: number[] = seq()()(0, k - 1);\n    printer_rwilcox(`------v`);\n    for (let i = 0; i < n; i++) {\n      let j = floor(k * (rng.unif_rand() as number));\n      r += x[j];\n      x[j] = x[--k];\n      printer_rwilcox('i:%d,\\tn:%d\\tj:%d\\tk:%d\\tr:%d\\tx:%o', i, n, j, k, x);\n    }\n\n    return r - n * (n - 1) / 2;\n  });\n  return possibleScalar(result);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader??ref--0!./src/lib/wilcoxon/rwilcox.ts","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/debug.js\n// module id = 181\n// module chunks = 0 1","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 182\n// module chunks = 0 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 183\n// module chunks = 0 1"],"sourceRoot":""}